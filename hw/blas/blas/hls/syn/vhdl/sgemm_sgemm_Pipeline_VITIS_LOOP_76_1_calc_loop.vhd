-- ==============================================================
-- Generated by Vitis HLS v2023.2
-- Copyright 1986-2022 Xilinx, Inc. All Rights Reserved.
-- Copyright 2022-2023 Advanced Micro Devices, Inc. All Rights Reserved.
-- ==============================================================

library IEEE;
use IEEE.std_logic_1164.all;
use IEEE.numeric_std.all;

entity sgemm_sgemm_Pipeline_VITIS_LOOP_76_1_calc_loop is
port (
    ap_clk : IN STD_LOGIC;
    ap_rst : IN STD_LOGIC;
    ap_start : IN STD_LOGIC;
    ap_done : OUT STD_LOGIC;
    ap_idle : OUT STD_LOGIC;
    ap_ready : OUT STD_LOGIC;
    m_axi_B_AWVALID : OUT STD_LOGIC;
    m_axi_B_AWREADY : IN STD_LOGIC;
    m_axi_B_AWADDR : OUT STD_LOGIC_VECTOR (63 downto 0);
    m_axi_B_AWID : OUT STD_LOGIC_VECTOR (0 downto 0);
    m_axi_B_AWLEN : OUT STD_LOGIC_VECTOR (31 downto 0);
    m_axi_B_AWSIZE : OUT STD_LOGIC_VECTOR (2 downto 0);
    m_axi_B_AWBURST : OUT STD_LOGIC_VECTOR (1 downto 0);
    m_axi_B_AWLOCK : OUT STD_LOGIC_VECTOR (1 downto 0);
    m_axi_B_AWCACHE : OUT STD_LOGIC_VECTOR (3 downto 0);
    m_axi_B_AWPROT : OUT STD_LOGIC_VECTOR (2 downto 0);
    m_axi_B_AWQOS : OUT STD_LOGIC_VECTOR (3 downto 0);
    m_axi_B_AWREGION : OUT STD_LOGIC_VECTOR (3 downto 0);
    m_axi_B_AWUSER : OUT STD_LOGIC_VECTOR (0 downto 0);
    m_axi_B_WVALID : OUT STD_LOGIC;
    m_axi_B_WREADY : IN STD_LOGIC;
    m_axi_B_WDATA : OUT STD_LOGIC_VECTOR (511 downto 0);
    m_axi_B_WSTRB : OUT STD_LOGIC_VECTOR (63 downto 0);
    m_axi_B_WLAST : OUT STD_LOGIC;
    m_axi_B_WID : OUT STD_LOGIC_VECTOR (0 downto 0);
    m_axi_B_WUSER : OUT STD_LOGIC_VECTOR (0 downto 0);
    m_axi_B_ARVALID : OUT STD_LOGIC;
    m_axi_B_ARREADY : IN STD_LOGIC;
    m_axi_B_ARADDR : OUT STD_LOGIC_VECTOR (63 downto 0);
    m_axi_B_ARID : OUT STD_LOGIC_VECTOR (0 downto 0);
    m_axi_B_ARLEN : OUT STD_LOGIC_VECTOR (31 downto 0);
    m_axi_B_ARSIZE : OUT STD_LOGIC_VECTOR (2 downto 0);
    m_axi_B_ARBURST : OUT STD_LOGIC_VECTOR (1 downto 0);
    m_axi_B_ARLOCK : OUT STD_LOGIC_VECTOR (1 downto 0);
    m_axi_B_ARCACHE : OUT STD_LOGIC_VECTOR (3 downto 0);
    m_axi_B_ARPROT : OUT STD_LOGIC_VECTOR (2 downto 0);
    m_axi_B_ARQOS : OUT STD_LOGIC_VECTOR (3 downto 0);
    m_axi_B_ARREGION : OUT STD_LOGIC_VECTOR (3 downto 0);
    m_axi_B_ARUSER : OUT STD_LOGIC_VECTOR (0 downto 0);
    m_axi_B_RVALID : IN STD_LOGIC;
    m_axi_B_RREADY : OUT STD_LOGIC;
    m_axi_B_RDATA : IN STD_LOGIC_VECTOR (511 downto 0);
    m_axi_B_RLAST : IN STD_LOGIC;
    m_axi_B_RID : IN STD_LOGIC_VECTOR (0 downto 0);
    m_axi_B_RFIFONUM : IN STD_LOGIC_VECTOR (8 downto 0);
    m_axi_B_RUSER : IN STD_LOGIC_VECTOR (0 downto 0);
    m_axi_B_RRESP : IN STD_LOGIC_VECTOR (1 downto 0);
    m_axi_B_BVALID : IN STD_LOGIC;
    m_axi_B_BREADY : OUT STD_LOGIC;
    m_axi_B_BRESP : IN STD_LOGIC_VECTOR (1 downto 0);
    m_axi_B_BID : IN STD_LOGIC_VECTOR (0 downto 0);
    m_axi_B_BUSER : IN STD_LOGIC_VECTOR (0 downto 0);
    m_axi_A_AWVALID : OUT STD_LOGIC;
    m_axi_A_AWREADY : IN STD_LOGIC;
    m_axi_A_AWADDR : OUT STD_LOGIC_VECTOR (63 downto 0);
    m_axi_A_AWID : OUT STD_LOGIC_VECTOR (0 downto 0);
    m_axi_A_AWLEN : OUT STD_LOGIC_VECTOR (31 downto 0);
    m_axi_A_AWSIZE : OUT STD_LOGIC_VECTOR (2 downto 0);
    m_axi_A_AWBURST : OUT STD_LOGIC_VECTOR (1 downto 0);
    m_axi_A_AWLOCK : OUT STD_LOGIC_VECTOR (1 downto 0);
    m_axi_A_AWCACHE : OUT STD_LOGIC_VECTOR (3 downto 0);
    m_axi_A_AWPROT : OUT STD_LOGIC_VECTOR (2 downto 0);
    m_axi_A_AWQOS : OUT STD_LOGIC_VECTOR (3 downto 0);
    m_axi_A_AWREGION : OUT STD_LOGIC_VECTOR (3 downto 0);
    m_axi_A_AWUSER : OUT STD_LOGIC_VECTOR (0 downto 0);
    m_axi_A_WVALID : OUT STD_LOGIC;
    m_axi_A_WREADY : IN STD_LOGIC;
    m_axi_A_WDATA : OUT STD_LOGIC_VECTOR (255 downto 0);
    m_axi_A_WSTRB : OUT STD_LOGIC_VECTOR (31 downto 0);
    m_axi_A_WLAST : OUT STD_LOGIC;
    m_axi_A_WID : OUT STD_LOGIC_VECTOR (0 downto 0);
    m_axi_A_WUSER : OUT STD_LOGIC_VECTOR (0 downto 0);
    m_axi_A_ARVALID : OUT STD_LOGIC;
    m_axi_A_ARREADY : IN STD_LOGIC;
    m_axi_A_ARADDR : OUT STD_LOGIC_VECTOR (63 downto 0);
    m_axi_A_ARID : OUT STD_LOGIC_VECTOR (0 downto 0);
    m_axi_A_ARLEN : OUT STD_LOGIC_VECTOR (31 downto 0);
    m_axi_A_ARSIZE : OUT STD_LOGIC_VECTOR (2 downto 0);
    m_axi_A_ARBURST : OUT STD_LOGIC_VECTOR (1 downto 0);
    m_axi_A_ARLOCK : OUT STD_LOGIC_VECTOR (1 downto 0);
    m_axi_A_ARCACHE : OUT STD_LOGIC_VECTOR (3 downto 0);
    m_axi_A_ARPROT : OUT STD_LOGIC_VECTOR (2 downto 0);
    m_axi_A_ARQOS : OUT STD_LOGIC_VECTOR (3 downto 0);
    m_axi_A_ARREGION : OUT STD_LOGIC_VECTOR (3 downto 0);
    m_axi_A_ARUSER : OUT STD_LOGIC_VECTOR (0 downto 0);
    m_axi_A_RVALID : IN STD_LOGIC;
    m_axi_A_RREADY : OUT STD_LOGIC;
    m_axi_A_RDATA : IN STD_LOGIC_VECTOR (255 downto 0);
    m_axi_A_RLAST : IN STD_LOGIC;
    m_axi_A_RID : IN STD_LOGIC_VECTOR (0 downto 0);
    m_axi_A_RFIFONUM : IN STD_LOGIC_VECTOR (8 downto 0);
    m_axi_A_RUSER : IN STD_LOGIC_VECTOR (0 downto 0);
    m_axi_A_RRESP : IN STD_LOGIC_VECTOR (1 downto 0);
    m_axi_A_BVALID : IN STD_LOGIC;
    m_axi_A_BREADY : OUT STD_LOGIC;
    m_axi_A_BRESP : IN STD_LOGIC_VECTOR (1 downto 0);
    m_axi_A_BID : IN STD_LOGIC_VECTOR (0 downto 0);
    m_axi_A_BUSER : IN STD_LOGIC_VECTOR (0 downto 0);
    RM : IN STD_LOGIC_VECTOR (7 downto 0);
    mul_ln97 : IN STD_LOGIC_VECTOR (15 downto 0);
    add_ln70 : IN STD_LOGIC_VECTOR (62 downto 0);
    empty_27 : IN STD_LOGIC_VECTOR (62 downto 0);
    zext_ln72 : IN STD_LOGIC_VECTOR (30 downto 0);
    B_offset : IN STD_LOGIC_VECTOR (63 downto 0);
    Cv_address0 : OUT STD_LOGIC_VECTOR (3 downto 0);
    Cv_ce0 : OUT STD_LOGIC;
    Cv_we0 : OUT STD_LOGIC;
    Cv_d0 : OUT STD_LOGIC_VECTOR (15 downto 0);
    Cv_q0 : IN STD_LOGIC_VECTOR (15 downto 0);
    add_ln69 : IN STD_LOGIC_VECTOR (62 downto 0);
    empty : IN STD_LOGIC_VECTOR (62 downto 0);
    A_offset : IN STD_LOGIC_VECTOR (63 downto 0) );
end;


architecture behav of sgemm_sgemm_Pipeline_VITIS_LOOP_76_1_calc_loop is 
    constant ap_const_logic_1 : STD_LOGIC := '1';
    constant ap_const_logic_0 : STD_LOGIC := '0';
    constant ap_ST_fsm_pp0_stage0 : STD_LOGIC_VECTOR (8 downto 0) := "000000001";
    constant ap_ST_fsm_pp0_stage1 : STD_LOGIC_VECTOR (8 downto 0) := "000000010";
    constant ap_ST_fsm_pp0_stage2 : STD_LOGIC_VECTOR (8 downto 0) := "000000100";
    constant ap_ST_fsm_pp0_stage3 : STD_LOGIC_VECTOR (8 downto 0) := "000001000";
    constant ap_ST_fsm_pp0_stage4 : STD_LOGIC_VECTOR (8 downto 0) := "000010000";
    constant ap_ST_fsm_pp0_stage5 : STD_LOGIC_VECTOR (8 downto 0) := "000100000";
    constant ap_ST_fsm_pp0_stage6 : STD_LOGIC_VECTOR (8 downto 0) := "001000000";
    constant ap_ST_fsm_pp0_stage7 : STD_LOGIC_VECTOR (8 downto 0) := "010000000";
    constant ap_ST_fsm_pp0_stage8 : STD_LOGIC_VECTOR (8 downto 0) := "100000000";
    constant ap_const_lv32_0 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000000000";
    constant ap_const_boolean_1 : BOOLEAN := true;
    constant ap_const_lv32_8 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000001000";
    constant ap_const_lv1_0 : STD_LOGIC_VECTOR (0 downto 0) := "0";
    constant ap_const_lv1_1 : STD_LOGIC_VECTOR (0 downto 0) := "1";
    constant ap_const_boolean_0 : BOOLEAN := false;
    constant ap_const_lv64_0 : STD_LOGIC_VECTOR (63 downto 0) := "0000000000000000000000000000000000000000000000000000000000000000";
    constant ap_const_lv3_0 : STD_LOGIC_VECTOR (2 downto 0) := "000";
    constant ap_const_lv2_0 : STD_LOGIC_VECTOR (1 downto 0) := "00";
    constant ap_const_lv4_0 : STD_LOGIC_VECTOR (3 downto 0) := "0000";
    constant ap_const_lv512_lc_1 : STD_LOGIC_VECTOR (511 downto 0) := "00000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000";
    constant ap_const_lv256_lc_1 : STD_LOGIC_VECTOR (255 downto 0) := "0000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000";
    constant ap_const_lv32_1 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000000001";
    constant ap_const_lv32_2 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000000010";
    constant ap_const_lv32_3 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000000011";
    constant ap_const_lv32_4 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000000100";
    constant ap_const_lv32_5 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000000101";
    constant ap_const_lv32_6 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000000110";
    constant ap_const_lv32_7 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000000111";
    constant ap_const_lv8_0 : STD_LOGIC_VECTOR (7 downto 0) := "00000000";
    constant ap_const_lv16_0 : STD_LOGIC_VECTOR (15 downto 0) := "0000000000000000";
    constant ap_const_lv16_1 : STD_LOGIC_VECTOR (15 downto 0) := "0000000000000001";
    constant ap_const_lv8_1 : STD_LOGIC_VECTOR (7 downto 0) := "00000001";
    constant ap_const_lv4_1 : STD_LOGIC_VECTOR (3 downto 0) := "0001";
    constant ap_const_lv5_0 : STD_LOGIC_VECTOR (4 downto 0) := "00000";

attribute shreg_extract : string;
    signal ap_CS_fsm : STD_LOGIC_VECTOR (8 downto 0) := "000000001";
    attribute fsm_encoding : string;
    attribute fsm_encoding of ap_CS_fsm : signal is "none";
    signal ap_CS_fsm_pp0_stage0 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_pp0_stage0 : signal is "none";
    signal ap_enable_reg_pp0_iter0 : STD_LOGIC;
    signal ap_enable_reg_pp0_iter1 : STD_LOGIC := '0';
    signal ap_enable_reg_pp0_iter2 : STD_LOGIC := '0';
    signal ap_enable_reg_pp0_iter3 : STD_LOGIC := '0';
    signal ap_enable_reg_pp0_iter4 : STD_LOGIC := '0';
    signal ap_enable_reg_pp0_iter5 : STD_LOGIC := '0';
    signal ap_enable_reg_pp0_iter6 : STD_LOGIC := '0';
    signal ap_enable_reg_pp0_iter7 : STD_LOGIC := '0';
    signal ap_enable_reg_pp0_iter8 : STD_LOGIC := '0';
    signal ap_idle_pp0 : STD_LOGIC;
    signal ap_CS_fsm_pp0_stage8 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_pp0_stage8 : signal is "none";
    signal grp_mmatmul_block_q4_0_const_block_q8_0_const_s_fu_179_A_blk_n_AR : STD_LOGIC;
    signal grp_mmatmul_block_q4_0_const_block_q8_0_const_s_fu_179_A_blk_n_R : STD_LOGIC;
    signal grp_mmatmul_block_q4_0_const_block_q8_0_const_s_fu_179_B_blk_n_AR : STD_LOGIC;
    signal grp_mmatmul_block_q4_0_const_block_q8_0_const_s_fu_179_B_blk_n_R : STD_LOGIC;
    signal icmp_ln76_reg_462 : STD_LOGIC_VECTOR (0 downto 0);
    signal ap_block_state9_pp0_stage8_iter0 : BOOLEAN;
    signal ap_block_state18_pp0_stage8_iter1 : BOOLEAN;
    signal ap_block_state36_pp0_stage8_iter3 : BOOLEAN;
    signal ap_block_pp0_stage8_subdone : BOOLEAN;
    signal ap_condition_exit_pp0_iter0_stage8 : STD_LOGIC;
    signal ap_loop_exit_ready : STD_LOGIC;
    signal ap_ready_int : STD_LOGIC;
    signal B_blk_n_AR : STD_LOGIC;
    signal B_blk_n_R : STD_LOGIC;
    signal ap_block_pp0_stage8 : BOOLEAN;
    signal ap_block_pp0_stage0 : BOOLEAN;
    signal ap_CS_fsm_pp0_stage1 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_pp0_stage1 : signal is "none";
    signal ap_block_pp0_stage1 : BOOLEAN;
    signal ap_CS_fsm_pp0_stage2 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_pp0_stage2 : signal is "none";
    signal ap_block_pp0_stage2 : BOOLEAN;
    signal ap_CS_fsm_pp0_stage3 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_pp0_stage3 : signal is "none";
    signal ap_block_pp0_stage3 : BOOLEAN;
    signal ap_CS_fsm_pp0_stage4 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_pp0_stage4 : signal is "none";
    signal ap_block_pp0_stage4 : BOOLEAN;
    signal ap_CS_fsm_pp0_stage5 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_pp0_stage5 : signal is "none";
    signal ap_block_pp0_stage5 : BOOLEAN;
    signal ap_CS_fsm_pp0_stage6 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_pp0_stage6 : signal is "none";
    signal ap_block_pp0_stage6 : BOOLEAN;
    signal ap_CS_fsm_pp0_stage7 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_pp0_stage7 : signal is "none";
    signal ap_block_pp0_stage7 : BOOLEAN;
    signal icmp_ln76_reg_462_pp0_iter1_reg : STD_LOGIC_VECTOR (0 downto 0);
    signal icmp_ln76_reg_462_pp0_iter2_reg : STD_LOGIC_VECTOR (0 downto 0);
    signal A_blk_n_AR : STD_LOGIC;
    signal A_blk_n_R : STD_LOGIC;
    signal grp_fu_193_p2 : STD_LOGIC_VECTOR (62 downto 0);
    signal reg_197 : STD_LOGIC_VECTOR (62 downto 0);
    signal ap_block_state15_pp0_stage5_iter1 : BOOLEAN;
    signal ap_block_state24_pp0_stage5_iter2 : BOOLEAN;
    signal ap_block_state33_pp0_stage5_iter3 : BOOLEAN;
    signal ap_block_pp0_stage5_11001 : BOOLEAN;
    signal ap_block_state16_pp0_stage6_iter1 : BOOLEAN;
    signal ap_block_state25_pp0_stage6_iter2 : BOOLEAN;
    signal ap_block_state34_pp0_stage6_iter3 : BOOLEAN;
    signal ap_block_pp0_stage6_11001 : BOOLEAN;
    signal ap_block_state10_pp0_stage0_iter1 : BOOLEAN;
    signal ap_block_state19_pp0_stage0_iter2 : BOOLEAN;
    signal ap_block_state28_pp0_stage0_iter3 : BOOLEAN;
    signal ap_block_pp0_stage0_11001 : BOOLEAN;
    signal zext_ln72_cast_fu_206_p1 : STD_LOGIC_VECTOR (62 downto 0);
    signal zext_ln72_cast_reg_457 : STD_LOGIC_VECTOR (62 downto 0);
    signal icmp_ln76_fu_241_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal icmp_ln76_reg_462_pp0_iter3_reg : STD_LOGIC_VECTOR (0 downto 0);
    signal icmp_ln76_reg_462_pp0_iter4_reg : STD_LOGIC_VECTOR (0 downto 0);
    signal icmp_ln76_reg_462_pp0_iter5_reg : STD_LOGIC_VECTOR (0 downto 0);
    signal icmp_ln76_reg_462_pp0_iter6_reg : STD_LOGIC_VECTOR (0 downto 0);
    signal icmp_ln76_reg_462_pp0_iter7_reg : STD_LOGIC_VECTOR (0 downto 0);
    signal select_ln76_fu_262_p3 : STD_LOGIC_VECTOR (3 downto 0);
    signal select_ln76_reg_466 : STD_LOGIC_VECTOR (3 downto 0);
    signal add36_i_fu_304_p2 : STD_LOGIC_VECTOR (62 downto 0);
    signal add36_i_reg_471 : STD_LOGIC_VECTOR (62 downto 0);
    signal add_ln83_fu_310_p2 : STD_LOGIC_VECTOR (3 downto 0);
    signal add_ln83_reg_476 : STD_LOGIC_VECTOR (3 downto 0);
    signal add_ln83_reg_476_pp0_iter1_reg : STD_LOGIC_VECTOR (3 downto 0);
    signal add_ln83_reg_476_pp0_iter2_reg : STD_LOGIC_VECTOR (3 downto 0);
    signal add_ln83_reg_476_pp0_iter3_reg : STD_LOGIC_VECTOR (3 downto 0);
    signal add_ln83_reg_476_pp0_iter4_reg : STD_LOGIC_VECTOR (3 downto 0);
    signal add_ln83_reg_476_pp0_iter5_reg : STD_LOGIC_VECTOR (3 downto 0);
    signal add_ln83_reg_476_pp0_iter6_reg : STD_LOGIC_VECTOR (3 downto 0);
    signal add_ln80_fu_340_p2 : STD_LOGIC_VECTOR (62 downto 0);
    signal add_ln80_reg_481 : STD_LOGIC_VECTOR (62 downto 0);
    signal ap_block_state11_pp0_stage1_iter1 : BOOLEAN;
    signal ap_block_state20_pp0_stage1_iter2 : BOOLEAN;
    signal ap_block_state29_pp0_stage1_iter3 : BOOLEAN;
    signal ap_block_pp0_stage1_11001 : BOOLEAN;
    signal bb_fu_370_p2 : STD_LOGIC_VECTOR (63 downto 0);
    signal bb_reg_486 : STD_LOGIC_VECTOR (63 downto 0);
    signal aa_fu_401_p2 : STD_LOGIC_VECTOR (63 downto 0);
    signal aa_reg_491 : STD_LOGIC_VECTOR (63 downto 0);
    signal ap_block_state17_pp0_stage7_iter1 : BOOLEAN;
    signal ap_block_state26_pp0_stage7_iter2 : BOOLEAN;
    signal ap_block_pp0_stage7_11001 : BOOLEAN;
    signal Cv_addr_reg_496 : STD_LOGIC_VECTOR (3 downto 0);
    signal Cv_addr_reg_496_pp0_iter8_reg : STD_LOGIC_VECTOR (3 downto 0);
    signal Cv_load_reg_501 : STD_LOGIC_VECTOR (15 downto 0);
    signal grp_mmatmul_block_q4_0_const_block_q8_0_const_s_fu_179_ap_return : STD_LOGIC_VECTOR (15 downto 0);
    signal res_reg_506 : STD_LOGIC_VECTOR (15 downto 0);
    signal grp_fu_189_p2 : STD_LOGIC_VECTOR (15 downto 0);
    signal add41_i_reg_511 : STD_LOGIC_VECTOR (15 downto 0);
    signal ap_block_state12_pp0_stage2_iter1 : BOOLEAN;
    signal ap_block_state21_pp0_stage2_iter2 : BOOLEAN;
    signal ap_block_state30_pp0_stage2_iter3 : BOOLEAN;
    signal ap_block_pp0_stage2_11001 : BOOLEAN;
    signal ap_enable_reg_pp0_iter0_reg : STD_LOGIC := '0';
    signal ap_block_state13_pp0_stage3_iter1 : BOOLEAN;
    signal ap_block_state22_pp0_stage3_iter2 : BOOLEAN;
    signal ap_block_state31_pp0_stage3_iter3 : BOOLEAN;
    signal ap_block_pp0_stage3_subdone : BOOLEAN;
    signal grp_mmatmul_block_q4_0_const_block_q8_0_const_s_fu_179_ap_start : STD_LOGIC;
    signal grp_mmatmul_block_q4_0_const_block_q8_0_const_s_fu_179_ap_done : STD_LOGIC;
    signal grp_mmatmul_block_q4_0_const_block_q8_0_const_s_fu_179_ap_idle : STD_LOGIC;
    signal grp_mmatmul_block_q4_0_const_block_q8_0_const_s_fu_179_ap_ready : STD_LOGIC;
    signal grp_mmatmul_block_q4_0_const_block_q8_0_const_s_fu_179_m_axi_A_AWVALID : STD_LOGIC;
    signal grp_mmatmul_block_q4_0_const_block_q8_0_const_s_fu_179_m_axi_A_AWADDR : STD_LOGIC_VECTOR (63 downto 0);
    signal grp_mmatmul_block_q4_0_const_block_q8_0_const_s_fu_179_m_axi_A_AWID : STD_LOGIC_VECTOR (0 downto 0);
    signal grp_mmatmul_block_q4_0_const_block_q8_0_const_s_fu_179_m_axi_A_AWLEN : STD_LOGIC_VECTOR (31 downto 0);
    signal grp_mmatmul_block_q4_0_const_block_q8_0_const_s_fu_179_m_axi_A_AWSIZE : STD_LOGIC_VECTOR (2 downto 0);
    signal grp_mmatmul_block_q4_0_const_block_q8_0_const_s_fu_179_m_axi_A_AWBURST : STD_LOGIC_VECTOR (1 downto 0);
    signal grp_mmatmul_block_q4_0_const_block_q8_0_const_s_fu_179_m_axi_A_AWLOCK : STD_LOGIC_VECTOR (1 downto 0);
    signal grp_mmatmul_block_q4_0_const_block_q8_0_const_s_fu_179_m_axi_A_AWCACHE : STD_LOGIC_VECTOR (3 downto 0);
    signal grp_mmatmul_block_q4_0_const_block_q8_0_const_s_fu_179_m_axi_A_AWPROT : STD_LOGIC_VECTOR (2 downto 0);
    signal grp_mmatmul_block_q4_0_const_block_q8_0_const_s_fu_179_m_axi_A_AWQOS : STD_LOGIC_VECTOR (3 downto 0);
    signal grp_mmatmul_block_q4_0_const_block_q8_0_const_s_fu_179_m_axi_A_AWREGION : STD_LOGIC_VECTOR (3 downto 0);
    signal grp_mmatmul_block_q4_0_const_block_q8_0_const_s_fu_179_m_axi_A_AWUSER : STD_LOGIC_VECTOR (0 downto 0);
    signal grp_mmatmul_block_q4_0_const_block_q8_0_const_s_fu_179_m_axi_A_WVALID : STD_LOGIC;
    signal grp_mmatmul_block_q4_0_const_block_q8_0_const_s_fu_179_m_axi_A_WDATA : STD_LOGIC_VECTOR (255 downto 0);
    signal grp_mmatmul_block_q4_0_const_block_q8_0_const_s_fu_179_m_axi_A_WSTRB : STD_LOGIC_VECTOR (31 downto 0);
    signal grp_mmatmul_block_q4_0_const_block_q8_0_const_s_fu_179_m_axi_A_WLAST : STD_LOGIC;
    signal grp_mmatmul_block_q4_0_const_block_q8_0_const_s_fu_179_m_axi_A_WID : STD_LOGIC_VECTOR (0 downto 0);
    signal grp_mmatmul_block_q4_0_const_block_q8_0_const_s_fu_179_m_axi_A_WUSER : STD_LOGIC_VECTOR (0 downto 0);
    signal grp_mmatmul_block_q4_0_const_block_q8_0_const_s_fu_179_m_axi_A_ARVALID : STD_LOGIC;
    signal grp_mmatmul_block_q4_0_const_block_q8_0_const_s_fu_179_m_axi_A_ARADDR : STD_LOGIC_VECTOR (63 downto 0);
    signal grp_mmatmul_block_q4_0_const_block_q8_0_const_s_fu_179_m_axi_A_ARID : STD_LOGIC_VECTOR (0 downto 0);
    signal grp_mmatmul_block_q4_0_const_block_q8_0_const_s_fu_179_m_axi_A_ARLEN : STD_LOGIC_VECTOR (31 downto 0);
    signal grp_mmatmul_block_q4_0_const_block_q8_0_const_s_fu_179_m_axi_A_ARSIZE : STD_LOGIC_VECTOR (2 downto 0);
    signal grp_mmatmul_block_q4_0_const_block_q8_0_const_s_fu_179_m_axi_A_ARBURST : STD_LOGIC_VECTOR (1 downto 0);
    signal grp_mmatmul_block_q4_0_const_block_q8_0_const_s_fu_179_m_axi_A_ARLOCK : STD_LOGIC_VECTOR (1 downto 0);
    signal grp_mmatmul_block_q4_0_const_block_q8_0_const_s_fu_179_m_axi_A_ARCACHE : STD_LOGIC_VECTOR (3 downto 0);
    signal grp_mmatmul_block_q4_0_const_block_q8_0_const_s_fu_179_m_axi_A_ARPROT : STD_LOGIC_VECTOR (2 downto 0);
    signal grp_mmatmul_block_q4_0_const_block_q8_0_const_s_fu_179_m_axi_A_ARQOS : STD_LOGIC_VECTOR (3 downto 0);
    signal grp_mmatmul_block_q4_0_const_block_q8_0_const_s_fu_179_m_axi_A_ARREGION : STD_LOGIC_VECTOR (3 downto 0);
    signal grp_mmatmul_block_q4_0_const_block_q8_0_const_s_fu_179_m_axi_A_ARUSER : STD_LOGIC_VECTOR (0 downto 0);
    signal grp_mmatmul_block_q4_0_const_block_q8_0_const_s_fu_179_m_axi_A_RREADY : STD_LOGIC;
    signal grp_mmatmul_block_q4_0_const_block_q8_0_const_s_fu_179_m_axi_A_BREADY : STD_LOGIC;
    signal grp_mmatmul_block_q4_0_const_block_q8_0_const_s_fu_179_m_axi_B_AWVALID : STD_LOGIC;
    signal grp_mmatmul_block_q4_0_const_block_q8_0_const_s_fu_179_m_axi_B_AWADDR : STD_LOGIC_VECTOR (63 downto 0);
    signal grp_mmatmul_block_q4_0_const_block_q8_0_const_s_fu_179_m_axi_B_AWID : STD_LOGIC_VECTOR (0 downto 0);
    signal grp_mmatmul_block_q4_0_const_block_q8_0_const_s_fu_179_m_axi_B_AWLEN : STD_LOGIC_VECTOR (31 downto 0);
    signal grp_mmatmul_block_q4_0_const_block_q8_0_const_s_fu_179_m_axi_B_AWSIZE : STD_LOGIC_VECTOR (2 downto 0);
    signal grp_mmatmul_block_q4_0_const_block_q8_0_const_s_fu_179_m_axi_B_AWBURST : STD_LOGIC_VECTOR (1 downto 0);
    signal grp_mmatmul_block_q4_0_const_block_q8_0_const_s_fu_179_m_axi_B_AWLOCK : STD_LOGIC_VECTOR (1 downto 0);
    signal grp_mmatmul_block_q4_0_const_block_q8_0_const_s_fu_179_m_axi_B_AWCACHE : STD_LOGIC_VECTOR (3 downto 0);
    signal grp_mmatmul_block_q4_0_const_block_q8_0_const_s_fu_179_m_axi_B_AWPROT : STD_LOGIC_VECTOR (2 downto 0);
    signal grp_mmatmul_block_q4_0_const_block_q8_0_const_s_fu_179_m_axi_B_AWQOS : STD_LOGIC_VECTOR (3 downto 0);
    signal grp_mmatmul_block_q4_0_const_block_q8_0_const_s_fu_179_m_axi_B_AWREGION : STD_LOGIC_VECTOR (3 downto 0);
    signal grp_mmatmul_block_q4_0_const_block_q8_0_const_s_fu_179_m_axi_B_AWUSER : STD_LOGIC_VECTOR (0 downto 0);
    signal grp_mmatmul_block_q4_0_const_block_q8_0_const_s_fu_179_m_axi_B_WVALID : STD_LOGIC;
    signal grp_mmatmul_block_q4_0_const_block_q8_0_const_s_fu_179_m_axi_B_WDATA : STD_LOGIC_VECTOR (511 downto 0);
    signal grp_mmatmul_block_q4_0_const_block_q8_0_const_s_fu_179_m_axi_B_WSTRB : STD_LOGIC_VECTOR (63 downto 0);
    signal grp_mmatmul_block_q4_0_const_block_q8_0_const_s_fu_179_m_axi_B_WLAST : STD_LOGIC;
    signal grp_mmatmul_block_q4_0_const_block_q8_0_const_s_fu_179_m_axi_B_WID : STD_LOGIC_VECTOR (0 downto 0);
    signal grp_mmatmul_block_q4_0_const_block_q8_0_const_s_fu_179_m_axi_B_WUSER : STD_LOGIC_VECTOR (0 downto 0);
    signal grp_mmatmul_block_q4_0_const_block_q8_0_const_s_fu_179_m_axi_B_ARVALID : STD_LOGIC;
    signal grp_mmatmul_block_q4_0_const_block_q8_0_const_s_fu_179_m_axi_B_ARADDR : STD_LOGIC_VECTOR (63 downto 0);
    signal grp_mmatmul_block_q4_0_const_block_q8_0_const_s_fu_179_m_axi_B_ARID : STD_LOGIC_VECTOR (0 downto 0);
    signal grp_mmatmul_block_q4_0_const_block_q8_0_const_s_fu_179_m_axi_B_ARLEN : STD_LOGIC_VECTOR (31 downto 0);
    signal grp_mmatmul_block_q4_0_const_block_q8_0_const_s_fu_179_m_axi_B_ARSIZE : STD_LOGIC_VECTOR (2 downto 0);
    signal grp_mmatmul_block_q4_0_const_block_q8_0_const_s_fu_179_m_axi_B_ARBURST : STD_LOGIC_VECTOR (1 downto 0);
    signal grp_mmatmul_block_q4_0_const_block_q8_0_const_s_fu_179_m_axi_B_ARLOCK : STD_LOGIC_VECTOR (1 downto 0);
    signal grp_mmatmul_block_q4_0_const_block_q8_0_const_s_fu_179_m_axi_B_ARCACHE : STD_LOGIC_VECTOR (3 downto 0);
    signal grp_mmatmul_block_q4_0_const_block_q8_0_const_s_fu_179_m_axi_B_ARPROT : STD_LOGIC_VECTOR (2 downto 0);
    signal grp_mmatmul_block_q4_0_const_block_q8_0_const_s_fu_179_m_axi_B_ARQOS : STD_LOGIC_VECTOR (3 downto 0);
    signal grp_mmatmul_block_q4_0_const_block_q8_0_const_s_fu_179_m_axi_B_ARREGION : STD_LOGIC_VECTOR (3 downto 0);
    signal grp_mmatmul_block_q4_0_const_block_q8_0_const_s_fu_179_m_axi_B_ARUSER : STD_LOGIC_VECTOR (0 downto 0);
    signal grp_mmatmul_block_q4_0_const_block_q8_0_const_s_fu_179_m_axi_B_RREADY : STD_LOGIC;
    signal grp_mmatmul_block_q4_0_const_block_q8_0_const_s_fu_179_m_axi_B_BREADY : STD_LOGIC;
    signal grp_mmatmul_block_q4_0_const_block_q8_0_const_s_fu_179_ap_ce : STD_LOGIC;
    signal ap_block_pp0_stage1_11001_ignoreCallOp148 : BOOLEAN;
    signal ap_block_pp0_stage2_11001_ignoreCallOp149 : BOOLEAN;
    signal ap_block_pp0_stage3_11001_ignoreCallOp150 : BOOLEAN;
    signal ap_block_pp0_stage4_11001_ignoreCallOp151 : BOOLEAN;
    signal ap_block_pp0_stage5_11001_ignoreCallOp152 : BOOLEAN;
    signal ap_block_pp0_stage6_11001_ignoreCallOp153 : BOOLEAN;
    signal ap_block_pp0_stage7_11001_ignoreCallOp154 : BOOLEAN;
    signal ap_block_pp0_stage8_11001_ignoreCallOp146 : BOOLEAN;
    signal ap_block_pp0_stage0_11001_ignoreCallOp147 : BOOLEAN;
    signal grp_mmatmul_block_q4_0_const_block_q8_0_const_s_fu_179_ap_start_reg : STD_LOGIC := '0';
    signal zext_ln83_fu_407_p1 : STD_LOGIC_VECTOR (63 downto 0);
    signal i_fu_100 : STD_LOGIC_VECTOR (3 downto 0) := "0000";
    signal i_3_fu_316_p2 : STD_LOGIC_VECTOR (3 downto 0);
    signal ap_loop_init : STD_LOGIC;
    signal ap_sig_allocacmp_i_2 : STD_LOGIC_VECTOR (3 downto 0);
    signal j_fu_104 : STD_LOGIC_VECTOR (7 downto 0) := "00000000";
    signal select_ln76_1_fu_270_p3 : STD_LOGIC_VECTOR (7 downto 0);
    signal ap_sig_allocacmp_j_load : STD_LOGIC_VECTOR (7 downto 0);
    signal indvar_flatten_fu_108 : STD_LOGIC_VECTOR (15 downto 0) := "0000000000000000";
    signal add_ln76_fu_247_p2 : STD_LOGIC_VECTOR (15 downto 0);
    signal ap_sig_allocacmp_indvar_flatten_load : STD_LOGIC_VECTOR (15 downto 0);
    signal ap_block_pp0_stage3_11001 : BOOLEAN;
    signal grp_fu_193_p0 : STD_LOGIC_VECTOR (62 downto 0);
    signal grp_fu_193_p1 : STD_LOGIC_VECTOR (62 downto 0);
    signal zext_ln78_fu_231_p1 : STD_LOGIC_VECTOR (7 downto 0);
    signal icmp_ln78_fu_235_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal j_4_fu_256_p2 : STD_LOGIC_VECTOR (7 downto 0);
    signal trunc_ln76_fu_278_p1 : STD_LOGIC_VECTOR (1 downto 0);
    signal tmp_fu_286_p3 : STD_LOGIC_VECTOR (3 downto 0);
    signal trunc_ln83_fu_282_p1 : STD_LOGIC_VECTOR (3 downto 0);
    signal zext_ln76_fu_300_p1 : STD_LOGIC_VECTOR (62 downto 0);
    signal sub_ln83_fu_294_p2 : STD_LOGIC_VECTOR (3 downto 0);
    signal zext_ln78_1_fu_337_p1 : STD_LOGIC_VECTOR (62 downto 0);
    signal grp_fu_201_p2 : STD_LOGIC_VECTOR (62 downto 0);
    signal empty_35_fu_345_p1 : STD_LOGIC_VECTOR (58 downto 0);
    signal p_shl1_fu_357_p3 : STD_LOGIC_VECTOR (63 downto 0);
    signal tmp2_fu_365_p2 : STD_LOGIC_VECTOR (63 downto 0);
    signal p_shl_fu_349_p3 : STD_LOGIC_VECTOR (63 downto 0);
    signal trunc_ln80_fu_376_p1 : STD_LOGIC_VECTOR (59 downto 0);
    signal shl_ln80_1_fu_388_p3 : STD_LOGIC_VECTOR (63 downto 0);
    signal add_ln80_2_fu_396_p2 : STD_LOGIC_VECTOR (63 downto 0);
    signal shl_ln_fu_380_p3 : STD_LOGIC_VECTOR (63 downto 0);
    signal grp_fu_189_ce : STD_LOGIC;
    signal ap_block_pp0_stage8_11001 : BOOLEAN;
    signal grp_fu_193_ce : STD_LOGIC;
    signal ap_block_state14_pp0_stage4_iter1 : BOOLEAN;
    signal ap_block_state23_pp0_stage4_iter2 : BOOLEAN;
    signal ap_block_state32_pp0_stage4_iter3 : BOOLEAN;
    signal ap_block_pp0_stage4_11001 : BOOLEAN;
    signal ap_done_reg : STD_LOGIC := '0';
    signal ap_continue_int : STD_LOGIC;
    signal ap_done_int : STD_LOGIC;
    signal ap_loop_exit_ready_pp0_iter1_reg : STD_LOGIC;
    signal ap_condition_exit_pp0_iter7_stage3 : STD_LOGIC;
    signal ap_idle_pp0_0to6 : STD_LOGIC;
    signal ap_loop_exit_ready_pp0_iter2_reg : STD_LOGIC;
    signal ap_loop_exit_ready_pp0_iter3_reg : STD_LOGIC;
    signal ap_loop_exit_ready_pp0_iter4_reg : STD_LOGIC;
    signal ap_loop_exit_ready_pp0_iter5_reg : STD_LOGIC;
    signal ap_loop_exit_ready_pp0_iter6_reg : STD_LOGIC;
    signal ap_loop_exit_ready_pp0_iter7_reg : STD_LOGIC;
    signal ap_NS_fsm : STD_LOGIC_VECTOR (8 downto 0);
    signal ap_block_pp0_stage0_subdone : BOOLEAN;
    signal ap_idle_pp0_1to8 : STD_LOGIC;
    signal ap_done_pending_pp0 : STD_LOGIC;
    signal ap_block_pp0_stage1_subdone : BOOLEAN;
    signal ap_block_pp0_stage2_subdone : BOOLEAN;
    signal ap_block_pp0_stage4_subdone : BOOLEAN;
    signal ap_block_pp0_stage5_subdone : BOOLEAN;
    signal ap_block_pp0_stage6_subdone : BOOLEAN;
    signal ap_block_pp0_stage7_subdone : BOOLEAN;
    signal ap_enable_pp0 : STD_LOGIC;
    signal ap_start_int : STD_LOGIC;
    signal ap_ce_reg : STD_LOGIC;

    component sgemm_mmatmul_block_q4_0_const_block_q8_0_const_s IS
    port (
        ap_clk : IN STD_LOGIC;
        ap_rst : IN STD_LOGIC;
        ap_start : IN STD_LOGIC;
        ap_done : OUT STD_LOGIC;
        ap_idle : OUT STD_LOGIC;
        ap_ready : OUT STD_LOGIC;
        m_axi_A_AWVALID : OUT STD_LOGIC;
        m_axi_A_AWREADY : IN STD_LOGIC;
        m_axi_A_AWADDR : OUT STD_LOGIC_VECTOR (63 downto 0);
        m_axi_A_AWID : OUT STD_LOGIC_VECTOR (0 downto 0);
        m_axi_A_AWLEN : OUT STD_LOGIC_VECTOR (31 downto 0);
        m_axi_A_AWSIZE : OUT STD_LOGIC_VECTOR (2 downto 0);
        m_axi_A_AWBURST : OUT STD_LOGIC_VECTOR (1 downto 0);
        m_axi_A_AWLOCK : OUT STD_LOGIC_VECTOR (1 downto 0);
        m_axi_A_AWCACHE : OUT STD_LOGIC_VECTOR (3 downto 0);
        m_axi_A_AWPROT : OUT STD_LOGIC_VECTOR (2 downto 0);
        m_axi_A_AWQOS : OUT STD_LOGIC_VECTOR (3 downto 0);
        m_axi_A_AWREGION : OUT STD_LOGIC_VECTOR (3 downto 0);
        m_axi_A_AWUSER : OUT STD_LOGIC_VECTOR (0 downto 0);
        m_axi_A_WVALID : OUT STD_LOGIC;
        m_axi_A_WREADY : IN STD_LOGIC;
        m_axi_A_WDATA : OUT STD_LOGIC_VECTOR (255 downto 0);
        m_axi_A_WSTRB : OUT STD_LOGIC_VECTOR (31 downto 0);
        m_axi_A_WLAST : OUT STD_LOGIC;
        m_axi_A_WID : OUT STD_LOGIC_VECTOR (0 downto 0);
        m_axi_A_WUSER : OUT STD_LOGIC_VECTOR (0 downto 0);
        m_axi_A_ARVALID : OUT STD_LOGIC;
        m_axi_A_ARREADY : IN STD_LOGIC;
        m_axi_A_ARADDR : OUT STD_LOGIC_VECTOR (63 downto 0);
        m_axi_A_ARID : OUT STD_LOGIC_VECTOR (0 downto 0);
        m_axi_A_ARLEN : OUT STD_LOGIC_VECTOR (31 downto 0);
        m_axi_A_ARSIZE : OUT STD_LOGIC_VECTOR (2 downto 0);
        m_axi_A_ARBURST : OUT STD_LOGIC_VECTOR (1 downto 0);
        m_axi_A_ARLOCK : OUT STD_LOGIC_VECTOR (1 downto 0);
        m_axi_A_ARCACHE : OUT STD_LOGIC_VECTOR (3 downto 0);
        m_axi_A_ARPROT : OUT STD_LOGIC_VECTOR (2 downto 0);
        m_axi_A_ARQOS : OUT STD_LOGIC_VECTOR (3 downto 0);
        m_axi_A_ARREGION : OUT STD_LOGIC_VECTOR (3 downto 0);
        m_axi_A_ARUSER : OUT STD_LOGIC_VECTOR (0 downto 0);
        m_axi_A_RVALID : IN STD_LOGIC;
        m_axi_A_RREADY : OUT STD_LOGIC;
        m_axi_A_RDATA : IN STD_LOGIC_VECTOR (255 downto 0);
        m_axi_A_RLAST : IN STD_LOGIC;
        m_axi_A_RID : IN STD_LOGIC_VECTOR (0 downto 0);
        m_axi_A_RFIFONUM : IN STD_LOGIC_VECTOR (8 downto 0);
        m_axi_A_RUSER : IN STD_LOGIC_VECTOR (0 downto 0);
        m_axi_A_RRESP : IN STD_LOGIC_VECTOR (1 downto 0);
        m_axi_A_BVALID : IN STD_LOGIC;
        m_axi_A_BREADY : OUT STD_LOGIC;
        m_axi_A_BRESP : IN STD_LOGIC_VECTOR (1 downto 0);
        m_axi_A_BID : IN STD_LOGIC_VECTOR (0 downto 0);
        m_axi_A_BUSER : IN STD_LOGIC_VECTOR (0 downto 0);
        m_axi_B_AWVALID : OUT STD_LOGIC;
        m_axi_B_AWREADY : IN STD_LOGIC;
        m_axi_B_AWADDR : OUT STD_LOGIC_VECTOR (63 downto 0);
        m_axi_B_AWID : OUT STD_LOGIC_VECTOR (0 downto 0);
        m_axi_B_AWLEN : OUT STD_LOGIC_VECTOR (31 downto 0);
        m_axi_B_AWSIZE : OUT STD_LOGIC_VECTOR (2 downto 0);
        m_axi_B_AWBURST : OUT STD_LOGIC_VECTOR (1 downto 0);
        m_axi_B_AWLOCK : OUT STD_LOGIC_VECTOR (1 downto 0);
        m_axi_B_AWCACHE : OUT STD_LOGIC_VECTOR (3 downto 0);
        m_axi_B_AWPROT : OUT STD_LOGIC_VECTOR (2 downto 0);
        m_axi_B_AWQOS : OUT STD_LOGIC_VECTOR (3 downto 0);
        m_axi_B_AWREGION : OUT STD_LOGIC_VECTOR (3 downto 0);
        m_axi_B_AWUSER : OUT STD_LOGIC_VECTOR (0 downto 0);
        m_axi_B_WVALID : OUT STD_LOGIC;
        m_axi_B_WREADY : IN STD_LOGIC;
        m_axi_B_WDATA : OUT STD_LOGIC_VECTOR (511 downto 0);
        m_axi_B_WSTRB : OUT STD_LOGIC_VECTOR (63 downto 0);
        m_axi_B_WLAST : OUT STD_LOGIC;
        m_axi_B_WID : OUT STD_LOGIC_VECTOR (0 downto 0);
        m_axi_B_WUSER : OUT STD_LOGIC_VECTOR (0 downto 0);
        m_axi_B_ARVALID : OUT STD_LOGIC;
        m_axi_B_ARREADY : IN STD_LOGIC;
        m_axi_B_ARADDR : OUT STD_LOGIC_VECTOR (63 downto 0);
        m_axi_B_ARID : OUT STD_LOGIC_VECTOR (0 downto 0);
        m_axi_B_ARLEN : OUT STD_LOGIC_VECTOR (31 downto 0);
        m_axi_B_ARSIZE : OUT STD_LOGIC_VECTOR (2 downto 0);
        m_axi_B_ARBURST : OUT STD_LOGIC_VECTOR (1 downto 0);
        m_axi_B_ARLOCK : OUT STD_LOGIC_VECTOR (1 downto 0);
        m_axi_B_ARCACHE : OUT STD_LOGIC_VECTOR (3 downto 0);
        m_axi_B_ARPROT : OUT STD_LOGIC_VECTOR (2 downto 0);
        m_axi_B_ARQOS : OUT STD_LOGIC_VECTOR (3 downto 0);
        m_axi_B_ARREGION : OUT STD_LOGIC_VECTOR (3 downto 0);
        m_axi_B_ARUSER : OUT STD_LOGIC_VECTOR (0 downto 0);
        m_axi_B_RVALID : IN STD_LOGIC;
        m_axi_B_RREADY : OUT STD_LOGIC;
        m_axi_B_RDATA : IN STD_LOGIC_VECTOR (511 downto 0);
        m_axi_B_RLAST : IN STD_LOGIC;
        m_axi_B_RID : IN STD_LOGIC_VECTOR (0 downto 0);
        m_axi_B_RFIFONUM : IN STD_LOGIC_VECTOR (8 downto 0);
        m_axi_B_RUSER : IN STD_LOGIC_VECTOR (0 downto 0);
        m_axi_B_RRESP : IN STD_LOGIC_VECTOR (1 downto 0);
        m_axi_B_BVALID : IN STD_LOGIC;
        m_axi_B_BREADY : OUT STD_LOGIC;
        m_axi_B_BRESP : IN STD_LOGIC_VECTOR (1 downto 0);
        m_axi_B_BID : IN STD_LOGIC_VECTOR (0 downto 0);
        m_axi_B_BUSER : IN STD_LOGIC_VECTOR (0 downto 0);
        ap_ce : IN STD_LOGIC;
        aa : IN STD_LOGIC_VECTOR (63 downto 0);
        bb : IN STD_LOGIC_VECTOR (63 downto 0);
        ap_return : OUT STD_LOGIC_VECTOR (15 downto 0);
        A_blk_n_AR : OUT STD_LOGIC;
        A_blk_n_R : OUT STD_LOGIC;
        B_blk_n_AR : OUT STD_LOGIC;
        B_blk_n_R : OUT STD_LOGIC );
    end component;


    component sgemm_hadd_16ns_16ns_16_5_full_dsp_1_x IS
    generic (
        ID : INTEGER;
        NUM_STAGE : INTEGER;
        din0_WIDTH : INTEGER;
        din1_WIDTH : INTEGER;
        dout_WIDTH : INTEGER );
    port (
        clk : IN STD_LOGIC;
        reset : IN STD_LOGIC;
        din0 : IN STD_LOGIC_VECTOR (15 downto 0);
        din1 : IN STD_LOGIC_VECTOR (15 downto 0);
        ce : IN STD_LOGIC;
        dout : OUT STD_LOGIC_VECTOR (15 downto 0) );
    end component;


    component sgemm_mul_63s_63s_63_5_1 IS
    generic (
        ID : INTEGER;
        NUM_STAGE : INTEGER;
        din0_WIDTH : INTEGER;
        din1_WIDTH : INTEGER;
        dout_WIDTH : INTEGER );
    port (
        clk : IN STD_LOGIC;
        reset : IN STD_LOGIC;
        din0 : IN STD_LOGIC_VECTOR (62 downto 0);
        din1 : IN STD_LOGIC_VECTOR (62 downto 0);
        ce : IN STD_LOGIC;
        dout : OUT STD_LOGIC_VECTOR (62 downto 0) );
    end component;


    component sgemm_flow_control_loop_pipe_sequential_init IS
    port (
        ap_clk : IN STD_LOGIC;
        ap_rst : IN STD_LOGIC;
        ap_start : IN STD_LOGIC;
        ap_ready : OUT STD_LOGIC;
        ap_done : OUT STD_LOGIC;
        ap_start_int : OUT STD_LOGIC;
        ap_loop_init : OUT STD_LOGIC;
        ap_ready_int : IN STD_LOGIC;
        ap_loop_exit_ready : IN STD_LOGIC;
        ap_loop_exit_done : IN STD_LOGIC;
        ap_continue_int : OUT STD_LOGIC;
        ap_done_int : IN STD_LOGIC );
    end component;



begin
    grp_mmatmul_block_q4_0_const_block_q8_0_const_s_fu_179 : component sgemm_mmatmul_block_q4_0_const_block_q8_0_const_s
    port map (
        ap_clk => ap_clk,
        ap_rst => ap_rst,
        ap_start => grp_mmatmul_block_q4_0_const_block_q8_0_const_s_fu_179_ap_start,
        ap_done => grp_mmatmul_block_q4_0_const_block_q8_0_const_s_fu_179_ap_done,
        ap_idle => grp_mmatmul_block_q4_0_const_block_q8_0_const_s_fu_179_ap_idle,
        ap_ready => grp_mmatmul_block_q4_0_const_block_q8_0_const_s_fu_179_ap_ready,
        m_axi_A_AWVALID => grp_mmatmul_block_q4_0_const_block_q8_0_const_s_fu_179_m_axi_A_AWVALID,
        m_axi_A_AWREADY => ap_const_logic_0,
        m_axi_A_AWADDR => grp_mmatmul_block_q4_0_const_block_q8_0_const_s_fu_179_m_axi_A_AWADDR,
        m_axi_A_AWID => grp_mmatmul_block_q4_0_const_block_q8_0_const_s_fu_179_m_axi_A_AWID,
        m_axi_A_AWLEN => grp_mmatmul_block_q4_0_const_block_q8_0_const_s_fu_179_m_axi_A_AWLEN,
        m_axi_A_AWSIZE => grp_mmatmul_block_q4_0_const_block_q8_0_const_s_fu_179_m_axi_A_AWSIZE,
        m_axi_A_AWBURST => grp_mmatmul_block_q4_0_const_block_q8_0_const_s_fu_179_m_axi_A_AWBURST,
        m_axi_A_AWLOCK => grp_mmatmul_block_q4_0_const_block_q8_0_const_s_fu_179_m_axi_A_AWLOCK,
        m_axi_A_AWCACHE => grp_mmatmul_block_q4_0_const_block_q8_0_const_s_fu_179_m_axi_A_AWCACHE,
        m_axi_A_AWPROT => grp_mmatmul_block_q4_0_const_block_q8_0_const_s_fu_179_m_axi_A_AWPROT,
        m_axi_A_AWQOS => grp_mmatmul_block_q4_0_const_block_q8_0_const_s_fu_179_m_axi_A_AWQOS,
        m_axi_A_AWREGION => grp_mmatmul_block_q4_0_const_block_q8_0_const_s_fu_179_m_axi_A_AWREGION,
        m_axi_A_AWUSER => grp_mmatmul_block_q4_0_const_block_q8_0_const_s_fu_179_m_axi_A_AWUSER,
        m_axi_A_WVALID => grp_mmatmul_block_q4_0_const_block_q8_0_const_s_fu_179_m_axi_A_WVALID,
        m_axi_A_WREADY => ap_const_logic_0,
        m_axi_A_WDATA => grp_mmatmul_block_q4_0_const_block_q8_0_const_s_fu_179_m_axi_A_WDATA,
        m_axi_A_WSTRB => grp_mmatmul_block_q4_0_const_block_q8_0_const_s_fu_179_m_axi_A_WSTRB,
        m_axi_A_WLAST => grp_mmatmul_block_q4_0_const_block_q8_0_const_s_fu_179_m_axi_A_WLAST,
        m_axi_A_WID => grp_mmatmul_block_q4_0_const_block_q8_0_const_s_fu_179_m_axi_A_WID,
        m_axi_A_WUSER => grp_mmatmul_block_q4_0_const_block_q8_0_const_s_fu_179_m_axi_A_WUSER,
        m_axi_A_ARVALID => grp_mmatmul_block_q4_0_const_block_q8_0_const_s_fu_179_m_axi_A_ARVALID,
        m_axi_A_ARREADY => m_axi_A_ARREADY,
        m_axi_A_ARADDR => grp_mmatmul_block_q4_0_const_block_q8_0_const_s_fu_179_m_axi_A_ARADDR,
        m_axi_A_ARID => grp_mmatmul_block_q4_0_const_block_q8_0_const_s_fu_179_m_axi_A_ARID,
        m_axi_A_ARLEN => grp_mmatmul_block_q4_0_const_block_q8_0_const_s_fu_179_m_axi_A_ARLEN,
        m_axi_A_ARSIZE => grp_mmatmul_block_q4_0_const_block_q8_0_const_s_fu_179_m_axi_A_ARSIZE,
        m_axi_A_ARBURST => grp_mmatmul_block_q4_0_const_block_q8_0_const_s_fu_179_m_axi_A_ARBURST,
        m_axi_A_ARLOCK => grp_mmatmul_block_q4_0_const_block_q8_0_const_s_fu_179_m_axi_A_ARLOCK,
        m_axi_A_ARCACHE => grp_mmatmul_block_q4_0_const_block_q8_0_const_s_fu_179_m_axi_A_ARCACHE,
        m_axi_A_ARPROT => grp_mmatmul_block_q4_0_const_block_q8_0_const_s_fu_179_m_axi_A_ARPROT,
        m_axi_A_ARQOS => grp_mmatmul_block_q4_0_const_block_q8_0_const_s_fu_179_m_axi_A_ARQOS,
        m_axi_A_ARREGION => grp_mmatmul_block_q4_0_const_block_q8_0_const_s_fu_179_m_axi_A_ARREGION,
        m_axi_A_ARUSER => grp_mmatmul_block_q4_0_const_block_q8_0_const_s_fu_179_m_axi_A_ARUSER,
        m_axi_A_RVALID => m_axi_A_RVALID,
        m_axi_A_RREADY => grp_mmatmul_block_q4_0_const_block_q8_0_const_s_fu_179_m_axi_A_RREADY,
        m_axi_A_RDATA => m_axi_A_RDATA,
        m_axi_A_RLAST => m_axi_A_RLAST,
        m_axi_A_RID => m_axi_A_RID,
        m_axi_A_RFIFONUM => m_axi_A_RFIFONUM,
        m_axi_A_RUSER => m_axi_A_RUSER,
        m_axi_A_RRESP => m_axi_A_RRESP,
        m_axi_A_BVALID => ap_const_logic_0,
        m_axi_A_BREADY => grp_mmatmul_block_q4_0_const_block_q8_0_const_s_fu_179_m_axi_A_BREADY,
        m_axi_A_BRESP => ap_const_lv2_0,
        m_axi_A_BID => ap_const_lv1_0,
        m_axi_A_BUSER => ap_const_lv1_0,
        m_axi_B_AWVALID => grp_mmatmul_block_q4_0_const_block_q8_0_const_s_fu_179_m_axi_B_AWVALID,
        m_axi_B_AWREADY => ap_const_logic_0,
        m_axi_B_AWADDR => grp_mmatmul_block_q4_0_const_block_q8_0_const_s_fu_179_m_axi_B_AWADDR,
        m_axi_B_AWID => grp_mmatmul_block_q4_0_const_block_q8_0_const_s_fu_179_m_axi_B_AWID,
        m_axi_B_AWLEN => grp_mmatmul_block_q4_0_const_block_q8_0_const_s_fu_179_m_axi_B_AWLEN,
        m_axi_B_AWSIZE => grp_mmatmul_block_q4_0_const_block_q8_0_const_s_fu_179_m_axi_B_AWSIZE,
        m_axi_B_AWBURST => grp_mmatmul_block_q4_0_const_block_q8_0_const_s_fu_179_m_axi_B_AWBURST,
        m_axi_B_AWLOCK => grp_mmatmul_block_q4_0_const_block_q8_0_const_s_fu_179_m_axi_B_AWLOCK,
        m_axi_B_AWCACHE => grp_mmatmul_block_q4_0_const_block_q8_0_const_s_fu_179_m_axi_B_AWCACHE,
        m_axi_B_AWPROT => grp_mmatmul_block_q4_0_const_block_q8_0_const_s_fu_179_m_axi_B_AWPROT,
        m_axi_B_AWQOS => grp_mmatmul_block_q4_0_const_block_q8_0_const_s_fu_179_m_axi_B_AWQOS,
        m_axi_B_AWREGION => grp_mmatmul_block_q4_0_const_block_q8_0_const_s_fu_179_m_axi_B_AWREGION,
        m_axi_B_AWUSER => grp_mmatmul_block_q4_0_const_block_q8_0_const_s_fu_179_m_axi_B_AWUSER,
        m_axi_B_WVALID => grp_mmatmul_block_q4_0_const_block_q8_0_const_s_fu_179_m_axi_B_WVALID,
        m_axi_B_WREADY => ap_const_logic_0,
        m_axi_B_WDATA => grp_mmatmul_block_q4_0_const_block_q8_0_const_s_fu_179_m_axi_B_WDATA,
        m_axi_B_WSTRB => grp_mmatmul_block_q4_0_const_block_q8_0_const_s_fu_179_m_axi_B_WSTRB,
        m_axi_B_WLAST => grp_mmatmul_block_q4_0_const_block_q8_0_const_s_fu_179_m_axi_B_WLAST,
        m_axi_B_WID => grp_mmatmul_block_q4_0_const_block_q8_0_const_s_fu_179_m_axi_B_WID,
        m_axi_B_WUSER => grp_mmatmul_block_q4_0_const_block_q8_0_const_s_fu_179_m_axi_B_WUSER,
        m_axi_B_ARVALID => grp_mmatmul_block_q4_0_const_block_q8_0_const_s_fu_179_m_axi_B_ARVALID,
        m_axi_B_ARREADY => m_axi_B_ARREADY,
        m_axi_B_ARADDR => grp_mmatmul_block_q4_0_const_block_q8_0_const_s_fu_179_m_axi_B_ARADDR,
        m_axi_B_ARID => grp_mmatmul_block_q4_0_const_block_q8_0_const_s_fu_179_m_axi_B_ARID,
        m_axi_B_ARLEN => grp_mmatmul_block_q4_0_const_block_q8_0_const_s_fu_179_m_axi_B_ARLEN,
        m_axi_B_ARSIZE => grp_mmatmul_block_q4_0_const_block_q8_0_const_s_fu_179_m_axi_B_ARSIZE,
        m_axi_B_ARBURST => grp_mmatmul_block_q4_0_const_block_q8_0_const_s_fu_179_m_axi_B_ARBURST,
        m_axi_B_ARLOCK => grp_mmatmul_block_q4_0_const_block_q8_0_const_s_fu_179_m_axi_B_ARLOCK,
        m_axi_B_ARCACHE => grp_mmatmul_block_q4_0_const_block_q8_0_const_s_fu_179_m_axi_B_ARCACHE,
        m_axi_B_ARPROT => grp_mmatmul_block_q4_0_const_block_q8_0_const_s_fu_179_m_axi_B_ARPROT,
        m_axi_B_ARQOS => grp_mmatmul_block_q4_0_const_block_q8_0_const_s_fu_179_m_axi_B_ARQOS,
        m_axi_B_ARREGION => grp_mmatmul_block_q4_0_const_block_q8_0_const_s_fu_179_m_axi_B_ARREGION,
        m_axi_B_ARUSER => grp_mmatmul_block_q4_0_const_block_q8_0_const_s_fu_179_m_axi_B_ARUSER,
        m_axi_B_RVALID => m_axi_B_RVALID,
        m_axi_B_RREADY => grp_mmatmul_block_q4_0_const_block_q8_0_const_s_fu_179_m_axi_B_RREADY,
        m_axi_B_RDATA => m_axi_B_RDATA,
        m_axi_B_RLAST => m_axi_B_RLAST,
        m_axi_B_RID => m_axi_B_RID,
        m_axi_B_RFIFONUM => m_axi_B_RFIFONUM,
        m_axi_B_RUSER => m_axi_B_RUSER,
        m_axi_B_RRESP => m_axi_B_RRESP,
        m_axi_B_BVALID => ap_const_logic_0,
        m_axi_B_BREADY => grp_mmatmul_block_q4_0_const_block_q8_0_const_s_fu_179_m_axi_B_BREADY,
        m_axi_B_BRESP => ap_const_lv2_0,
        m_axi_B_BID => ap_const_lv1_0,
        m_axi_B_BUSER => ap_const_lv1_0,
        ap_ce => grp_mmatmul_block_q4_0_const_block_q8_0_const_s_fu_179_ap_ce,
        aa => aa_reg_491,
        bb => bb_reg_486,
        ap_return => grp_mmatmul_block_q4_0_const_block_q8_0_const_s_fu_179_ap_return,
        A_blk_n_AR => grp_mmatmul_block_q4_0_const_block_q8_0_const_s_fu_179_A_blk_n_AR,
        A_blk_n_R => grp_mmatmul_block_q4_0_const_block_q8_0_const_s_fu_179_A_blk_n_R,
        B_blk_n_AR => grp_mmatmul_block_q4_0_const_block_q8_0_const_s_fu_179_B_blk_n_AR,
        B_blk_n_R => grp_mmatmul_block_q4_0_const_block_q8_0_const_s_fu_179_B_blk_n_R);

    hadd_16ns_16ns_16_5_full_dsp_1_x_U23 : component sgemm_hadd_16ns_16ns_16_5_full_dsp_1_x
    generic map (
        ID => 1,
        NUM_STAGE => 5,
        din0_WIDTH => 16,
        din1_WIDTH => 16,
        dout_WIDTH => 16)
    port map (
        clk => ap_clk,
        reset => ap_rst,
        din0 => Cv_load_reg_501,
        din1 => res_reg_506,
        ce => grp_fu_189_ce,
        dout => grp_fu_189_p2);

    mul_63s_63s_63_5_1_U24 : component sgemm_mul_63s_63s_63_5_1
    generic map (
        ID => 1,
        NUM_STAGE => 5,
        din0_WIDTH => 63,
        din1_WIDTH => 63,
        dout_WIDTH => 63)
    port map (
        clk => ap_clk,
        reset => ap_rst,
        din0 => grp_fu_193_p0,
        din1 => grp_fu_193_p1,
        ce => grp_fu_193_ce,
        dout => grp_fu_193_p2);

    flow_control_loop_pipe_sequential_init_U : component sgemm_flow_control_loop_pipe_sequential_init
    port map (
        ap_clk => ap_clk,
        ap_rst => ap_rst,
        ap_start => ap_start,
        ap_ready => ap_ready,
        ap_done => ap_done,
        ap_start_int => ap_start_int,
        ap_loop_init => ap_loop_init,
        ap_ready_int => ap_ready_int,
        ap_loop_exit_ready => ap_condition_exit_pp0_iter0_stage8,
        ap_loop_exit_done => ap_done_int,
        ap_continue_int => ap_continue_int,
        ap_done_int => ap_done_int);





    ap_CS_fsm_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                ap_CS_fsm <= ap_ST_fsm_pp0_stage0;
            else
                ap_CS_fsm <= ap_NS_fsm;
            end if;
        end if;
    end process;


    ap_done_reg_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                ap_done_reg <= ap_const_logic_0;
            else
                if ((ap_continue_int = ap_const_logic_1)) then 
                    ap_done_reg <= ap_const_logic_0;
                elsif (((ap_const_logic_1 = ap_CS_fsm_pp0_stage3) and (ap_loop_exit_ready_pp0_iter7_reg = ap_const_logic_1) and (ap_const_boolean_0 = ap_block_pp0_stage3_subdone))) then 
                    ap_done_reg <= ap_const_logic_1;
                end if; 
            end if;
        end if;
    end process;


    ap_enable_reg_pp0_iter0_reg_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                ap_enable_reg_pp0_iter0_reg <= ap_const_logic_0;
            else
                if ((ap_const_logic_1 = ap_CS_fsm_pp0_stage0)) then 
                    ap_enable_reg_pp0_iter0_reg <= ap_start_int;
                end if; 
            end if;
        end if;
    end process;


    ap_enable_reg_pp0_iter1_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                ap_enable_reg_pp0_iter1 <= ap_const_logic_0;
            else
                if ((ap_const_logic_1 = ap_condition_exit_pp0_iter0_stage8)) then 
                    ap_enable_reg_pp0_iter1 <= ap_const_logic_0;
                elsif (((ap_const_logic_1 = ap_CS_fsm_pp0_stage8) and (ap_const_boolean_0 = ap_block_pp0_stage8_subdone))) then 
                    ap_enable_reg_pp0_iter1 <= ap_enable_reg_pp0_iter0;
                end if; 
            end if;
        end if;
    end process;


    ap_enable_reg_pp0_iter2_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                ap_enable_reg_pp0_iter2 <= ap_const_logic_0;
            else
                if (((ap_const_logic_1 = ap_CS_fsm_pp0_stage8) and (ap_const_boolean_0 = ap_block_pp0_stage8_subdone))) then 
                    ap_enable_reg_pp0_iter2 <= ap_enable_reg_pp0_iter1;
                end if; 
            end if;
        end if;
    end process;


    ap_enable_reg_pp0_iter3_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                ap_enable_reg_pp0_iter3 <= ap_const_logic_0;
            else
                if (((ap_const_logic_1 = ap_CS_fsm_pp0_stage8) and (ap_const_boolean_0 = ap_block_pp0_stage8_subdone))) then 
                    ap_enable_reg_pp0_iter3 <= ap_enable_reg_pp0_iter2;
                end if; 
            end if;
        end if;
    end process;


    ap_enable_reg_pp0_iter4_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                ap_enable_reg_pp0_iter4 <= ap_const_logic_0;
            else
                if (((ap_const_logic_1 = ap_CS_fsm_pp0_stage8) and (ap_const_boolean_0 = ap_block_pp0_stage8_subdone))) then 
                    ap_enable_reg_pp0_iter4 <= ap_enable_reg_pp0_iter3;
                end if; 
            end if;
        end if;
    end process;


    ap_enable_reg_pp0_iter5_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                ap_enable_reg_pp0_iter5 <= ap_const_logic_0;
            else
                if (((ap_const_logic_1 = ap_CS_fsm_pp0_stage8) and (ap_const_boolean_0 = ap_block_pp0_stage8_subdone))) then 
                    ap_enable_reg_pp0_iter5 <= ap_enable_reg_pp0_iter4;
                end if; 
            end if;
        end if;
    end process;


    ap_enable_reg_pp0_iter6_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                ap_enable_reg_pp0_iter6 <= ap_const_logic_0;
            else
                if (((ap_const_logic_1 = ap_CS_fsm_pp0_stage8) and (ap_const_boolean_0 = ap_block_pp0_stage8_subdone))) then 
                    ap_enable_reg_pp0_iter6 <= ap_enable_reg_pp0_iter5;
                end if; 
            end if;
        end if;
    end process;


    ap_enable_reg_pp0_iter7_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                ap_enable_reg_pp0_iter7 <= ap_const_logic_0;
            else
                if (((ap_const_logic_1 = ap_CS_fsm_pp0_stage8) and (ap_const_boolean_0 = ap_block_pp0_stage8_subdone))) then 
                    ap_enable_reg_pp0_iter7 <= ap_enable_reg_pp0_iter6;
                end if; 
            end if;
        end if;
    end process;


    ap_enable_reg_pp0_iter8_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                ap_enable_reg_pp0_iter8 <= ap_const_logic_0;
            else
                if (((ap_enable_reg_pp0_iter8 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage3) and (ap_const_boolean_0 = ap_block_pp0_stage3_subdone))) then 
                    ap_enable_reg_pp0_iter8 <= ap_const_logic_0;
                elsif (((ap_const_logic_1 = ap_CS_fsm_pp0_stage8) and (ap_const_boolean_0 = ap_block_pp0_stage8_subdone))) then 
                    ap_enable_reg_pp0_iter8 <= ap_enable_reg_pp0_iter7;
                end if; 
            end if;
        end if;
    end process;


    grp_mmatmul_block_q4_0_const_block_q8_0_const_s_fu_179_ap_start_reg_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                grp_mmatmul_block_q4_0_const_block_q8_0_const_s_fu_179_ap_start_reg <= ap_const_logic_0;
            else
                if (((icmp_ln76_reg_462 = ap_const_lv1_0) and (ap_enable_reg_pp0_iter0 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage7) and (ap_const_boolean_0 = ap_block_pp0_stage7_11001))) then 
                    grp_mmatmul_block_q4_0_const_block_q8_0_const_s_fu_179_ap_start_reg <= ap_const_logic_1;
                elsif ((grp_mmatmul_block_q4_0_const_block_q8_0_const_s_fu_179_ap_ready = ap_const_logic_1)) then 
                    grp_mmatmul_block_q4_0_const_block_q8_0_const_s_fu_179_ap_start_reg <= ap_const_logic_0;
                end if; 
            end if;
        end if;
    end process;


    ap_loop_exit_ready_pp0_iter1_reg_assign_proc : process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_logic_1 = ap_condition_exit_pp0_iter7_stage3) and (ap_idle_pp0_0to6 = ap_const_logic_1))) then 
                ap_loop_exit_ready_pp0_iter1_reg <= ap_const_logic_0;
            elsif (((ap_const_logic_1 = ap_CS_fsm_pp0_stage8) and (ap_const_boolean_0 = ap_block_pp0_stage8_11001))) then 
                ap_loop_exit_ready_pp0_iter1_reg <= ap_loop_exit_ready;
            end if; 
        end if;
    end process;

    ap_loop_exit_ready_pp0_iter2_reg_assign_proc : process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_logic_1 = ap_condition_exit_pp0_iter7_stage3) and (ap_idle_pp0_0to6 = ap_const_logic_1))) then 
                ap_loop_exit_ready_pp0_iter2_reg <= ap_const_logic_0;
            elsif (((ap_const_logic_1 = ap_CS_fsm_pp0_stage8) and (ap_const_boolean_0 = ap_block_pp0_stage8_11001))) then 
                ap_loop_exit_ready_pp0_iter2_reg <= ap_loop_exit_ready_pp0_iter1_reg;
            end if; 
        end if;
    end process;

    ap_loop_exit_ready_pp0_iter3_reg_assign_proc : process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_logic_1 = ap_condition_exit_pp0_iter7_stage3) and (ap_idle_pp0_0to6 = ap_const_logic_1))) then 
                ap_loop_exit_ready_pp0_iter3_reg <= ap_const_logic_0;
            elsif (((ap_const_logic_1 = ap_CS_fsm_pp0_stage8) and (ap_const_boolean_0 = ap_block_pp0_stage8_11001))) then 
                ap_loop_exit_ready_pp0_iter3_reg <= ap_loop_exit_ready_pp0_iter2_reg;
            end if; 
        end if;
    end process;

    ap_loop_exit_ready_pp0_iter4_reg_assign_proc : process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_logic_1 = ap_condition_exit_pp0_iter7_stage3) and (ap_idle_pp0_0to6 = ap_const_logic_1))) then 
                ap_loop_exit_ready_pp0_iter4_reg <= ap_const_logic_0;
            elsif (((ap_const_logic_1 = ap_CS_fsm_pp0_stage8) and (ap_const_boolean_0 = ap_block_pp0_stage8_11001))) then 
                ap_loop_exit_ready_pp0_iter4_reg <= ap_loop_exit_ready_pp0_iter3_reg;
            end if; 
        end if;
    end process;

    ap_loop_exit_ready_pp0_iter5_reg_assign_proc : process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_logic_1 = ap_condition_exit_pp0_iter7_stage3) and (ap_idle_pp0_0to6 = ap_const_logic_1))) then 
                ap_loop_exit_ready_pp0_iter5_reg <= ap_const_logic_0;
            elsif (((ap_const_logic_1 = ap_CS_fsm_pp0_stage8) and (ap_const_boolean_0 = ap_block_pp0_stage8_11001))) then 
                ap_loop_exit_ready_pp0_iter5_reg <= ap_loop_exit_ready_pp0_iter4_reg;
            end if; 
        end if;
    end process;

    ap_loop_exit_ready_pp0_iter6_reg_assign_proc : process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_logic_1 = ap_condition_exit_pp0_iter7_stage3) and (ap_idle_pp0_0to6 = ap_const_logic_1))) then 
                ap_loop_exit_ready_pp0_iter6_reg <= ap_const_logic_0;
            elsif (((ap_const_logic_1 = ap_CS_fsm_pp0_stage8) and (ap_const_boolean_0 = ap_block_pp0_stage8_11001))) then 
                ap_loop_exit_ready_pp0_iter6_reg <= ap_loop_exit_ready_pp0_iter5_reg;
            end if; 
        end if;
    end process;

    ap_loop_exit_ready_pp0_iter7_reg_assign_proc : process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_logic_1 = ap_condition_exit_pp0_iter7_stage3) and (ap_idle_pp0_0to6 = ap_const_logic_1))) then 
                ap_loop_exit_ready_pp0_iter7_reg <= ap_const_logic_0;
            elsif (((ap_const_logic_1 = ap_CS_fsm_pp0_stage8) and (ap_const_boolean_0 = ap_block_pp0_stage8_11001))) then 
                ap_loop_exit_ready_pp0_iter7_reg <= ap_loop_exit_ready_pp0_iter6_reg;
            end if; 
        end if;
    end process;

    i_fu_100_assign_proc : process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_logic_1 = ap_CS_fsm_pp0_stage0) and (ap_const_boolean_0 = ap_block_pp0_stage0_11001))) then
                if (((icmp_ln76_fu_241_p2 = ap_const_lv1_0) and (ap_enable_reg_pp0_iter0 = ap_const_logic_1))) then 
                    i_fu_100 <= i_3_fu_316_p2;
                elsif ((ap_loop_init = ap_const_logic_1)) then 
                    i_fu_100 <= ap_const_lv4_0;
                end if;
            end if; 
        end if;
    end process;

    indvar_flatten_fu_108_assign_proc : process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_logic_1 = ap_CS_fsm_pp0_stage0) and (ap_const_boolean_0 = ap_block_pp0_stage0_11001))) then
                if (((icmp_ln76_fu_241_p2 = ap_const_lv1_0) and (ap_enable_reg_pp0_iter0 = ap_const_logic_1))) then 
                    indvar_flatten_fu_108 <= add_ln76_fu_247_p2;
                elsif ((ap_loop_init = ap_const_logic_1)) then 
                    indvar_flatten_fu_108 <= ap_const_lv16_0;
                end if;
            end if; 
        end if;
    end process;

    j_fu_104_assign_proc : process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_logic_1 = ap_CS_fsm_pp0_stage0) and (ap_const_boolean_0 = ap_block_pp0_stage0_11001))) then
                if (((icmp_ln76_fu_241_p2 = ap_const_lv1_0) and (ap_enable_reg_pp0_iter0 = ap_const_logic_1))) then 
                    j_fu_104 <= select_ln76_1_fu_270_p3;
                elsif ((ap_loop_init = ap_const_logic_1)) then 
                    j_fu_104 <= ap_const_lv8_0;
                end if;
            end if; 
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_logic_1 = ap_CS_fsm_pp0_stage0) and (ap_const_boolean_0 = ap_block_pp0_stage0_11001))) then
                Cv_addr_reg_496 <= zext_ln83_fu_407_p1(4 - 1 downto 0);
                Cv_addr_reg_496_pp0_iter8_reg <= Cv_addr_reg_496;
                add36_i_reg_471 <= add36_i_fu_304_p2;
                add_ln83_reg_476 <= add_ln83_fu_310_p2;
                add_ln83_reg_476_pp0_iter1_reg <= add_ln83_reg_476;
                add_ln83_reg_476_pp0_iter2_reg <= add_ln83_reg_476_pp0_iter1_reg;
                add_ln83_reg_476_pp0_iter3_reg <= add_ln83_reg_476_pp0_iter2_reg;
                add_ln83_reg_476_pp0_iter4_reg <= add_ln83_reg_476_pp0_iter3_reg;
                add_ln83_reg_476_pp0_iter5_reg <= add_ln83_reg_476_pp0_iter4_reg;
                add_ln83_reg_476_pp0_iter6_reg <= add_ln83_reg_476_pp0_iter5_reg;
                icmp_ln76_reg_462 <= icmp_ln76_fu_241_p2;
                icmp_ln76_reg_462_pp0_iter1_reg <= icmp_ln76_reg_462;
                icmp_ln76_reg_462_pp0_iter2_reg <= icmp_ln76_reg_462_pp0_iter1_reg;
                icmp_ln76_reg_462_pp0_iter3_reg <= icmp_ln76_reg_462_pp0_iter2_reg;
                icmp_ln76_reg_462_pp0_iter4_reg <= icmp_ln76_reg_462_pp0_iter3_reg;
                icmp_ln76_reg_462_pp0_iter5_reg <= icmp_ln76_reg_462_pp0_iter4_reg;
                icmp_ln76_reg_462_pp0_iter6_reg <= icmp_ln76_reg_462_pp0_iter5_reg;
                icmp_ln76_reg_462_pp0_iter7_reg <= icmp_ln76_reg_462_pp0_iter6_reg;
                select_ln76_reg_466 <= select_ln76_fu_262_p3;
                    zext_ln72_cast_reg_457(30 downto 0) <= zext_ln72_cast_fu_206_p1(30 downto 0);
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_enable_reg_pp0_iter7 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage1) and (ap_const_boolean_0 = ap_block_pp0_stage1_11001))) then
                Cv_load_reg_501 <= Cv_q0;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_logic_1 = ap_CS_fsm_pp0_stage7) and (ap_const_boolean_0 = ap_block_pp0_stage7_11001))) then
                aa_reg_491 <= aa_fu_401_p2;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_logic_1 = ap_CS_fsm_pp0_stage2) and (ap_const_boolean_0 = ap_block_pp0_stage2_11001))) then
                add41_i_reg_511 <= grp_fu_189_p2;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_logic_1 = ap_CS_fsm_pp0_stage1) and (ap_const_boolean_0 = ap_block_pp0_stage1_11001))) then
                add_ln80_reg_481 <= add_ln80_fu_340_p2;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_logic_1 = ap_CS_fsm_pp0_stage6) and (ap_const_boolean_0 = ap_block_pp0_stage6_11001))) then
                bb_reg_486 <= bb_fu_370_p2;
                res_reg_506 <= grp_mmatmul_block_q4_0_const_block_q8_0_const_s_fu_179_ap_return;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if ((((ap_enable_reg_pp0_iter0 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage6) and (ap_const_boolean_0 = ap_block_pp0_stage6_11001)) or ((ap_enable_reg_pp0_iter0 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage5) and (ap_const_boolean_0 = ap_block_pp0_stage5_11001)))) then
                reg_197 <= grp_fu_193_p2;
            end if;
        end if;
    end process;
    zext_ln72_cast_reg_457(62 downto 31) <= "00000000000000000000000000000000";

    ap_NS_fsm_assign_proc : process (ap_CS_fsm, ap_block_pp0_stage8_subdone, ap_block_pp0_stage3_subdone, ap_condition_exit_pp0_iter7_stage3, ap_idle_pp0_0to6, ap_block_pp0_stage0_subdone, ap_idle_pp0_1to8, ap_done_pending_pp0, ap_block_pp0_stage1_subdone, ap_block_pp0_stage2_subdone, ap_block_pp0_stage4_subdone, ap_block_pp0_stage5_subdone, ap_block_pp0_stage6_subdone, ap_block_pp0_stage7_subdone, ap_start_int)
    begin
        case ap_CS_fsm is
            when ap_ST_fsm_pp0_stage0 => 
                if ((not(((ap_start_int = ap_const_logic_0) and (ap_done_pending_pp0 = ap_const_logic_0) and (ap_idle_pp0_1to8 = ap_const_logic_1))) and (ap_const_boolean_0 = ap_block_pp0_stage0_subdone))) then
                    ap_NS_fsm <= ap_ST_fsm_pp0_stage1;
                else
                    ap_NS_fsm <= ap_ST_fsm_pp0_stage0;
                end if;
            when ap_ST_fsm_pp0_stage1 => 
                if ((ap_const_boolean_0 = ap_block_pp0_stage1_subdone)) then
                    ap_NS_fsm <= ap_ST_fsm_pp0_stage2;
                else
                    ap_NS_fsm <= ap_ST_fsm_pp0_stage1;
                end if;
            when ap_ST_fsm_pp0_stage2 => 
                if ((ap_const_boolean_0 = ap_block_pp0_stage2_subdone)) then
                    ap_NS_fsm <= ap_ST_fsm_pp0_stage3;
                else
                    ap_NS_fsm <= ap_ST_fsm_pp0_stage2;
                end if;
            when ap_ST_fsm_pp0_stage3 => 
                if (((ap_const_logic_1 = ap_condition_exit_pp0_iter7_stage3) and (ap_idle_pp0_0to6 = ap_const_logic_1))) then
                    ap_NS_fsm <= ap_ST_fsm_pp0_stage0;
                elsif ((ap_const_boolean_0 = ap_block_pp0_stage3_subdone)) then
                    ap_NS_fsm <= ap_ST_fsm_pp0_stage4;
                else
                    ap_NS_fsm <= ap_ST_fsm_pp0_stage3;
                end if;
            when ap_ST_fsm_pp0_stage4 => 
                if ((ap_const_boolean_0 = ap_block_pp0_stage4_subdone)) then
                    ap_NS_fsm <= ap_ST_fsm_pp0_stage5;
                else
                    ap_NS_fsm <= ap_ST_fsm_pp0_stage4;
                end if;
            when ap_ST_fsm_pp0_stage5 => 
                if ((ap_const_boolean_0 = ap_block_pp0_stage5_subdone)) then
                    ap_NS_fsm <= ap_ST_fsm_pp0_stage6;
                else
                    ap_NS_fsm <= ap_ST_fsm_pp0_stage5;
                end if;
            when ap_ST_fsm_pp0_stage6 => 
                if ((ap_const_boolean_0 = ap_block_pp0_stage6_subdone)) then
                    ap_NS_fsm <= ap_ST_fsm_pp0_stage7;
                else
                    ap_NS_fsm <= ap_ST_fsm_pp0_stage6;
                end if;
            when ap_ST_fsm_pp0_stage7 => 
                if ((ap_const_boolean_0 = ap_block_pp0_stage7_subdone)) then
                    ap_NS_fsm <= ap_ST_fsm_pp0_stage8;
                else
                    ap_NS_fsm <= ap_ST_fsm_pp0_stage7;
                end if;
            when ap_ST_fsm_pp0_stage8 => 
                if ((ap_const_boolean_0 = ap_block_pp0_stage8_subdone)) then
                    ap_NS_fsm <= ap_ST_fsm_pp0_stage0;
                else
                    ap_NS_fsm <= ap_ST_fsm_pp0_stage8;
                end if;
            when others =>  
                ap_NS_fsm <= "XXXXXXXXX";
        end case;
    end process;

    A_blk_n_AR_assign_proc : process(ap_CS_fsm_pp0_stage0, ap_enable_reg_pp0_iter0, ap_enable_reg_pp0_iter1, ap_enable_reg_pp0_iter2, ap_enable_reg_pp0_iter3, ap_CS_fsm_pp0_stage8, grp_mmatmul_block_q4_0_const_block_q8_0_const_s_fu_179_A_blk_n_AR, icmp_ln76_reg_462, ap_block_pp0_stage8, ap_block_pp0_stage0, ap_CS_fsm_pp0_stage1, ap_block_pp0_stage1, ap_CS_fsm_pp0_stage2, ap_block_pp0_stage2, ap_CS_fsm_pp0_stage3, ap_block_pp0_stage3, ap_CS_fsm_pp0_stage4, ap_block_pp0_stage4, ap_CS_fsm_pp0_stage5, ap_block_pp0_stage5, ap_CS_fsm_pp0_stage6, ap_block_pp0_stage6, ap_CS_fsm_pp0_stage7, ap_block_pp0_stage7, icmp_ln76_reg_462_pp0_iter1_reg, icmp_ln76_reg_462_pp0_iter2_reg)
    begin
        if ((((ap_enable_reg_pp0_iter3 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage8) and (ap_const_boolean_0 = ap_block_pp0_stage8)) or ((ap_enable_reg_pp0_iter3 = ap_const_logic_1) and (icmp_ln76_reg_462_pp0_iter2_reg = ap_const_lv1_0) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0) and (ap_const_boolean_0 = ap_block_pp0_stage0)) or ((ap_enable_reg_pp0_iter3 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage6) and (ap_const_boolean_0 = ap_block_pp0_stage6)) or ((ap_enable_reg_pp0_iter3 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage5) and (ap_const_boolean_0 = ap_block_pp0_stage5)) or ((ap_enable_reg_pp0_iter3 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage4) and (ap_const_boolean_0 = ap_block_pp0_stage4)) or ((ap_enable_reg_pp0_iter3 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage3) and (ap_const_boolean_0 = ap_block_pp0_stage3)) or ((ap_enable_reg_pp0_iter3 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage2) and (ap_const_boolean_0 
    = ap_block_pp0_stage2)) or ((ap_enable_reg_pp0_iter3 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage1) and (ap_const_boolean_0 = ap_block_pp0_stage1)) or ((ap_enable_reg_pp0_iter1 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage8) and (ap_const_boolean_0 = ap_block_pp0_stage8)) or ((ap_enable_reg_pp0_iter1 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage7) and (ap_const_boolean_0 = ap_block_pp0_stage7)) or ((ap_enable_reg_pp0_iter1 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage6) and (ap_const_boolean_0 = ap_block_pp0_stage6)) or ((ap_enable_reg_pp0_iter1 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage5) and (ap_const_boolean_0 = ap_block_pp0_stage5)) or ((ap_enable_reg_pp0_iter1 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage4) and (ap_const_boolean_0 = ap_block_pp0_stage4)) or ((ap_enable_reg_pp0_iter1 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage3) and (ap_const_boolean_0 = ap_block_pp0_stage3)) 
    or ((ap_enable_reg_pp0_iter1 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage2) and (ap_const_boolean_0 = ap_block_pp0_stage2)) or ((ap_enable_reg_pp0_iter1 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage1) and (ap_const_boolean_0 = ap_block_pp0_stage1)) or ((icmp_ln76_reg_462 = ap_const_lv1_0) and (ap_enable_reg_pp0_iter1 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0) and (ap_const_boolean_0 = ap_block_pp0_stage0)) or ((icmp_ln76_reg_462 = ap_const_lv1_0) and (ap_enable_reg_pp0_iter0 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage8) and (ap_const_boolean_0 = ap_block_pp0_stage8)) or ((ap_enable_reg_pp0_iter2 = ap_const_logic_1) and (icmp_ln76_reg_462_pp0_iter1_reg = ap_const_lv1_0) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0) and (ap_const_boolean_0 = ap_block_pp0_stage0)) or ((ap_enable_reg_pp0_iter2 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage7) and (ap_const_boolean_0 = ap_block_pp0_stage7)) or ((ap_enable_reg_pp0_iter2 = 
    ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage6) and (ap_const_boolean_0 = ap_block_pp0_stage6)) or ((ap_enable_reg_pp0_iter2 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage5) and (ap_const_boolean_0 = ap_block_pp0_stage5)) or ((ap_enable_reg_pp0_iter2 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage4) and (ap_const_boolean_0 = ap_block_pp0_stage4)) or ((ap_enable_reg_pp0_iter2 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage3) and (ap_const_boolean_0 = ap_block_pp0_stage3)) or ((ap_enable_reg_pp0_iter2 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage2) and (ap_const_boolean_0 = ap_block_pp0_stage2)) or ((ap_enable_reg_pp0_iter2 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage1) and (ap_const_boolean_0 = ap_block_pp0_stage1)))) then 
            A_blk_n_AR <= grp_mmatmul_block_q4_0_const_block_q8_0_const_s_fu_179_A_blk_n_AR;
        else 
            A_blk_n_AR <= ap_const_logic_1;
        end if; 
    end process;


    A_blk_n_R_assign_proc : process(ap_CS_fsm_pp0_stage0, ap_enable_reg_pp0_iter0, ap_enable_reg_pp0_iter1, ap_enable_reg_pp0_iter2, ap_enable_reg_pp0_iter3, ap_CS_fsm_pp0_stage8, grp_mmatmul_block_q4_0_const_block_q8_0_const_s_fu_179_A_blk_n_R, icmp_ln76_reg_462, ap_block_pp0_stage8, ap_block_pp0_stage0, ap_CS_fsm_pp0_stage1, ap_block_pp0_stage1, ap_CS_fsm_pp0_stage2, ap_block_pp0_stage2, ap_CS_fsm_pp0_stage3, ap_block_pp0_stage3, ap_CS_fsm_pp0_stage4, ap_block_pp0_stage4, ap_CS_fsm_pp0_stage5, ap_block_pp0_stage5, ap_CS_fsm_pp0_stage6, ap_block_pp0_stage6, ap_CS_fsm_pp0_stage7, ap_block_pp0_stage7, icmp_ln76_reg_462_pp0_iter1_reg, icmp_ln76_reg_462_pp0_iter2_reg)
    begin
        if ((((ap_enable_reg_pp0_iter3 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage8) and (ap_const_boolean_0 = ap_block_pp0_stage8)) or ((ap_enable_reg_pp0_iter3 = ap_const_logic_1) and (icmp_ln76_reg_462_pp0_iter2_reg = ap_const_lv1_0) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0) and (ap_const_boolean_0 = ap_block_pp0_stage0)) or ((ap_enable_reg_pp0_iter3 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage6) and (ap_const_boolean_0 = ap_block_pp0_stage6)) or ((ap_enable_reg_pp0_iter3 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage5) and (ap_const_boolean_0 = ap_block_pp0_stage5)) or ((ap_enable_reg_pp0_iter3 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage4) and (ap_const_boolean_0 = ap_block_pp0_stage4)) or ((ap_enable_reg_pp0_iter3 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage3) and (ap_const_boolean_0 = ap_block_pp0_stage3)) or ((ap_enable_reg_pp0_iter3 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage2) and (ap_const_boolean_0 
    = ap_block_pp0_stage2)) or ((ap_enable_reg_pp0_iter3 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage1) and (ap_const_boolean_0 = ap_block_pp0_stage1)) or ((ap_enable_reg_pp0_iter1 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage8) and (ap_const_boolean_0 = ap_block_pp0_stage8)) or ((ap_enable_reg_pp0_iter1 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage7) and (ap_const_boolean_0 = ap_block_pp0_stage7)) or ((ap_enable_reg_pp0_iter1 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage6) and (ap_const_boolean_0 = ap_block_pp0_stage6)) or ((ap_enable_reg_pp0_iter1 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage5) and (ap_const_boolean_0 = ap_block_pp0_stage5)) or ((ap_enable_reg_pp0_iter1 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage4) and (ap_const_boolean_0 = ap_block_pp0_stage4)) or ((ap_enable_reg_pp0_iter1 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage3) and (ap_const_boolean_0 = ap_block_pp0_stage3)) 
    or ((ap_enable_reg_pp0_iter1 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage2) and (ap_const_boolean_0 = ap_block_pp0_stage2)) or ((ap_enable_reg_pp0_iter1 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage1) and (ap_const_boolean_0 = ap_block_pp0_stage1)) or ((icmp_ln76_reg_462 = ap_const_lv1_0) and (ap_enable_reg_pp0_iter1 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0) and (ap_const_boolean_0 = ap_block_pp0_stage0)) or ((icmp_ln76_reg_462 = ap_const_lv1_0) and (ap_enable_reg_pp0_iter0 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage8) and (ap_const_boolean_0 = ap_block_pp0_stage8)) or ((ap_enable_reg_pp0_iter2 = ap_const_logic_1) and (icmp_ln76_reg_462_pp0_iter1_reg = ap_const_lv1_0) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0) and (ap_const_boolean_0 = ap_block_pp0_stage0)) or ((ap_enable_reg_pp0_iter2 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage7) and (ap_const_boolean_0 = ap_block_pp0_stage7)) or ((ap_enable_reg_pp0_iter2 = 
    ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage6) and (ap_const_boolean_0 = ap_block_pp0_stage6)) or ((ap_enable_reg_pp0_iter2 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage5) and (ap_const_boolean_0 = ap_block_pp0_stage5)) or ((ap_enable_reg_pp0_iter2 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage4) and (ap_const_boolean_0 = ap_block_pp0_stage4)) or ((ap_enable_reg_pp0_iter2 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage3) and (ap_const_boolean_0 = ap_block_pp0_stage3)) or ((ap_enable_reg_pp0_iter2 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage2) and (ap_const_boolean_0 = ap_block_pp0_stage2)) or ((ap_enable_reg_pp0_iter2 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage1) and (ap_const_boolean_0 = ap_block_pp0_stage1)))) then 
            A_blk_n_R <= grp_mmatmul_block_q4_0_const_block_q8_0_const_s_fu_179_A_blk_n_R;
        else 
            A_blk_n_R <= ap_const_logic_1;
        end if; 
    end process;


    B_blk_n_AR_assign_proc : process(ap_CS_fsm_pp0_stage0, ap_enable_reg_pp0_iter0, ap_enable_reg_pp0_iter1, ap_enable_reg_pp0_iter2, ap_enable_reg_pp0_iter3, ap_CS_fsm_pp0_stage8, grp_mmatmul_block_q4_0_const_block_q8_0_const_s_fu_179_B_blk_n_AR, icmp_ln76_reg_462, ap_block_pp0_stage8, ap_block_pp0_stage0, ap_CS_fsm_pp0_stage1, ap_block_pp0_stage1, ap_CS_fsm_pp0_stage2, ap_block_pp0_stage2, ap_CS_fsm_pp0_stage3, ap_block_pp0_stage3, ap_CS_fsm_pp0_stage4, ap_block_pp0_stage4, ap_CS_fsm_pp0_stage5, ap_block_pp0_stage5, ap_CS_fsm_pp0_stage6, ap_block_pp0_stage6, ap_CS_fsm_pp0_stage7, ap_block_pp0_stage7, icmp_ln76_reg_462_pp0_iter1_reg, icmp_ln76_reg_462_pp0_iter2_reg)
    begin
        if ((((ap_enable_reg_pp0_iter3 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage8) and (ap_const_boolean_0 = ap_block_pp0_stage8)) or ((ap_enable_reg_pp0_iter3 = ap_const_logic_1) and (icmp_ln76_reg_462_pp0_iter2_reg = ap_const_lv1_0) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0) and (ap_const_boolean_0 = ap_block_pp0_stage0)) or ((ap_enable_reg_pp0_iter3 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage6) and (ap_const_boolean_0 = ap_block_pp0_stage6)) or ((ap_enable_reg_pp0_iter3 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage5) and (ap_const_boolean_0 = ap_block_pp0_stage5)) or ((ap_enable_reg_pp0_iter3 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage4) and (ap_const_boolean_0 = ap_block_pp0_stage4)) or ((ap_enable_reg_pp0_iter3 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage3) and (ap_const_boolean_0 = ap_block_pp0_stage3)) or ((ap_enable_reg_pp0_iter3 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage2) and (ap_const_boolean_0 
    = ap_block_pp0_stage2)) or ((ap_enable_reg_pp0_iter3 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage1) and (ap_const_boolean_0 = ap_block_pp0_stage1)) or ((ap_enable_reg_pp0_iter1 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage8) and (ap_const_boolean_0 = ap_block_pp0_stage8)) or ((ap_enable_reg_pp0_iter1 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage7) and (ap_const_boolean_0 = ap_block_pp0_stage7)) or ((ap_enable_reg_pp0_iter1 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage6) and (ap_const_boolean_0 = ap_block_pp0_stage6)) or ((ap_enable_reg_pp0_iter1 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage5) and (ap_const_boolean_0 = ap_block_pp0_stage5)) or ((ap_enable_reg_pp0_iter1 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage4) and (ap_const_boolean_0 = ap_block_pp0_stage4)) or ((ap_enable_reg_pp0_iter1 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage3) and (ap_const_boolean_0 = ap_block_pp0_stage3)) 
    or ((ap_enable_reg_pp0_iter1 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage2) and (ap_const_boolean_0 = ap_block_pp0_stage2)) or ((ap_enable_reg_pp0_iter1 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage1) and (ap_const_boolean_0 = ap_block_pp0_stage1)) or ((icmp_ln76_reg_462 = ap_const_lv1_0) and (ap_enable_reg_pp0_iter1 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0) and (ap_const_boolean_0 = ap_block_pp0_stage0)) or ((icmp_ln76_reg_462 = ap_const_lv1_0) and (ap_enable_reg_pp0_iter0 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage8) and (ap_const_boolean_0 = ap_block_pp0_stage8)) or ((ap_enable_reg_pp0_iter2 = ap_const_logic_1) and (icmp_ln76_reg_462_pp0_iter1_reg = ap_const_lv1_0) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0) and (ap_const_boolean_0 = ap_block_pp0_stage0)) or ((ap_enable_reg_pp0_iter2 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage7) and (ap_const_boolean_0 = ap_block_pp0_stage7)) or ((ap_enable_reg_pp0_iter2 = 
    ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage6) and (ap_const_boolean_0 = ap_block_pp0_stage6)) or ((ap_enable_reg_pp0_iter2 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage5) and (ap_const_boolean_0 = ap_block_pp0_stage5)) or ((ap_enable_reg_pp0_iter2 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage4) and (ap_const_boolean_0 = ap_block_pp0_stage4)) or ((ap_enable_reg_pp0_iter2 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage3) and (ap_const_boolean_0 = ap_block_pp0_stage3)) or ((ap_enable_reg_pp0_iter2 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage2) and (ap_const_boolean_0 = ap_block_pp0_stage2)) or ((ap_enable_reg_pp0_iter2 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage1) and (ap_const_boolean_0 = ap_block_pp0_stage1)))) then 
            B_blk_n_AR <= grp_mmatmul_block_q4_0_const_block_q8_0_const_s_fu_179_B_blk_n_AR;
        else 
            B_blk_n_AR <= ap_const_logic_1;
        end if; 
    end process;


    B_blk_n_R_assign_proc : process(ap_CS_fsm_pp0_stage0, ap_enable_reg_pp0_iter0, ap_enable_reg_pp0_iter1, ap_enable_reg_pp0_iter2, ap_enable_reg_pp0_iter3, ap_CS_fsm_pp0_stage8, grp_mmatmul_block_q4_0_const_block_q8_0_const_s_fu_179_B_blk_n_R, icmp_ln76_reg_462, ap_block_pp0_stage8, ap_block_pp0_stage0, ap_CS_fsm_pp0_stage1, ap_block_pp0_stage1, ap_CS_fsm_pp0_stage2, ap_block_pp0_stage2, ap_CS_fsm_pp0_stage3, ap_block_pp0_stage3, ap_CS_fsm_pp0_stage4, ap_block_pp0_stage4, ap_CS_fsm_pp0_stage5, ap_block_pp0_stage5, ap_CS_fsm_pp0_stage6, ap_block_pp0_stage6, ap_CS_fsm_pp0_stage7, ap_block_pp0_stage7, icmp_ln76_reg_462_pp0_iter1_reg, icmp_ln76_reg_462_pp0_iter2_reg)
    begin
        if ((((ap_enable_reg_pp0_iter3 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage8) and (ap_const_boolean_0 = ap_block_pp0_stage8)) or ((ap_enable_reg_pp0_iter3 = ap_const_logic_1) and (icmp_ln76_reg_462_pp0_iter2_reg = ap_const_lv1_0) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0) and (ap_const_boolean_0 = ap_block_pp0_stage0)) or ((ap_enable_reg_pp0_iter3 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage6) and (ap_const_boolean_0 = ap_block_pp0_stage6)) or ((ap_enable_reg_pp0_iter3 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage5) and (ap_const_boolean_0 = ap_block_pp0_stage5)) or ((ap_enable_reg_pp0_iter3 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage4) and (ap_const_boolean_0 = ap_block_pp0_stage4)) or ((ap_enable_reg_pp0_iter3 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage3) and (ap_const_boolean_0 = ap_block_pp0_stage3)) or ((ap_enable_reg_pp0_iter3 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage2) and (ap_const_boolean_0 
    = ap_block_pp0_stage2)) or ((ap_enable_reg_pp0_iter3 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage1) and (ap_const_boolean_0 = ap_block_pp0_stage1)) or ((ap_enable_reg_pp0_iter1 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage8) and (ap_const_boolean_0 = ap_block_pp0_stage8)) or ((ap_enable_reg_pp0_iter1 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage7) and (ap_const_boolean_0 = ap_block_pp0_stage7)) or ((ap_enable_reg_pp0_iter1 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage6) and (ap_const_boolean_0 = ap_block_pp0_stage6)) or ((ap_enable_reg_pp0_iter1 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage5) and (ap_const_boolean_0 = ap_block_pp0_stage5)) or ((ap_enable_reg_pp0_iter1 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage4) and (ap_const_boolean_0 = ap_block_pp0_stage4)) or ((ap_enable_reg_pp0_iter1 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage3) and (ap_const_boolean_0 = ap_block_pp0_stage3)) 
    or ((ap_enable_reg_pp0_iter1 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage2) and (ap_const_boolean_0 = ap_block_pp0_stage2)) or ((ap_enable_reg_pp0_iter1 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage1) and (ap_const_boolean_0 = ap_block_pp0_stage1)) or ((icmp_ln76_reg_462 = ap_const_lv1_0) and (ap_enable_reg_pp0_iter1 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0) and (ap_const_boolean_0 = ap_block_pp0_stage0)) or ((icmp_ln76_reg_462 = ap_const_lv1_0) and (ap_enable_reg_pp0_iter0 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage8) and (ap_const_boolean_0 = ap_block_pp0_stage8)) or ((ap_enable_reg_pp0_iter2 = ap_const_logic_1) and (icmp_ln76_reg_462_pp0_iter1_reg = ap_const_lv1_0) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0) and (ap_const_boolean_0 = ap_block_pp0_stage0)) or ((ap_enable_reg_pp0_iter2 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage7) and (ap_const_boolean_0 = ap_block_pp0_stage7)) or ((ap_enable_reg_pp0_iter2 = 
    ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage6) and (ap_const_boolean_0 = ap_block_pp0_stage6)) or ((ap_enable_reg_pp0_iter2 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage5) and (ap_const_boolean_0 = ap_block_pp0_stage5)) or ((ap_enable_reg_pp0_iter2 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage4) and (ap_const_boolean_0 = ap_block_pp0_stage4)) or ((ap_enable_reg_pp0_iter2 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage3) and (ap_const_boolean_0 = ap_block_pp0_stage3)) or ((ap_enable_reg_pp0_iter2 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage2) and (ap_const_boolean_0 = ap_block_pp0_stage2)) or ((ap_enable_reg_pp0_iter2 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage1) and (ap_const_boolean_0 = ap_block_pp0_stage1)))) then 
            B_blk_n_R <= grp_mmatmul_block_q4_0_const_block_q8_0_const_s_fu_179_B_blk_n_R;
        else 
            B_blk_n_R <= ap_const_logic_1;
        end if; 
    end process;


    Cv_address0_assign_proc : process(ap_CS_fsm_pp0_stage0, ap_enable_reg_pp0_iter7, ap_enable_reg_pp0_iter8, ap_block_pp0_stage0, ap_CS_fsm_pp0_stage3, ap_block_pp0_stage3, Cv_addr_reg_496_pp0_iter8_reg, zext_ln83_fu_407_p1)
    begin
        if (((ap_enable_reg_pp0_iter8 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage3) and (ap_const_boolean_0 = ap_block_pp0_stage3))) then 
            Cv_address0 <= Cv_addr_reg_496_pp0_iter8_reg;
        elsif (((ap_enable_reg_pp0_iter7 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0) and (ap_const_boolean_0 = ap_block_pp0_stage0))) then 
            Cv_address0 <= zext_ln83_fu_407_p1(4 - 1 downto 0);
        else 
            Cv_address0 <= "XXXX";
        end if; 
    end process;


    Cv_ce0_assign_proc : process(ap_CS_fsm_pp0_stage0, ap_enable_reg_pp0_iter7, ap_enable_reg_pp0_iter8, ap_CS_fsm_pp0_stage3, ap_block_pp0_stage0_11001, ap_block_pp0_stage3_11001)
    begin
        if ((((ap_enable_reg_pp0_iter8 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage3) and (ap_const_boolean_0 = ap_block_pp0_stage3_11001)) or ((ap_enable_reg_pp0_iter7 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0) and (ap_const_boolean_0 = ap_block_pp0_stage0_11001)))) then 
            Cv_ce0 <= ap_const_logic_1;
        else 
            Cv_ce0 <= ap_const_logic_0;
        end if; 
    end process;

    Cv_d0 <= add41_i_reg_511;

    Cv_we0_assign_proc : process(ap_enable_reg_pp0_iter8, ap_CS_fsm_pp0_stage3, ap_block_pp0_stage3_11001)
    begin
        if (((ap_enable_reg_pp0_iter8 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage3) and (ap_const_boolean_0 = ap_block_pp0_stage3_11001))) then 
            Cv_we0 <= ap_const_logic_1;
        else 
            Cv_we0 <= ap_const_logic_0;
        end if; 
    end process;

    aa_fu_401_p2 <= std_logic_vector(unsigned(add_ln80_2_fu_396_p2) + unsigned(shl_ln_fu_380_p3));
    add36_i_fu_304_p2 <= std_logic_vector(unsigned(zext_ln76_fu_300_p1) + unsigned(add_ln70));
    add_ln76_fu_247_p2 <= std_logic_vector(unsigned(ap_sig_allocacmp_indvar_flatten_load) + unsigned(ap_const_lv16_1));
    add_ln80_2_fu_396_p2 <= std_logic_vector(unsigned(shl_ln80_1_fu_388_p3) + unsigned(A_offset));
    add_ln80_fu_340_p2 <= std_logic_vector(unsigned(zext_ln78_1_fu_337_p1) + unsigned(add_ln69));
    add_ln83_fu_310_p2 <= std_logic_vector(unsigned(sub_ln83_fu_294_p2) + unsigned(select_ln76_fu_262_p3));
    ap_CS_fsm_pp0_stage0 <= ap_CS_fsm(0);
    ap_CS_fsm_pp0_stage1 <= ap_CS_fsm(1);
    ap_CS_fsm_pp0_stage2 <= ap_CS_fsm(2);
    ap_CS_fsm_pp0_stage3 <= ap_CS_fsm(3);
    ap_CS_fsm_pp0_stage4 <= ap_CS_fsm(4);
    ap_CS_fsm_pp0_stage5 <= ap_CS_fsm(5);
    ap_CS_fsm_pp0_stage6 <= ap_CS_fsm(6);
    ap_CS_fsm_pp0_stage7 <= ap_CS_fsm(7);
    ap_CS_fsm_pp0_stage8 <= ap_CS_fsm(8);
        ap_block_pp0_stage0 <= not((ap_const_boolean_1 = ap_const_boolean_1));

    ap_block_pp0_stage0_11001_assign_proc : process(ap_enable_reg_pp0_iter1, ap_enable_reg_pp0_iter2, ap_enable_reg_pp0_iter3, ap_block_state10_pp0_stage0_iter1, ap_block_state19_pp0_stage0_iter2, ap_block_state28_pp0_stage0_iter3)
    begin
                ap_block_pp0_stage0_11001 <= (((ap_enable_reg_pp0_iter3 = ap_const_logic_1) and (ap_const_boolean_1 = ap_block_state28_pp0_stage0_iter3)) or ((ap_enable_reg_pp0_iter1 = ap_const_logic_1) and (ap_const_boolean_1 = ap_block_state10_pp0_stage0_iter1)) or ((ap_enable_reg_pp0_iter2 = ap_const_logic_1) and (ap_const_boolean_1 = ap_block_state19_pp0_stage0_iter2)));
    end process;

        ap_block_pp0_stage0_11001_ignoreCallOp147 <= not((ap_const_boolean_1 = ap_const_boolean_1));

    ap_block_pp0_stage0_subdone_assign_proc : process(ap_enable_reg_pp0_iter1, ap_enable_reg_pp0_iter2, ap_enable_reg_pp0_iter3, ap_block_state10_pp0_stage0_iter1, ap_block_state19_pp0_stage0_iter2, ap_block_state28_pp0_stage0_iter3)
    begin
                ap_block_pp0_stage0_subdone <= (((ap_enable_reg_pp0_iter3 = ap_const_logic_1) and (ap_const_boolean_1 = ap_block_state28_pp0_stage0_iter3)) or ((ap_enable_reg_pp0_iter1 = ap_const_logic_1) and (ap_const_boolean_1 = ap_block_state10_pp0_stage0_iter1)) or ((ap_enable_reg_pp0_iter2 = ap_const_logic_1) and (ap_const_boolean_1 = ap_block_state19_pp0_stage0_iter2)));
    end process;

        ap_block_pp0_stage1 <= not((ap_const_boolean_1 = ap_const_boolean_1));

    ap_block_pp0_stage1_11001_assign_proc : process(ap_enable_reg_pp0_iter1, ap_enable_reg_pp0_iter2, ap_enable_reg_pp0_iter3, ap_block_state11_pp0_stage1_iter1, ap_block_state20_pp0_stage1_iter2, ap_block_state29_pp0_stage1_iter3)
    begin
                ap_block_pp0_stage1_11001 <= (((ap_enable_reg_pp0_iter3 = ap_const_logic_1) and (ap_const_boolean_1 = ap_block_state29_pp0_stage1_iter3)) or ((ap_enable_reg_pp0_iter1 = ap_const_logic_1) and (ap_const_boolean_1 = ap_block_state11_pp0_stage1_iter1)) or ((ap_enable_reg_pp0_iter2 = ap_const_logic_1) and (ap_const_boolean_1 = ap_block_state20_pp0_stage1_iter2)));
    end process;

        ap_block_pp0_stage1_11001_ignoreCallOp148 <= not((ap_const_boolean_1 = ap_const_boolean_1));

    ap_block_pp0_stage1_subdone_assign_proc : process(ap_enable_reg_pp0_iter1, ap_enable_reg_pp0_iter2, ap_enable_reg_pp0_iter3, ap_block_state11_pp0_stage1_iter1, ap_block_state20_pp0_stage1_iter2, ap_block_state29_pp0_stage1_iter3)
    begin
                ap_block_pp0_stage1_subdone <= (((ap_enable_reg_pp0_iter3 = ap_const_logic_1) and (ap_const_boolean_1 = ap_block_state29_pp0_stage1_iter3)) or ((ap_enable_reg_pp0_iter1 = ap_const_logic_1) and (ap_const_boolean_1 = ap_block_state11_pp0_stage1_iter1)) or ((ap_enable_reg_pp0_iter2 = ap_const_logic_1) and (ap_const_boolean_1 = ap_block_state20_pp0_stage1_iter2)));
    end process;

        ap_block_pp0_stage2 <= not((ap_const_boolean_1 = ap_const_boolean_1));

    ap_block_pp0_stage2_11001_assign_proc : process(ap_enable_reg_pp0_iter1, ap_enable_reg_pp0_iter2, ap_enable_reg_pp0_iter3, ap_block_state12_pp0_stage2_iter1, ap_block_state21_pp0_stage2_iter2, ap_block_state30_pp0_stage2_iter3)
    begin
                ap_block_pp0_stage2_11001 <= (((ap_enable_reg_pp0_iter3 = ap_const_logic_1) and (ap_const_boolean_1 = ap_block_state30_pp0_stage2_iter3)) or ((ap_enable_reg_pp0_iter1 = ap_const_logic_1) and (ap_const_boolean_1 = ap_block_state12_pp0_stage2_iter1)) or ((ap_enable_reg_pp0_iter2 = ap_const_logic_1) and (ap_const_boolean_1 = ap_block_state21_pp0_stage2_iter2)));
    end process;

        ap_block_pp0_stage2_11001_ignoreCallOp149 <= not((ap_const_boolean_1 = ap_const_boolean_1));

    ap_block_pp0_stage2_subdone_assign_proc : process(ap_enable_reg_pp0_iter1, ap_enable_reg_pp0_iter2, ap_enable_reg_pp0_iter3, ap_block_state12_pp0_stage2_iter1, ap_block_state21_pp0_stage2_iter2, ap_block_state30_pp0_stage2_iter3)
    begin
                ap_block_pp0_stage2_subdone <= (((ap_enable_reg_pp0_iter3 = ap_const_logic_1) and (ap_const_boolean_1 = ap_block_state30_pp0_stage2_iter3)) or ((ap_enable_reg_pp0_iter1 = ap_const_logic_1) and (ap_const_boolean_1 = ap_block_state12_pp0_stage2_iter1)) or ((ap_enable_reg_pp0_iter2 = ap_const_logic_1) and (ap_const_boolean_1 = ap_block_state21_pp0_stage2_iter2)));
    end process;

        ap_block_pp0_stage3 <= not((ap_const_boolean_1 = ap_const_boolean_1));

    ap_block_pp0_stage3_11001_assign_proc : process(ap_enable_reg_pp0_iter1, ap_enable_reg_pp0_iter2, ap_enable_reg_pp0_iter3, ap_block_state13_pp0_stage3_iter1, ap_block_state22_pp0_stage3_iter2, ap_block_state31_pp0_stage3_iter3)
    begin
                ap_block_pp0_stage3_11001 <= (((ap_enable_reg_pp0_iter3 = ap_const_logic_1) and (ap_const_boolean_1 = ap_block_state31_pp0_stage3_iter3)) or ((ap_enable_reg_pp0_iter1 = ap_const_logic_1) and (ap_const_boolean_1 = ap_block_state13_pp0_stage3_iter1)) or ((ap_enable_reg_pp0_iter2 = ap_const_logic_1) and (ap_const_boolean_1 = ap_block_state22_pp0_stage3_iter2)));
    end process;

        ap_block_pp0_stage3_11001_ignoreCallOp150 <= not((ap_const_boolean_1 = ap_const_boolean_1));

    ap_block_pp0_stage3_subdone_assign_proc : process(ap_enable_reg_pp0_iter1, ap_enable_reg_pp0_iter2, ap_enable_reg_pp0_iter3, ap_block_state13_pp0_stage3_iter1, ap_block_state22_pp0_stage3_iter2, ap_block_state31_pp0_stage3_iter3)
    begin
                ap_block_pp0_stage3_subdone <= (((ap_enable_reg_pp0_iter3 = ap_const_logic_1) and (ap_const_boolean_1 = ap_block_state31_pp0_stage3_iter3)) or ((ap_enable_reg_pp0_iter1 = ap_const_logic_1) and (ap_const_boolean_1 = ap_block_state13_pp0_stage3_iter1)) or ((ap_enable_reg_pp0_iter2 = ap_const_logic_1) and (ap_const_boolean_1 = ap_block_state22_pp0_stage3_iter2)));
    end process;

        ap_block_pp0_stage4 <= not((ap_const_boolean_1 = ap_const_boolean_1));

    ap_block_pp0_stage4_11001_assign_proc : process(ap_enable_reg_pp0_iter1, ap_enable_reg_pp0_iter2, ap_enable_reg_pp0_iter3, ap_block_state14_pp0_stage4_iter1, ap_block_state23_pp0_stage4_iter2, ap_block_state32_pp0_stage4_iter3)
    begin
                ap_block_pp0_stage4_11001 <= (((ap_enable_reg_pp0_iter3 = ap_const_logic_1) and (ap_const_boolean_1 = ap_block_state32_pp0_stage4_iter3)) or ((ap_enable_reg_pp0_iter1 = ap_const_logic_1) and (ap_const_boolean_1 = ap_block_state14_pp0_stage4_iter1)) or ((ap_enable_reg_pp0_iter2 = ap_const_logic_1) and (ap_const_boolean_1 = ap_block_state23_pp0_stage4_iter2)));
    end process;

        ap_block_pp0_stage4_11001_ignoreCallOp151 <= not((ap_const_boolean_1 = ap_const_boolean_1));

    ap_block_pp0_stage4_subdone_assign_proc : process(ap_enable_reg_pp0_iter1, ap_enable_reg_pp0_iter2, ap_enable_reg_pp0_iter3, ap_block_state14_pp0_stage4_iter1, ap_block_state23_pp0_stage4_iter2, ap_block_state32_pp0_stage4_iter3)
    begin
                ap_block_pp0_stage4_subdone <= (((ap_enable_reg_pp0_iter3 = ap_const_logic_1) and (ap_const_boolean_1 = ap_block_state32_pp0_stage4_iter3)) or ((ap_enable_reg_pp0_iter1 = ap_const_logic_1) and (ap_const_boolean_1 = ap_block_state14_pp0_stage4_iter1)) or ((ap_enable_reg_pp0_iter2 = ap_const_logic_1) and (ap_const_boolean_1 = ap_block_state23_pp0_stage4_iter2)));
    end process;

        ap_block_pp0_stage5 <= not((ap_const_boolean_1 = ap_const_boolean_1));

    ap_block_pp0_stage5_11001_assign_proc : process(ap_enable_reg_pp0_iter1, ap_enable_reg_pp0_iter2, ap_enable_reg_pp0_iter3, ap_block_state15_pp0_stage5_iter1, ap_block_state24_pp0_stage5_iter2, ap_block_state33_pp0_stage5_iter3)
    begin
                ap_block_pp0_stage5_11001 <= (((ap_enable_reg_pp0_iter3 = ap_const_logic_1) and (ap_const_boolean_1 = ap_block_state33_pp0_stage5_iter3)) or ((ap_enable_reg_pp0_iter1 = ap_const_logic_1) and (ap_const_boolean_1 = ap_block_state15_pp0_stage5_iter1)) or ((ap_enable_reg_pp0_iter2 = ap_const_logic_1) and (ap_const_boolean_1 = ap_block_state24_pp0_stage5_iter2)));
    end process;

        ap_block_pp0_stage5_11001_ignoreCallOp152 <= not((ap_const_boolean_1 = ap_const_boolean_1));

    ap_block_pp0_stage5_subdone_assign_proc : process(ap_enable_reg_pp0_iter1, ap_enable_reg_pp0_iter2, ap_enable_reg_pp0_iter3, ap_block_state15_pp0_stage5_iter1, ap_block_state24_pp0_stage5_iter2, ap_block_state33_pp0_stage5_iter3)
    begin
                ap_block_pp0_stage5_subdone <= (((ap_enable_reg_pp0_iter3 = ap_const_logic_1) and (ap_const_boolean_1 = ap_block_state33_pp0_stage5_iter3)) or ((ap_enable_reg_pp0_iter1 = ap_const_logic_1) and (ap_const_boolean_1 = ap_block_state15_pp0_stage5_iter1)) or ((ap_enable_reg_pp0_iter2 = ap_const_logic_1) and (ap_const_boolean_1 = ap_block_state24_pp0_stage5_iter2)));
    end process;

        ap_block_pp0_stage6 <= not((ap_const_boolean_1 = ap_const_boolean_1));

    ap_block_pp0_stage6_11001_assign_proc : process(ap_enable_reg_pp0_iter1, ap_enable_reg_pp0_iter2, ap_enable_reg_pp0_iter3, ap_block_state16_pp0_stage6_iter1, ap_block_state25_pp0_stage6_iter2, ap_block_state34_pp0_stage6_iter3)
    begin
                ap_block_pp0_stage6_11001 <= (((ap_enable_reg_pp0_iter3 = ap_const_logic_1) and (ap_const_boolean_1 = ap_block_state34_pp0_stage6_iter3)) or ((ap_enable_reg_pp0_iter1 = ap_const_logic_1) and (ap_const_boolean_1 = ap_block_state16_pp0_stage6_iter1)) or ((ap_enable_reg_pp0_iter2 = ap_const_logic_1) and (ap_const_boolean_1 = ap_block_state25_pp0_stage6_iter2)));
    end process;

        ap_block_pp0_stage6_11001_ignoreCallOp153 <= not((ap_const_boolean_1 = ap_const_boolean_1));

    ap_block_pp0_stage6_subdone_assign_proc : process(ap_enable_reg_pp0_iter1, ap_enable_reg_pp0_iter2, ap_enable_reg_pp0_iter3, ap_block_state16_pp0_stage6_iter1, ap_block_state25_pp0_stage6_iter2, ap_block_state34_pp0_stage6_iter3)
    begin
                ap_block_pp0_stage6_subdone <= (((ap_enable_reg_pp0_iter3 = ap_const_logic_1) and (ap_const_boolean_1 = ap_block_state34_pp0_stage6_iter3)) or ((ap_enable_reg_pp0_iter1 = ap_const_logic_1) and (ap_const_boolean_1 = ap_block_state16_pp0_stage6_iter1)) or ((ap_enable_reg_pp0_iter2 = ap_const_logic_1) and (ap_const_boolean_1 = ap_block_state25_pp0_stage6_iter2)));
    end process;

        ap_block_pp0_stage7 <= not((ap_const_boolean_1 = ap_const_boolean_1));

    ap_block_pp0_stage7_11001_assign_proc : process(ap_enable_reg_pp0_iter1, ap_enable_reg_pp0_iter2, ap_block_state17_pp0_stage7_iter1, ap_block_state26_pp0_stage7_iter2)
    begin
                ap_block_pp0_stage7_11001 <= (((ap_enable_reg_pp0_iter1 = ap_const_logic_1) and (ap_const_boolean_1 = ap_block_state17_pp0_stage7_iter1)) or ((ap_enable_reg_pp0_iter2 = ap_const_logic_1) and (ap_const_boolean_1 = ap_block_state26_pp0_stage7_iter2)));
    end process;

        ap_block_pp0_stage7_11001_ignoreCallOp154 <= not((ap_const_boolean_1 = ap_const_boolean_1));

    ap_block_pp0_stage7_subdone_assign_proc : process(ap_enable_reg_pp0_iter1, ap_enable_reg_pp0_iter2, ap_block_state17_pp0_stage7_iter1, ap_block_state26_pp0_stage7_iter2)
    begin
                ap_block_pp0_stage7_subdone <= (((ap_enable_reg_pp0_iter1 = ap_const_logic_1) and (ap_const_boolean_1 = ap_block_state17_pp0_stage7_iter1)) or ((ap_enable_reg_pp0_iter2 = ap_const_logic_1) and (ap_const_boolean_1 = ap_block_state26_pp0_stage7_iter2)));
    end process;

        ap_block_pp0_stage8 <= not((ap_const_boolean_1 = ap_const_boolean_1));

    ap_block_pp0_stage8_11001_assign_proc : process(ap_enable_reg_pp0_iter0, ap_enable_reg_pp0_iter1, ap_enable_reg_pp0_iter3, ap_block_state9_pp0_stage8_iter0, ap_block_state18_pp0_stage8_iter1, ap_block_state36_pp0_stage8_iter3)
    begin
                ap_block_pp0_stage8_11001 <= (((ap_enable_reg_pp0_iter3 = ap_const_logic_1) and (ap_const_boolean_1 = ap_block_state36_pp0_stage8_iter3)) or ((ap_enable_reg_pp0_iter1 = ap_const_logic_1) and (ap_const_boolean_1 = ap_block_state18_pp0_stage8_iter1)) or ((ap_enable_reg_pp0_iter0 = ap_const_logic_1) and (ap_const_boolean_1 = ap_block_state9_pp0_stage8_iter0)));
    end process;

        ap_block_pp0_stage8_11001_ignoreCallOp146 <= not((ap_const_boolean_1 = ap_const_boolean_1));

    ap_block_pp0_stage8_subdone_assign_proc : process(ap_enable_reg_pp0_iter0, ap_enable_reg_pp0_iter1, ap_enable_reg_pp0_iter3, ap_block_state9_pp0_stage8_iter0, ap_block_state18_pp0_stage8_iter1, ap_block_state36_pp0_stage8_iter3)
    begin
                ap_block_pp0_stage8_subdone <= (((ap_enable_reg_pp0_iter3 = ap_const_logic_1) and (ap_const_boolean_1 = ap_block_state36_pp0_stage8_iter3)) or ((ap_enable_reg_pp0_iter1 = ap_const_logic_1) and (ap_const_boolean_1 = ap_block_state18_pp0_stage8_iter1)) or ((ap_enable_reg_pp0_iter0 = ap_const_logic_1) and (ap_const_boolean_1 = ap_block_state9_pp0_stage8_iter0)));
    end process;


    ap_block_state10_pp0_stage0_iter1_assign_proc : process(grp_mmatmul_block_q4_0_const_block_q8_0_const_s_fu_179_A_blk_n_AR, grp_mmatmul_block_q4_0_const_block_q8_0_const_s_fu_179_A_blk_n_R, grp_mmatmul_block_q4_0_const_block_q8_0_const_s_fu_179_B_blk_n_AR, grp_mmatmul_block_q4_0_const_block_q8_0_const_s_fu_179_B_blk_n_R, icmp_ln76_reg_462)
    begin
                ap_block_state10_pp0_stage0_iter1 <= ((icmp_ln76_reg_462 = ap_const_lv1_0) and (((grp_mmatmul_block_q4_0_const_block_q8_0_const_s_fu_179_B_blk_n_R and grp_mmatmul_block_q4_0_const_block_q8_0_const_s_fu_179_B_blk_n_AR) = ap_const_logic_0) or ((grp_mmatmul_block_q4_0_const_block_q8_0_const_s_fu_179_A_blk_n_R and grp_mmatmul_block_q4_0_const_block_q8_0_const_s_fu_179_A_blk_n_AR) = ap_const_logic_0)));
    end process;


    ap_block_state11_pp0_stage1_iter1_assign_proc : process(grp_mmatmul_block_q4_0_const_block_q8_0_const_s_fu_179_A_blk_n_AR, grp_mmatmul_block_q4_0_const_block_q8_0_const_s_fu_179_A_blk_n_R, grp_mmatmul_block_q4_0_const_block_q8_0_const_s_fu_179_B_blk_n_AR, grp_mmatmul_block_q4_0_const_block_q8_0_const_s_fu_179_B_blk_n_R)
    begin
                ap_block_state11_pp0_stage1_iter1 <= (((grp_mmatmul_block_q4_0_const_block_q8_0_const_s_fu_179_B_blk_n_R and grp_mmatmul_block_q4_0_const_block_q8_0_const_s_fu_179_B_blk_n_AR) = ap_const_logic_0) or ((grp_mmatmul_block_q4_0_const_block_q8_0_const_s_fu_179_A_blk_n_R and grp_mmatmul_block_q4_0_const_block_q8_0_const_s_fu_179_A_blk_n_AR) = ap_const_logic_0));
    end process;


    ap_block_state12_pp0_stage2_iter1_assign_proc : process(grp_mmatmul_block_q4_0_const_block_q8_0_const_s_fu_179_A_blk_n_AR, grp_mmatmul_block_q4_0_const_block_q8_0_const_s_fu_179_A_blk_n_R, grp_mmatmul_block_q4_0_const_block_q8_0_const_s_fu_179_B_blk_n_AR, grp_mmatmul_block_q4_0_const_block_q8_0_const_s_fu_179_B_blk_n_R)
    begin
                ap_block_state12_pp0_stage2_iter1 <= (((grp_mmatmul_block_q4_0_const_block_q8_0_const_s_fu_179_B_blk_n_R and grp_mmatmul_block_q4_0_const_block_q8_0_const_s_fu_179_B_blk_n_AR) = ap_const_logic_0) or ((grp_mmatmul_block_q4_0_const_block_q8_0_const_s_fu_179_A_blk_n_R and grp_mmatmul_block_q4_0_const_block_q8_0_const_s_fu_179_A_blk_n_AR) = ap_const_logic_0));
    end process;


    ap_block_state13_pp0_stage3_iter1_assign_proc : process(grp_mmatmul_block_q4_0_const_block_q8_0_const_s_fu_179_A_blk_n_AR, grp_mmatmul_block_q4_0_const_block_q8_0_const_s_fu_179_A_blk_n_R, grp_mmatmul_block_q4_0_const_block_q8_0_const_s_fu_179_B_blk_n_AR, grp_mmatmul_block_q4_0_const_block_q8_0_const_s_fu_179_B_blk_n_R)
    begin
                ap_block_state13_pp0_stage3_iter1 <= (((grp_mmatmul_block_q4_0_const_block_q8_0_const_s_fu_179_B_blk_n_R and grp_mmatmul_block_q4_0_const_block_q8_0_const_s_fu_179_B_blk_n_AR) = ap_const_logic_0) or ((grp_mmatmul_block_q4_0_const_block_q8_0_const_s_fu_179_A_blk_n_R and grp_mmatmul_block_q4_0_const_block_q8_0_const_s_fu_179_A_blk_n_AR) = ap_const_logic_0));
    end process;


    ap_block_state14_pp0_stage4_iter1_assign_proc : process(grp_mmatmul_block_q4_0_const_block_q8_0_const_s_fu_179_A_blk_n_AR, grp_mmatmul_block_q4_0_const_block_q8_0_const_s_fu_179_A_blk_n_R, grp_mmatmul_block_q4_0_const_block_q8_0_const_s_fu_179_B_blk_n_AR, grp_mmatmul_block_q4_0_const_block_q8_0_const_s_fu_179_B_blk_n_R)
    begin
                ap_block_state14_pp0_stage4_iter1 <= (((grp_mmatmul_block_q4_0_const_block_q8_0_const_s_fu_179_B_blk_n_R and grp_mmatmul_block_q4_0_const_block_q8_0_const_s_fu_179_B_blk_n_AR) = ap_const_logic_0) or ((grp_mmatmul_block_q4_0_const_block_q8_0_const_s_fu_179_A_blk_n_R and grp_mmatmul_block_q4_0_const_block_q8_0_const_s_fu_179_A_blk_n_AR) = ap_const_logic_0));
    end process;


    ap_block_state15_pp0_stage5_iter1_assign_proc : process(grp_mmatmul_block_q4_0_const_block_q8_0_const_s_fu_179_A_blk_n_AR, grp_mmatmul_block_q4_0_const_block_q8_0_const_s_fu_179_A_blk_n_R, grp_mmatmul_block_q4_0_const_block_q8_0_const_s_fu_179_B_blk_n_AR, grp_mmatmul_block_q4_0_const_block_q8_0_const_s_fu_179_B_blk_n_R)
    begin
                ap_block_state15_pp0_stage5_iter1 <= (((grp_mmatmul_block_q4_0_const_block_q8_0_const_s_fu_179_B_blk_n_R and grp_mmatmul_block_q4_0_const_block_q8_0_const_s_fu_179_B_blk_n_AR) = ap_const_logic_0) or ((grp_mmatmul_block_q4_0_const_block_q8_0_const_s_fu_179_A_blk_n_R and grp_mmatmul_block_q4_0_const_block_q8_0_const_s_fu_179_A_blk_n_AR) = ap_const_logic_0));
    end process;


    ap_block_state16_pp0_stage6_iter1_assign_proc : process(grp_mmatmul_block_q4_0_const_block_q8_0_const_s_fu_179_A_blk_n_AR, grp_mmatmul_block_q4_0_const_block_q8_0_const_s_fu_179_A_blk_n_R, grp_mmatmul_block_q4_0_const_block_q8_0_const_s_fu_179_B_blk_n_AR, grp_mmatmul_block_q4_0_const_block_q8_0_const_s_fu_179_B_blk_n_R)
    begin
                ap_block_state16_pp0_stage6_iter1 <= (((grp_mmatmul_block_q4_0_const_block_q8_0_const_s_fu_179_B_blk_n_R and grp_mmatmul_block_q4_0_const_block_q8_0_const_s_fu_179_B_blk_n_AR) = ap_const_logic_0) or ((grp_mmatmul_block_q4_0_const_block_q8_0_const_s_fu_179_A_blk_n_R and grp_mmatmul_block_q4_0_const_block_q8_0_const_s_fu_179_A_blk_n_AR) = ap_const_logic_0));
    end process;


    ap_block_state17_pp0_stage7_iter1_assign_proc : process(grp_mmatmul_block_q4_0_const_block_q8_0_const_s_fu_179_A_blk_n_AR, grp_mmatmul_block_q4_0_const_block_q8_0_const_s_fu_179_A_blk_n_R, grp_mmatmul_block_q4_0_const_block_q8_0_const_s_fu_179_B_blk_n_AR, grp_mmatmul_block_q4_0_const_block_q8_0_const_s_fu_179_B_blk_n_R)
    begin
                ap_block_state17_pp0_stage7_iter1 <= (((grp_mmatmul_block_q4_0_const_block_q8_0_const_s_fu_179_B_blk_n_R and grp_mmatmul_block_q4_0_const_block_q8_0_const_s_fu_179_B_blk_n_AR) = ap_const_logic_0) or ((grp_mmatmul_block_q4_0_const_block_q8_0_const_s_fu_179_A_blk_n_R and grp_mmatmul_block_q4_0_const_block_q8_0_const_s_fu_179_A_blk_n_AR) = ap_const_logic_0));
    end process;


    ap_block_state18_pp0_stage8_iter1_assign_proc : process(grp_mmatmul_block_q4_0_const_block_q8_0_const_s_fu_179_A_blk_n_AR, grp_mmatmul_block_q4_0_const_block_q8_0_const_s_fu_179_A_blk_n_R, grp_mmatmul_block_q4_0_const_block_q8_0_const_s_fu_179_B_blk_n_AR, grp_mmatmul_block_q4_0_const_block_q8_0_const_s_fu_179_B_blk_n_R)
    begin
                ap_block_state18_pp0_stage8_iter1 <= (((grp_mmatmul_block_q4_0_const_block_q8_0_const_s_fu_179_B_blk_n_R and grp_mmatmul_block_q4_0_const_block_q8_0_const_s_fu_179_B_blk_n_AR) = ap_const_logic_0) or ((grp_mmatmul_block_q4_0_const_block_q8_0_const_s_fu_179_A_blk_n_R and grp_mmatmul_block_q4_0_const_block_q8_0_const_s_fu_179_A_blk_n_AR) = ap_const_logic_0));
    end process;


    ap_block_state19_pp0_stage0_iter2_assign_proc : process(grp_mmatmul_block_q4_0_const_block_q8_0_const_s_fu_179_A_blk_n_AR, grp_mmatmul_block_q4_0_const_block_q8_0_const_s_fu_179_A_blk_n_R, grp_mmatmul_block_q4_0_const_block_q8_0_const_s_fu_179_B_blk_n_AR, grp_mmatmul_block_q4_0_const_block_q8_0_const_s_fu_179_B_blk_n_R, icmp_ln76_reg_462_pp0_iter1_reg)
    begin
                ap_block_state19_pp0_stage0_iter2 <= ((icmp_ln76_reg_462_pp0_iter1_reg = ap_const_lv1_0) and (((grp_mmatmul_block_q4_0_const_block_q8_0_const_s_fu_179_B_blk_n_R and grp_mmatmul_block_q4_0_const_block_q8_0_const_s_fu_179_B_blk_n_AR) = ap_const_logic_0) or ((grp_mmatmul_block_q4_0_const_block_q8_0_const_s_fu_179_A_blk_n_R and grp_mmatmul_block_q4_0_const_block_q8_0_const_s_fu_179_A_blk_n_AR) = ap_const_logic_0)));
    end process;


    ap_block_state20_pp0_stage1_iter2_assign_proc : process(grp_mmatmul_block_q4_0_const_block_q8_0_const_s_fu_179_A_blk_n_AR, grp_mmatmul_block_q4_0_const_block_q8_0_const_s_fu_179_A_blk_n_R, grp_mmatmul_block_q4_0_const_block_q8_0_const_s_fu_179_B_blk_n_AR, grp_mmatmul_block_q4_0_const_block_q8_0_const_s_fu_179_B_blk_n_R)
    begin
                ap_block_state20_pp0_stage1_iter2 <= (((grp_mmatmul_block_q4_0_const_block_q8_0_const_s_fu_179_B_blk_n_R and grp_mmatmul_block_q4_0_const_block_q8_0_const_s_fu_179_B_blk_n_AR) = ap_const_logic_0) or ((grp_mmatmul_block_q4_0_const_block_q8_0_const_s_fu_179_A_blk_n_R and grp_mmatmul_block_q4_0_const_block_q8_0_const_s_fu_179_A_blk_n_AR) = ap_const_logic_0));
    end process;


    ap_block_state21_pp0_stage2_iter2_assign_proc : process(grp_mmatmul_block_q4_0_const_block_q8_0_const_s_fu_179_A_blk_n_AR, grp_mmatmul_block_q4_0_const_block_q8_0_const_s_fu_179_A_blk_n_R, grp_mmatmul_block_q4_0_const_block_q8_0_const_s_fu_179_B_blk_n_AR, grp_mmatmul_block_q4_0_const_block_q8_0_const_s_fu_179_B_blk_n_R)
    begin
                ap_block_state21_pp0_stage2_iter2 <= (((grp_mmatmul_block_q4_0_const_block_q8_0_const_s_fu_179_B_blk_n_R and grp_mmatmul_block_q4_0_const_block_q8_0_const_s_fu_179_B_blk_n_AR) = ap_const_logic_0) or ((grp_mmatmul_block_q4_0_const_block_q8_0_const_s_fu_179_A_blk_n_R and grp_mmatmul_block_q4_0_const_block_q8_0_const_s_fu_179_A_blk_n_AR) = ap_const_logic_0));
    end process;


    ap_block_state22_pp0_stage3_iter2_assign_proc : process(grp_mmatmul_block_q4_0_const_block_q8_0_const_s_fu_179_A_blk_n_AR, grp_mmatmul_block_q4_0_const_block_q8_0_const_s_fu_179_A_blk_n_R, grp_mmatmul_block_q4_0_const_block_q8_0_const_s_fu_179_B_blk_n_AR, grp_mmatmul_block_q4_0_const_block_q8_0_const_s_fu_179_B_blk_n_R)
    begin
                ap_block_state22_pp0_stage3_iter2 <= (((grp_mmatmul_block_q4_0_const_block_q8_0_const_s_fu_179_B_blk_n_R and grp_mmatmul_block_q4_0_const_block_q8_0_const_s_fu_179_B_blk_n_AR) = ap_const_logic_0) or ((grp_mmatmul_block_q4_0_const_block_q8_0_const_s_fu_179_A_blk_n_R and grp_mmatmul_block_q4_0_const_block_q8_0_const_s_fu_179_A_blk_n_AR) = ap_const_logic_0));
    end process;


    ap_block_state23_pp0_stage4_iter2_assign_proc : process(grp_mmatmul_block_q4_0_const_block_q8_0_const_s_fu_179_A_blk_n_AR, grp_mmatmul_block_q4_0_const_block_q8_0_const_s_fu_179_A_blk_n_R, grp_mmatmul_block_q4_0_const_block_q8_0_const_s_fu_179_B_blk_n_AR, grp_mmatmul_block_q4_0_const_block_q8_0_const_s_fu_179_B_blk_n_R)
    begin
                ap_block_state23_pp0_stage4_iter2 <= (((grp_mmatmul_block_q4_0_const_block_q8_0_const_s_fu_179_B_blk_n_R and grp_mmatmul_block_q4_0_const_block_q8_0_const_s_fu_179_B_blk_n_AR) = ap_const_logic_0) or ((grp_mmatmul_block_q4_0_const_block_q8_0_const_s_fu_179_A_blk_n_R and grp_mmatmul_block_q4_0_const_block_q8_0_const_s_fu_179_A_blk_n_AR) = ap_const_logic_0));
    end process;


    ap_block_state24_pp0_stage5_iter2_assign_proc : process(grp_mmatmul_block_q4_0_const_block_q8_0_const_s_fu_179_A_blk_n_AR, grp_mmatmul_block_q4_0_const_block_q8_0_const_s_fu_179_A_blk_n_R, grp_mmatmul_block_q4_0_const_block_q8_0_const_s_fu_179_B_blk_n_AR, grp_mmatmul_block_q4_0_const_block_q8_0_const_s_fu_179_B_blk_n_R)
    begin
                ap_block_state24_pp0_stage5_iter2 <= (((grp_mmatmul_block_q4_0_const_block_q8_0_const_s_fu_179_B_blk_n_R and grp_mmatmul_block_q4_0_const_block_q8_0_const_s_fu_179_B_blk_n_AR) = ap_const_logic_0) or ((grp_mmatmul_block_q4_0_const_block_q8_0_const_s_fu_179_A_blk_n_R and grp_mmatmul_block_q4_0_const_block_q8_0_const_s_fu_179_A_blk_n_AR) = ap_const_logic_0));
    end process;


    ap_block_state25_pp0_stage6_iter2_assign_proc : process(grp_mmatmul_block_q4_0_const_block_q8_0_const_s_fu_179_A_blk_n_AR, grp_mmatmul_block_q4_0_const_block_q8_0_const_s_fu_179_A_blk_n_R, grp_mmatmul_block_q4_0_const_block_q8_0_const_s_fu_179_B_blk_n_AR, grp_mmatmul_block_q4_0_const_block_q8_0_const_s_fu_179_B_blk_n_R)
    begin
                ap_block_state25_pp0_stage6_iter2 <= (((grp_mmatmul_block_q4_0_const_block_q8_0_const_s_fu_179_B_blk_n_R and grp_mmatmul_block_q4_0_const_block_q8_0_const_s_fu_179_B_blk_n_AR) = ap_const_logic_0) or ((grp_mmatmul_block_q4_0_const_block_q8_0_const_s_fu_179_A_blk_n_R and grp_mmatmul_block_q4_0_const_block_q8_0_const_s_fu_179_A_blk_n_AR) = ap_const_logic_0));
    end process;


    ap_block_state26_pp0_stage7_iter2_assign_proc : process(grp_mmatmul_block_q4_0_const_block_q8_0_const_s_fu_179_A_blk_n_AR, grp_mmatmul_block_q4_0_const_block_q8_0_const_s_fu_179_A_blk_n_R, grp_mmatmul_block_q4_0_const_block_q8_0_const_s_fu_179_B_blk_n_AR, grp_mmatmul_block_q4_0_const_block_q8_0_const_s_fu_179_B_blk_n_R)
    begin
                ap_block_state26_pp0_stage7_iter2 <= (((grp_mmatmul_block_q4_0_const_block_q8_0_const_s_fu_179_B_blk_n_R and grp_mmatmul_block_q4_0_const_block_q8_0_const_s_fu_179_B_blk_n_AR) = ap_const_logic_0) or ((grp_mmatmul_block_q4_0_const_block_q8_0_const_s_fu_179_A_blk_n_R and grp_mmatmul_block_q4_0_const_block_q8_0_const_s_fu_179_A_blk_n_AR) = ap_const_logic_0));
    end process;


    ap_block_state28_pp0_stage0_iter3_assign_proc : process(grp_mmatmul_block_q4_0_const_block_q8_0_const_s_fu_179_A_blk_n_AR, grp_mmatmul_block_q4_0_const_block_q8_0_const_s_fu_179_A_blk_n_R, grp_mmatmul_block_q4_0_const_block_q8_0_const_s_fu_179_B_blk_n_AR, grp_mmatmul_block_q4_0_const_block_q8_0_const_s_fu_179_B_blk_n_R, icmp_ln76_reg_462_pp0_iter2_reg)
    begin
                ap_block_state28_pp0_stage0_iter3 <= ((icmp_ln76_reg_462_pp0_iter2_reg = ap_const_lv1_0) and (((grp_mmatmul_block_q4_0_const_block_q8_0_const_s_fu_179_B_blk_n_R and grp_mmatmul_block_q4_0_const_block_q8_0_const_s_fu_179_B_blk_n_AR) = ap_const_logic_0) or ((grp_mmatmul_block_q4_0_const_block_q8_0_const_s_fu_179_A_blk_n_R and grp_mmatmul_block_q4_0_const_block_q8_0_const_s_fu_179_A_blk_n_AR) = ap_const_logic_0)));
    end process;


    ap_block_state29_pp0_stage1_iter3_assign_proc : process(grp_mmatmul_block_q4_0_const_block_q8_0_const_s_fu_179_A_blk_n_AR, grp_mmatmul_block_q4_0_const_block_q8_0_const_s_fu_179_A_blk_n_R, grp_mmatmul_block_q4_0_const_block_q8_0_const_s_fu_179_B_blk_n_AR, grp_mmatmul_block_q4_0_const_block_q8_0_const_s_fu_179_B_blk_n_R)
    begin
                ap_block_state29_pp0_stage1_iter3 <= (((grp_mmatmul_block_q4_0_const_block_q8_0_const_s_fu_179_B_blk_n_R and grp_mmatmul_block_q4_0_const_block_q8_0_const_s_fu_179_B_blk_n_AR) = ap_const_logic_0) or ((grp_mmatmul_block_q4_0_const_block_q8_0_const_s_fu_179_A_blk_n_R and grp_mmatmul_block_q4_0_const_block_q8_0_const_s_fu_179_A_blk_n_AR) = ap_const_logic_0));
    end process;


    ap_block_state30_pp0_stage2_iter3_assign_proc : process(grp_mmatmul_block_q4_0_const_block_q8_0_const_s_fu_179_A_blk_n_AR, grp_mmatmul_block_q4_0_const_block_q8_0_const_s_fu_179_A_blk_n_R, grp_mmatmul_block_q4_0_const_block_q8_0_const_s_fu_179_B_blk_n_AR, grp_mmatmul_block_q4_0_const_block_q8_0_const_s_fu_179_B_blk_n_R)
    begin
                ap_block_state30_pp0_stage2_iter3 <= (((grp_mmatmul_block_q4_0_const_block_q8_0_const_s_fu_179_B_blk_n_R and grp_mmatmul_block_q4_0_const_block_q8_0_const_s_fu_179_B_blk_n_AR) = ap_const_logic_0) or ((grp_mmatmul_block_q4_0_const_block_q8_0_const_s_fu_179_A_blk_n_R and grp_mmatmul_block_q4_0_const_block_q8_0_const_s_fu_179_A_blk_n_AR) = ap_const_logic_0));
    end process;


    ap_block_state31_pp0_stage3_iter3_assign_proc : process(grp_mmatmul_block_q4_0_const_block_q8_0_const_s_fu_179_A_blk_n_AR, grp_mmatmul_block_q4_0_const_block_q8_0_const_s_fu_179_A_blk_n_R, grp_mmatmul_block_q4_0_const_block_q8_0_const_s_fu_179_B_blk_n_AR, grp_mmatmul_block_q4_0_const_block_q8_0_const_s_fu_179_B_blk_n_R)
    begin
                ap_block_state31_pp0_stage3_iter3 <= (((grp_mmatmul_block_q4_0_const_block_q8_0_const_s_fu_179_B_blk_n_R and grp_mmatmul_block_q4_0_const_block_q8_0_const_s_fu_179_B_blk_n_AR) = ap_const_logic_0) or ((grp_mmatmul_block_q4_0_const_block_q8_0_const_s_fu_179_A_blk_n_R and grp_mmatmul_block_q4_0_const_block_q8_0_const_s_fu_179_A_blk_n_AR) = ap_const_logic_0));
    end process;


    ap_block_state32_pp0_stage4_iter3_assign_proc : process(grp_mmatmul_block_q4_0_const_block_q8_0_const_s_fu_179_A_blk_n_AR, grp_mmatmul_block_q4_0_const_block_q8_0_const_s_fu_179_A_blk_n_R, grp_mmatmul_block_q4_0_const_block_q8_0_const_s_fu_179_B_blk_n_AR, grp_mmatmul_block_q4_0_const_block_q8_0_const_s_fu_179_B_blk_n_R)
    begin
                ap_block_state32_pp0_stage4_iter3 <= (((grp_mmatmul_block_q4_0_const_block_q8_0_const_s_fu_179_B_blk_n_R and grp_mmatmul_block_q4_0_const_block_q8_0_const_s_fu_179_B_blk_n_AR) = ap_const_logic_0) or ((grp_mmatmul_block_q4_0_const_block_q8_0_const_s_fu_179_A_blk_n_R and grp_mmatmul_block_q4_0_const_block_q8_0_const_s_fu_179_A_blk_n_AR) = ap_const_logic_0));
    end process;


    ap_block_state33_pp0_stage5_iter3_assign_proc : process(grp_mmatmul_block_q4_0_const_block_q8_0_const_s_fu_179_A_blk_n_AR, grp_mmatmul_block_q4_0_const_block_q8_0_const_s_fu_179_A_blk_n_R, grp_mmatmul_block_q4_0_const_block_q8_0_const_s_fu_179_B_blk_n_AR, grp_mmatmul_block_q4_0_const_block_q8_0_const_s_fu_179_B_blk_n_R)
    begin
                ap_block_state33_pp0_stage5_iter3 <= (((grp_mmatmul_block_q4_0_const_block_q8_0_const_s_fu_179_B_blk_n_R and grp_mmatmul_block_q4_0_const_block_q8_0_const_s_fu_179_B_blk_n_AR) = ap_const_logic_0) or ((grp_mmatmul_block_q4_0_const_block_q8_0_const_s_fu_179_A_blk_n_R and grp_mmatmul_block_q4_0_const_block_q8_0_const_s_fu_179_A_blk_n_AR) = ap_const_logic_0));
    end process;


    ap_block_state34_pp0_stage6_iter3_assign_proc : process(grp_mmatmul_block_q4_0_const_block_q8_0_const_s_fu_179_A_blk_n_AR, grp_mmatmul_block_q4_0_const_block_q8_0_const_s_fu_179_A_blk_n_R, grp_mmatmul_block_q4_0_const_block_q8_0_const_s_fu_179_B_blk_n_AR, grp_mmatmul_block_q4_0_const_block_q8_0_const_s_fu_179_B_blk_n_R)
    begin
                ap_block_state34_pp0_stage6_iter3 <= (((grp_mmatmul_block_q4_0_const_block_q8_0_const_s_fu_179_B_blk_n_R and grp_mmatmul_block_q4_0_const_block_q8_0_const_s_fu_179_B_blk_n_AR) = ap_const_logic_0) or ((grp_mmatmul_block_q4_0_const_block_q8_0_const_s_fu_179_A_blk_n_R and grp_mmatmul_block_q4_0_const_block_q8_0_const_s_fu_179_A_blk_n_AR) = ap_const_logic_0));
    end process;


    ap_block_state36_pp0_stage8_iter3_assign_proc : process(grp_mmatmul_block_q4_0_const_block_q8_0_const_s_fu_179_A_blk_n_AR, grp_mmatmul_block_q4_0_const_block_q8_0_const_s_fu_179_A_blk_n_R, grp_mmatmul_block_q4_0_const_block_q8_0_const_s_fu_179_B_blk_n_AR, grp_mmatmul_block_q4_0_const_block_q8_0_const_s_fu_179_B_blk_n_R)
    begin
                ap_block_state36_pp0_stage8_iter3 <= (((grp_mmatmul_block_q4_0_const_block_q8_0_const_s_fu_179_B_blk_n_R and grp_mmatmul_block_q4_0_const_block_q8_0_const_s_fu_179_B_blk_n_AR) = ap_const_logic_0) or ((grp_mmatmul_block_q4_0_const_block_q8_0_const_s_fu_179_A_blk_n_R and grp_mmatmul_block_q4_0_const_block_q8_0_const_s_fu_179_A_blk_n_AR) = ap_const_logic_0));
    end process;


    ap_block_state9_pp0_stage8_iter0_assign_proc : process(grp_mmatmul_block_q4_0_const_block_q8_0_const_s_fu_179_A_blk_n_AR, grp_mmatmul_block_q4_0_const_block_q8_0_const_s_fu_179_A_blk_n_R, grp_mmatmul_block_q4_0_const_block_q8_0_const_s_fu_179_B_blk_n_AR, grp_mmatmul_block_q4_0_const_block_q8_0_const_s_fu_179_B_blk_n_R, icmp_ln76_reg_462)
    begin
                ap_block_state9_pp0_stage8_iter0 <= ((icmp_ln76_reg_462 = ap_const_lv1_0) and (((grp_mmatmul_block_q4_0_const_block_q8_0_const_s_fu_179_B_blk_n_R and grp_mmatmul_block_q4_0_const_block_q8_0_const_s_fu_179_B_blk_n_AR) = ap_const_logic_0) or ((grp_mmatmul_block_q4_0_const_block_q8_0_const_s_fu_179_A_blk_n_R and grp_mmatmul_block_q4_0_const_block_q8_0_const_s_fu_179_A_blk_n_AR) = ap_const_logic_0)));
    end process;


    ap_condition_exit_pp0_iter0_stage8_assign_proc : process(ap_enable_reg_pp0_iter0, ap_CS_fsm_pp0_stage8, icmp_ln76_reg_462, ap_block_pp0_stage8_subdone)
    begin
        if (((icmp_ln76_reg_462 = ap_const_lv1_1) and (ap_enable_reg_pp0_iter0 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage8) and (ap_const_boolean_0 = ap_block_pp0_stage8_subdone))) then 
            ap_condition_exit_pp0_iter0_stage8 <= ap_const_logic_1;
        else 
            ap_condition_exit_pp0_iter0_stage8 <= ap_const_logic_0;
        end if; 
    end process;


    ap_condition_exit_pp0_iter7_stage3_assign_proc : process(ap_enable_reg_pp0_iter7, ap_CS_fsm_pp0_stage3, icmp_ln76_reg_462_pp0_iter7_reg, ap_block_pp0_stage3_subdone)
    begin
        if (((ap_enable_reg_pp0_iter7 = ap_const_logic_1) and (icmp_ln76_reg_462_pp0_iter7_reg = ap_const_lv1_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage3) and (ap_const_boolean_0 = ap_block_pp0_stage3_subdone))) then 
            ap_condition_exit_pp0_iter7_stage3 <= ap_const_logic_1;
        else 
            ap_condition_exit_pp0_iter7_stage3 <= ap_const_logic_0;
        end if; 
    end process;


    ap_done_int_assign_proc : process(ap_CS_fsm_pp0_stage3, ap_block_pp0_stage3_subdone, ap_done_reg, ap_loop_exit_ready_pp0_iter7_reg)
    begin
        if (((ap_const_logic_1 = ap_CS_fsm_pp0_stage3) and (ap_loop_exit_ready_pp0_iter7_reg = ap_const_logic_1) and (ap_const_boolean_0 = ap_block_pp0_stage3_subdone))) then 
            ap_done_int <= ap_const_logic_1;
        else 
            ap_done_int <= ap_done_reg;
        end if; 
    end process;


    ap_done_pending_pp0_assign_proc : process(ap_loop_exit_ready, ap_loop_exit_ready_pp0_iter1_reg, ap_loop_exit_ready_pp0_iter2_reg, ap_loop_exit_ready_pp0_iter3_reg, ap_loop_exit_ready_pp0_iter4_reg, ap_loop_exit_ready_pp0_iter5_reg, ap_loop_exit_ready_pp0_iter6_reg, ap_loop_exit_ready_pp0_iter7_reg)
    begin
        if (not(((ap_loop_exit_ready = ap_const_logic_0) and (ap_loop_exit_ready_pp0_iter7_reg = ap_const_logic_0) and (ap_loop_exit_ready_pp0_iter6_reg = ap_const_logic_0) and (ap_loop_exit_ready_pp0_iter5_reg = ap_const_logic_0) and (ap_loop_exit_ready_pp0_iter4_reg = ap_const_logic_0) and (ap_loop_exit_ready_pp0_iter3_reg = ap_const_logic_0) and (ap_loop_exit_ready_pp0_iter2_reg = ap_const_logic_0) and (ap_loop_exit_ready_pp0_iter1_reg = ap_const_logic_0)))) then 
            ap_done_pending_pp0 <= ap_const_logic_1;
        else 
            ap_done_pending_pp0 <= ap_const_logic_0;
        end if; 
    end process;

    ap_enable_pp0 <= (ap_idle_pp0 xor ap_const_logic_1);

    ap_enable_reg_pp0_iter0_assign_proc : process(ap_CS_fsm_pp0_stage0, ap_enable_reg_pp0_iter0_reg, ap_start_int)
    begin
        if ((ap_const_logic_1 = ap_CS_fsm_pp0_stage0)) then 
            ap_enable_reg_pp0_iter0 <= ap_start_int;
        else 
            ap_enable_reg_pp0_iter0 <= ap_enable_reg_pp0_iter0_reg;
        end if; 
    end process;


    ap_idle_assign_proc : process(ap_CS_fsm_pp0_stage0, ap_idle_pp0, ap_start_int)
    begin
        if (((ap_idle_pp0 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0) and (ap_start_int = ap_const_logic_0))) then 
            ap_idle <= ap_const_logic_1;
        else 
            ap_idle <= ap_const_logic_0;
        end if; 
    end process;


    ap_idle_pp0_assign_proc : process(ap_enable_reg_pp0_iter0, ap_enable_reg_pp0_iter1, ap_enable_reg_pp0_iter2, ap_enable_reg_pp0_iter3, ap_enable_reg_pp0_iter4, ap_enable_reg_pp0_iter5, ap_enable_reg_pp0_iter6, ap_enable_reg_pp0_iter7, ap_enable_reg_pp0_iter8)
    begin
        if (((ap_enable_reg_pp0_iter8 = ap_const_logic_0) and (ap_enable_reg_pp0_iter7 = ap_const_logic_0) and (ap_enable_reg_pp0_iter6 = ap_const_logic_0) and (ap_enable_reg_pp0_iter5 = ap_const_logic_0) and (ap_enable_reg_pp0_iter4 = ap_const_logic_0) and (ap_enable_reg_pp0_iter3 = ap_const_logic_0) and (ap_enable_reg_pp0_iter2 = ap_const_logic_0) and (ap_enable_reg_pp0_iter1 = ap_const_logic_0) and (ap_enable_reg_pp0_iter0 = ap_const_logic_0))) then 
            ap_idle_pp0 <= ap_const_logic_1;
        else 
            ap_idle_pp0 <= ap_const_logic_0;
        end if; 
    end process;


    ap_idle_pp0_0to6_assign_proc : process(ap_enable_reg_pp0_iter0, ap_enable_reg_pp0_iter1, ap_enable_reg_pp0_iter2, ap_enable_reg_pp0_iter3, ap_enable_reg_pp0_iter4, ap_enable_reg_pp0_iter5, ap_enable_reg_pp0_iter6)
    begin
        if (((ap_enable_reg_pp0_iter6 = ap_const_logic_0) and (ap_enable_reg_pp0_iter5 = ap_const_logic_0) and (ap_enable_reg_pp0_iter4 = ap_const_logic_0) and (ap_enable_reg_pp0_iter3 = ap_const_logic_0) and (ap_enable_reg_pp0_iter2 = ap_const_logic_0) and (ap_enable_reg_pp0_iter1 = ap_const_logic_0) and (ap_enable_reg_pp0_iter0 = ap_const_logic_0))) then 
            ap_idle_pp0_0to6 <= ap_const_logic_1;
        else 
            ap_idle_pp0_0to6 <= ap_const_logic_0;
        end if; 
    end process;


    ap_idle_pp0_1to8_assign_proc : process(ap_enable_reg_pp0_iter1, ap_enable_reg_pp0_iter2, ap_enable_reg_pp0_iter3, ap_enable_reg_pp0_iter4, ap_enable_reg_pp0_iter5, ap_enable_reg_pp0_iter6, ap_enable_reg_pp0_iter7, ap_enable_reg_pp0_iter8)
    begin
        if (((ap_enable_reg_pp0_iter8 = ap_const_logic_0) and (ap_enable_reg_pp0_iter7 = ap_const_logic_0) and (ap_enable_reg_pp0_iter6 = ap_const_logic_0) and (ap_enable_reg_pp0_iter5 = ap_const_logic_0) and (ap_enable_reg_pp0_iter4 = ap_const_logic_0) and (ap_enable_reg_pp0_iter3 = ap_const_logic_0) and (ap_enable_reg_pp0_iter2 = ap_const_logic_0) and (ap_enable_reg_pp0_iter1 = ap_const_logic_0))) then 
            ap_idle_pp0_1to8 <= ap_const_logic_1;
        else 
            ap_idle_pp0_1to8 <= ap_const_logic_0;
        end if; 
    end process;

    ap_loop_exit_ready <= ap_condition_exit_pp0_iter0_stage8;

    ap_ready_int_assign_proc : process(ap_enable_reg_pp0_iter0, ap_CS_fsm_pp0_stage8, ap_block_pp0_stage8_subdone)
    begin
        if (((ap_enable_reg_pp0_iter0 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage8) and (ap_const_boolean_0 = ap_block_pp0_stage8_subdone))) then 
            ap_ready_int <= ap_const_logic_1;
        else 
            ap_ready_int <= ap_const_logic_0;
        end if; 
    end process;


    ap_sig_allocacmp_i_2_assign_proc : process(ap_CS_fsm_pp0_stage0, ap_block_pp0_stage0, i_fu_100, ap_loop_init)
    begin
        if (((ap_loop_init = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0) and (ap_const_boolean_0 = ap_block_pp0_stage0))) then 
            ap_sig_allocacmp_i_2 <= ap_const_lv4_0;
        else 
            ap_sig_allocacmp_i_2 <= i_fu_100;
        end if; 
    end process;


    ap_sig_allocacmp_indvar_flatten_load_assign_proc : process(ap_CS_fsm_pp0_stage0, ap_block_pp0_stage0, ap_loop_init, indvar_flatten_fu_108)
    begin
        if (((ap_loop_init = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0) and (ap_const_boolean_0 = ap_block_pp0_stage0))) then 
            ap_sig_allocacmp_indvar_flatten_load <= ap_const_lv16_0;
        else 
            ap_sig_allocacmp_indvar_flatten_load <= indvar_flatten_fu_108;
        end if; 
    end process;


    ap_sig_allocacmp_j_load_assign_proc : process(ap_CS_fsm_pp0_stage0, ap_block_pp0_stage0, ap_loop_init, j_fu_104)
    begin
        if (((ap_loop_init = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0) and (ap_const_boolean_0 = ap_block_pp0_stage0))) then 
            ap_sig_allocacmp_j_load <= ap_const_lv8_0;
        else 
            ap_sig_allocacmp_j_load <= j_fu_104;
        end if; 
    end process;

    bb_fu_370_p2 <= std_logic_vector(unsigned(tmp2_fu_365_p2) + unsigned(p_shl_fu_349_p3));
    empty_35_fu_345_p1 <= grp_fu_201_p2(59 - 1 downto 0);

    grp_fu_189_ce_assign_proc : process(ap_CS_fsm_pp0_stage0, ap_CS_fsm_pp0_stage8, ap_CS_fsm_pp0_stage1, ap_CS_fsm_pp0_stage2, ap_CS_fsm_pp0_stage7, ap_block_pp0_stage0_11001, ap_block_pp0_stage1_11001, ap_block_pp0_stage7_11001, ap_block_pp0_stage2_11001, ap_block_pp0_stage8_11001)
    begin
        if ((((ap_const_logic_1 = ap_CS_fsm_pp0_stage8) and (ap_const_boolean_0 = ap_block_pp0_stage8_11001)) or ((ap_const_logic_1 = ap_CS_fsm_pp0_stage7) and (ap_const_boolean_0 = ap_block_pp0_stage7_11001)) or ((ap_const_logic_1 = ap_CS_fsm_pp0_stage2) and (ap_const_boolean_0 = ap_block_pp0_stage2_11001)) or ((ap_const_logic_1 = ap_CS_fsm_pp0_stage1) and (ap_const_boolean_0 = ap_block_pp0_stage1_11001)) or ((ap_const_logic_1 = ap_CS_fsm_pp0_stage0) and (ap_const_boolean_0 = ap_block_pp0_stage0_11001)))) then 
            grp_fu_189_ce <= ap_const_logic_1;
        else 
            grp_fu_189_ce <= ap_const_logic_0;
        end if; 
    end process;


    grp_fu_193_ce_assign_proc : process(ap_CS_fsm_pp0_stage1, ap_CS_fsm_pp0_stage2, ap_CS_fsm_pp0_stage3, ap_CS_fsm_pp0_stage4, ap_CS_fsm_pp0_stage5, ap_CS_fsm_pp0_stage6, ap_block_pp0_stage5_11001, ap_block_pp0_stage6_11001, ap_block_pp0_stage1_11001, ap_block_pp0_stage2_11001, ap_block_pp0_stage3_11001, ap_block_pp0_stage4_11001)
    begin
        if ((((ap_const_logic_1 = ap_CS_fsm_pp0_stage6) and (ap_const_boolean_0 = ap_block_pp0_stage6_11001)) or ((ap_const_logic_1 = ap_CS_fsm_pp0_stage5) and (ap_const_boolean_0 = ap_block_pp0_stage5_11001)) or ((ap_const_logic_1 = ap_CS_fsm_pp0_stage4) and (ap_const_boolean_0 = ap_block_pp0_stage4_11001)) or ((ap_const_logic_1 = ap_CS_fsm_pp0_stage3) and (ap_const_boolean_0 = ap_block_pp0_stage3_11001)) or ((ap_const_logic_1 = ap_CS_fsm_pp0_stage2) and (ap_const_boolean_0 = ap_block_pp0_stage2_11001)) or ((ap_const_logic_1 = ap_CS_fsm_pp0_stage1) and (ap_const_boolean_0 = ap_block_pp0_stage1_11001)))) then 
            grp_fu_193_ce <= ap_const_logic_1;
        else 
            grp_fu_193_ce <= ap_const_logic_0;
        end if; 
    end process;


    grp_fu_193_p0_assign_proc : process(ap_enable_reg_pp0_iter0, ap_CS_fsm_pp0_stage1, ap_block_pp0_stage1, ap_CS_fsm_pp0_stage2, ap_block_pp0_stage2, add36_i_reg_471, add_ln80_reg_481)
    begin
        if ((ap_enable_reg_pp0_iter0 = ap_const_logic_1)) then
            if (((ap_const_logic_1 = ap_CS_fsm_pp0_stage2) and (ap_const_boolean_0 = ap_block_pp0_stage2))) then 
                grp_fu_193_p0 <= add_ln80_reg_481;
            elsif (((ap_const_logic_1 = ap_CS_fsm_pp0_stage1) and (ap_const_boolean_0 = ap_block_pp0_stage1))) then 
                grp_fu_193_p0 <= add36_i_reg_471;
            else 
                grp_fu_193_p0 <= "XXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXX";
            end if;
        else 
            grp_fu_193_p0 <= "XXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXX";
        end if; 
    end process;


    grp_fu_193_p1_assign_proc : process(ap_enable_reg_pp0_iter0, empty_27, empty, ap_CS_fsm_pp0_stage1, ap_block_pp0_stage1, ap_CS_fsm_pp0_stage2, ap_block_pp0_stage2)
    begin
        if ((ap_enable_reg_pp0_iter0 = ap_const_logic_1)) then
            if (((ap_const_logic_1 = ap_CS_fsm_pp0_stage2) and (ap_const_boolean_0 = ap_block_pp0_stage2))) then 
                grp_fu_193_p1 <= empty;
            elsif (((ap_const_logic_1 = ap_CS_fsm_pp0_stage1) and (ap_const_boolean_0 = ap_block_pp0_stage1))) then 
                grp_fu_193_p1 <= empty_27;
            else 
                grp_fu_193_p1 <= "XXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXX";
            end if;
        else 
            grp_fu_193_p1 <= "XXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXX";
        end if; 
    end process;

    grp_fu_201_p2 <= std_logic_vector(unsigned(reg_197) + unsigned(zext_ln72_cast_reg_457));

    grp_mmatmul_block_q4_0_const_block_q8_0_const_s_fu_179_ap_ce_assign_proc : process(ap_CS_fsm_pp0_stage0, ap_CS_fsm_pp0_stage8, ap_CS_fsm_pp0_stage1, ap_CS_fsm_pp0_stage2, ap_CS_fsm_pp0_stage3, ap_CS_fsm_pp0_stage4, ap_CS_fsm_pp0_stage5, ap_CS_fsm_pp0_stage6, ap_CS_fsm_pp0_stage7, ap_block_pp0_stage1_11001_ignoreCallOp148, ap_block_pp0_stage2_11001_ignoreCallOp149, ap_block_pp0_stage3_11001_ignoreCallOp150, ap_block_pp0_stage4_11001_ignoreCallOp151, ap_block_pp0_stage5_11001_ignoreCallOp152, ap_block_pp0_stage6_11001_ignoreCallOp153, ap_block_pp0_stage7_11001_ignoreCallOp154, ap_block_pp0_stage8_11001_ignoreCallOp146, ap_block_pp0_stage0_11001_ignoreCallOp147)
    begin
        if ((((ap_const_logic_1 = ap_CS_fsm_pp0_stage8) and (ap_const_boolean_0 = ap_block_pp0_stage8_11001_ignoreCallOp146)) or ((ap_const_logic_1 = ap_CS_fsm_pp0_stage7) and (ap_const_boolean_0 = ap_block_pp0_stage7_11001_ignoreCallOp154)) or ((ap_const_logic_1 = ap_CS_fsm_pp0_stage6) and (ap_const_boolean_0 = ap_block_pp0_stage6_11001_ignoreCallOp153)) or ((ap_const_logic_1 = ap_CS_fsm_pp0_stage5) and (ap_const_boolean_0 = ap_block_pp0_stage5_11001_ignoreCallOp152)) or ((ap_const_logic_1 = ap_CS_fsm_pp0_stage4) and (ap_const_boolean_0 = ap_block_pp0_stage4_11001_ignoreCallOp151)) or ((ap_const_logic_1 = ap_CS_fsm_pp0_stage3) and (ap_const_boolean_0 = ap_block_pp0_stage3_11001_ignoreCallOp150)) or ((ap_const_logic_1 = ap_CS_fsm_pp0_stage2) and (ap_const_boolean_0 = ap_block_pp0_stage2_11001_ignoreCallOp149)) or ((ap_const_logic_1 = ap_CS_fsm_pp0_stage1) and (ap_const_boolean_0 = ap_block_pp0_stage1_11001_ignoreCallOp148)) or ((ap_const_logic_1 = ap_CS_fsm_pp0_stage0) and (ap_const_boolean_0 = ap_block_pp0_stage0_11001_ignoreCallOp147)))) then 
            grp_mmatmul_block_q4_0_const_block_q8_0_const_s_fu_179_ap_ce <= ap_const_logic_1;
        else 
            grp_mmatmul_block_q4_0_const_block_q8_0_const_s_fu_179_ap_ce <= ap_const_logic_0;
        end if; 
    end process;

    grp_mmatmul_block_q4_0_const_block_q8_0_const_s_fu_179_ap_start <= grp_mmatmul_block_q4_0_const_block_q8_0_const_s_fu_179_ap_start_reg;
    i_3_fu_316_p2 <= std_logic_vector(unsigned(select_ln76_fu_262_p3) + unsigned(ap_const_lv4_1));
    icmp_ln76_fu_241_p2 <= "1" when (ap_sig_allocacmp_indvar_flatten_load = mul_ln97) else "0";
    icmp_ln78_fu_235_p2 <= "1" when (zext_ln78_fu_231_p1 = RM) else "0";
    j_4_fu_256_p2 <= std_logic_vector(unsigned(ap_sig_allocacmp_j_load) + unsigned(ap_const_lv8_1));
    m_axi_A_ARADDR <= grp_mmatmul_block_q4_0_const_block_q8_0_const_s_fu_179_m_axi_A_ARADDR;
    m_axi_A_ARBURST <= grp_mmatmul_block_q4_0_const_block_q8_0_const_s_fu_179_m_axi_A_ARBURST;
    m_axi_A_ARCACHE <= grp_mmatmul_block_q4_0_const_block_q8_0_const_s_fu_179_m_axi_A_ARCACHE;
    m_axi_A_ARID <= grp_mmatmul_block_q4_0_const_block_q8_0_const_s_fu_179_m_axi_A_ARID;
    m_axi_A_ARLEN <= grp_mmatmul_block_q4_0_const_block_q8_0_const_s_fu_179_m_axi_A_ARLEN;
    m_axi_A_ARLOCK <= grp_mmatmul_block_q4_0_const_block_q8_0_const_s_fu_179_m_axi_A_ARLOCK;
    m_axi_A_ARPROT <= grp_mmatmul_block_q4_0_const_block_q8_0_const_s_fu_179_m_axi_A_ARPROT;
    m_axi_A_ARQOS <= grp_mmatmul_block_q4_0_const_block_q8_0_const_s_fu_179_m_axi_A_ARQOS;
    m_axi_A_ARREGION <= grp_mmatmul_block_q4_0_const_block_q8_0_const_s_fu_179_m_axi_A_ARREGION;
    m_axi_A_ARSIZE <= grp_mmatmul_block_q4_0_const_block_q8_0_const_s_fu_179_m_axi_A_ARSIZE;
    m_axi_A_ARUSER <= grp_mmatmul_block_q4_0_const_block_q8_0_const_s_fu_179_m_axi_A_ARUSER;

    m_axi_A_ARVALID_assign_proc : process(ap_CS_fsm_pp0_stage0, ap_enable_reg_pp0_iter0, ap_enable_reg_pp0_iter1, ap_enable_reg_pp0_iter2, ap_enable_reg_pp0_iter3, ap_enable_reg_pp0_iter4, ap_enable_reg_pp0_iter5, ap_enable_reg_pp0_iter6, ap_enable_reg_pp0_iter7, ap_CS_fsm_pp0_stage8, icmp_ln76_reg_462, ap_block_pp0_stage8, ap_block_pp0_stage0, ap_CS_fsm_pp0_stage1, ap_block_pp0_stage1, ap_CS_fsm_pp0_stage2, ap_block_pp0_stage2, ap_CS_fsm_pp0_stage3, ap_block_pp0_stage3, ap_CS_fsm_pp0_stage4, ap_block_pp0_stage4, ap_CS_fsm_pp0_stage5, ap_block_pp0_stage5, ap_CS_fsm_pp0_stage6, ap_block_pp0_stage6, ap_CS_fsm_pp0_stage7, ap_block_pp0_stage7, icmp_ln76_reg_462_pp0_iter1_reg, icmp_ln76_reg_462_pp0_iter2_reg, icmp_ln76_reg_462_pp0_iter3_reg, icmp_ln76_reg_462_pp0_iter4_reg, icmp_ln76_reg_462_pp0_iter5_reg, icmp_ln76_reg_462_pp0_iter6_reg, grp_mmatmul_block_q4_0_const_block_q8_0_const_s_fu_179_m_axi_A_ARVALID)
    begin
        if ((((ap_enable_reg_pp0_iter3 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage8) and (ap_const_boolean_0 = ap_block_pp0_stage8)) or ((ap_enable_reg_pp0_iter3 = ap_const_logic_1) and (icmp_ln76_reg_462_pp0_iter2_reg = ap_const_lv1_0) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0) and (ap_const_boolean_0 = ap_block_pp0_stage0)) or ((ap_enable_reg_pp0_iter3 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage7) and (ap_const_boolean_0 = ap_block_pp0_stage7)) or ((ap_enable_reg_pp0_iter3 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage6) and (ap_const_boolean_0 = ap_block_pp0_stage6)) or ((ap_enable_reg_pp0_iter3 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage5) and (ap_const_boolean_0 = ap_block_pp0_stage5)) or ((ap_enable_reg_pp0_iter3 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage4) and (ap_const_boolean_0 = ap_block_pp0_stage4)) or ((ap_enable_reg_pp0_iter3 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage3) and (ap_const_boolean_0 
    = ap_block_pp0_stage3)) or ((ap_enable_reg_pp0_iter3 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage2) and (ap_const_boolean_0 = ap_block_pp0_stage2)) or ((ap_enable_reg_pp0_iter3 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage1) and (ap_const_boolean_0 = ap_block_pp0_stage1)) or ((ap_enable_reg_pp0_iter1 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage8) and (ap_const_boolean_0 = ap_block_pp0_stage8)) or ((ap_enable_reg_pp0_iter1 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage7) and (ap_const_boolean_0 = ap_block_pp0_stage7)) or ((ap_enable_reg_pp0_iter1 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage6) and (ap_const_boolean_0 = ap_block_pp0_stage6)) or ((ap_enable_reg_pp0_iter1 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage5) and (ap_const_boolean_0 = ap_block_pp0_stage5)) or ((ap_enable_reg_pp0_iter1 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage4) and (ap_const_boolean_0 = ap_block_pp0_stage4)) 
    or ((ap_enable_reg_pp0_iter1 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage3) and (ap_const_boolean_0 = ap_block_pp0_stage3)) or ((ap_enable_reg_pp0_iter1 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage2) and (ap_const_boolean_0 = ap_block_pp0_stage2)) or ((ap_enable_reg_pp0_iter1 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage1) and (ap_const_boolean_0 = ap_block_pp0_stage1)) or ((ap_enable_reg_pp0_iter6 = ap_const_logic_1) and (icmp_ln76_reg_462_pp0_iter5_reg = ap_const_lv1_0) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0) and (ap_const_boolean_0 = ap_block_pp0_stage0)) or ((ap_enable_reg_pp0_iter6 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage8) and (ap_const_boolean_0 = ap_block_pp0_stage8)) or ((ap_enable_reg_pp0_iter6 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage7) and (ap_const_boolean_0 = ap_block_pp0_stage7)) or ((ap_enable_reg_pp0_iter6 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage6) and (ap_const_boolean_0 
    = ap_block_pp0_stage6)) or ((ap_enable_reg_pp0_iter6 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage5) and (ap_const_boolean_0 = ap_block_pp0_stage5)) or ((ap_enable_reg_pp0_iter6 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage4) and (ap_const_boolean_0 = ap_block_pp0_stage4)) or ((ap_enable_reg_pp0_iter6 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage3) and (ap_const_boolean_0 = ap_block_pp0_stage3)) or ((ap_enable_reg_pp0_iter6 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage2) and (ap_const_boolean_0 = ap_block_pp0_stage2)) or ((ap_enable_reg_pp0_iter6 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage1) and (ap_const_boolean_0 = ap_block_pp0_stage1)) or ((ap_enable_reg_pp0_iter5 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage8) and (ap_const_boolean_0 = ap_block_pp0_stage8)) or ((ap_enable_reg_pp0_iter5 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage7) and (ap_const_boolean_0 = ap_block_pp0_stage7)) 
    or ((ap_enable_reg_pp0_iter5 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage6) and (ap_const_boolean_0 = ap_block_pp0_stage6)) or ((ap_enable_reg_pp0_iter5 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage5) and (ap_const_boolean_0 = ap_block_pp0_stage5)) or ((ap_enable_reg_pp0_iter5 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage4) and (ap_const_boolean_0 = ap_block_pp0_stage4)) or ((ap_enable_reg_pp0_iter5 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage3) and (ap_const_boolean_0 = ap_block_pp0_stage3)) or ((ap_enable_reg_pp0_iter5 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage2) and (ap_const_boolean_0 = ap_block_pp0_stage2)) or ((ap_enable_reg_pp0_iter5 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage1) and (ap_const_boolean_0 = ap_block_pp0_stage1)) or ((icmp_ln76_reg_462 = ap_const_lv1_0) and (ap_enable_reg_pp0_iter1 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0) and (ap_const_boolean_0 = ap_block_pp0_stage0)) 
    or ((icmp_ln76_reg_462 = ap_const_lv1_0) and (ap_enable_reg_pp0_iter0 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage8) and (ap_const_boolean_0 = ap_block_pp0_stage8)) or ((ap_enable_reg_pp0_iter4 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage8) and (ap_const_boolean_0 = ap_block_pp0_stage8)) or ((ap_enable_reg_pp0_iter4 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage7) and (ap_const_boolean_0 = ap_block_pp0_stage7)) or ((ap_enable_reg_pp0_iter4 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage6) and (ap_const_boolean_0 = ap_block_pp0_stage6)) or ((ap_enable_reg_pp0_iter4 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage5) and (ap_const_boolean_0 = ap_block_pp0_stage5)) or ((ap_enable_reg_pp0_iter4 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage4) and (ap_const_boolean_0 = ap_block_pp0_stage4)) or ((ap_enable_reg_pp0_iter4 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage3) and (ap_const_boolean_0 = ap_block_pp0_stage3)) 
    or ((ap_enable_reg_pp0_iter4 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage2) and (ap_const_boolean_0 = ap_block_pp0_stage2)) or ((ap_enable_reg_pp0_iter4 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage1) and (ap_const_boolean_0 = ap_block_pp0_stage1)) or ((icmp_ln76_reg_462_pp0_iter4_reg = ap_const_lv1_0) and (ap_enable_reg_pp0_iter5 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0) and (ap_const_boolean_0 = ap_block_pp0_stage0)) or ((icmp_ln76_reg_462_pp0_iter3_reg = ap_const_lv1_0) and (ap_enable_reg_pp0_iter4 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0) and (ap_const_boolean_0 = ap_block_pp0_stage0)) or ((ap_enable_reg_pp0_iter7 = ap_const_logic_1) and (icmp_ln76_reg_462_pp0_iter6_reg = ap_const_lv1_0) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0) and (ap_const_boolean_0 = ap_block_pp0_stage0)) or ((ap_enable_reg_pp0_iter7 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage6) and (ap_const_boolean_0 = ap_block_pp0_stage6)) or 
    ((ap_enable_reg_pp0_iter7 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage5) and (ap_const_boolean_0 = ap_block_pp0_stage5)) or ((ap_enable_reg_pp0_iter7 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage4) and (ap_const_boolean_0 = ap_block_pp0_stage4)) or ((ap_enable_reg_pp0_iter7 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage3) and (ap_const_boolean_0 = ap_block_pp0_stage3)) or ((ap_enable_reg_pp0_iter7 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage2) and (ap_const_boolean_0 = ap_block_pp0_stage2)) or ((ap_enable_reg_pp0_iter7 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage1) and (ap_const_boolean_0 = ap_block_pp0_stage1)) or ((ap_enable_reg_pp0_iter2 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage8) and (ap_const_boolean_0 = ap_block_pp0_stage8)) or ((ap_enable_reg_pp0_iter2 = ap_const_logic_1) and (icmp_ln76_reg_462_pp0_iter1_reg = ap_const_lv1_0) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0) and (ap_const_boolean_0 
    = ap_block_pp0_stage0)) or ((ap_enable_reg_pp0_iter2 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage7) and (ap_const_boolean_0 = ap_block_pp0_stage7)) or ((ap_enable_reg_pp0_iter2 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage6) and (ap_const_boolean_0 = ap_block_pp0_stage6)) or ((ap_enable_reg_pp0_iter2 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage5) and (ap_const_boolean_0 = ap_block_pp0_stage5)) or ((ap_enable_reg_pp0_iter2 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage4) and (ap_const_boolean_0 = ap_block_pp0_stage4)) or ((ap_enable_reg_pp0_iter2 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage3) and (ap_const_boolean_0 = ap_block_pp0_stage3)) or ((ap_enable_reg_pp0_iter2 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage2) and (ap_const_boolean_0 = ap_block_pp0_stage2)) or ((ap_enable_reg_pp0_iter2 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage1) and (ap_const_boolean_0 = ap_block_pp0_stage1)))) then 
            m_axi_A_ARVALID <= grp_mmatmul_block_q4_0_const_block_q8_0_const_s_fu_179_m_axi_A_ARVALID;
        else 
            m_axi_A_ARVALID <= ap_const_logic_0;
        end if; 
    end process;

    m_axi_A_AWADDR <= ap_const_lv64_0;
    m_axi_A_AWBURST <= ap_const_lv2_0;
    m_axi_A_AWCACHE <= ap_const_lv4_0;
    m_axi_A_AWID <= ap_const_lv1_0;
    m_axi_A_AWLEN <= ap_const_lv32_0;
    m_axi_A_AWLOCK <= ap_const_lv2_0;
    m_axi_A_AWPROT <= ap_const_lv3_0;
    m_axi_A_AWQOS <= ap_const_lv4_0;
    m_axi_A_AWREGION <= ap_const_lv4_0;
    m_axi_A_AWSIZE <= ap_const_lv3_0;
    m_axi_A_AWUSER <= ap_const_lv1_0;
    m_axi_A_AWVALID <= ap_const_logic_0;
    m_axi_A_BREADY <= ap_const_logic_0;

    m_axi_A_RREADY_assign_proc : process(ap_CS_fsm_pp0_stage0, ap_enable_reg_pp0_iter0, ap_enable_reg_pp0_iter1, ap_enable_reg_pp0_iter2, ap_enable_reg_pp0_iter3, ap_enable_reg_pp0_iter4, ap_enable_reg_pp0_iter5, ap_enable_reg_pp0_iter6, ap_enable_reg_pp0_iter7, ap_CS_fsm_pp0_stage8, icmp_ln76_reg_462, ap_block_pp0_stage8, ap_block_pp0_stage0, ap_CS_fsm_pp0_stage1, ap_block_pp0_stage1, ap_CS_fsm_pp0_stage2, ap_block_pp0_stage2, ap_CS_fsm_pp0_stage3, ap_block_pp0_stage3, ap_CS_fsm_pp0_stage4, ap_block_pp0_stage4, ap_CS_fsm_pp0_stage5, ap_block_pp0_stage5, ap_CS_fsm_pp0_stage6, ap_block_pp0_stage6, ap_CS_fsm_pp0_stage7, ap_block_pp0_stage7, icmp_ln76_reg_462_pp0_iter1_reg, icmp_ln76_reg_462_pp0_iter2_reg, icmp_ln76_reg_462_pp0_iter3_reg, icmp_ln76_reg_462_pp0_iter4_reg, icmp_ln76_reg_462_pp0_iter5_reg, icmp_ln76_reg_462_pp0_iter6_reg, grp_mmatmul_block_q4_0_const_block_q8_0_const_s_fu_179_m_axi_A_RREADY)
    begin
        if ((((ap_enable_reg_pp0_iter3 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage8) and (ap_const_boolean_0 = ap_block_pp0_stage8)) or ((ap_enable_reg_pp0_iter3 = ap_const_logic_1) and (icmp_ln76_reg_462_pp0_iter2_reg = ap_const_lv1_0) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0) and (ap_const_boolean_0 = ap_block_pp0_stage0)) or ((ap_enable_reg_pp0_iter3 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage7) and (ap_const_boolean_0 = ap_block_pp0_stage7)) or ((ap_enable_reg_pp0_iter3 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage6) and (ap_const_boolean_0 = ap_block_pp0_stage6)) or ((ap_enable_reg_pp0_iter3 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage5) and (ap_const_boolean_0 = ap_block_pp0_stage5)) or ((ap_enable_reg_pp0_iter3 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage4) and (ap_const_boolean_0 = ap_block_pp0_stage4)) or ((ap_enable_reg_pp0_iter3 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage3) and (ap_const_boolean_0 
    = ap_block_pp0_stage3)) or ((ap_enable_reg_pp0_iter3 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage2) and (ap_const_boolean_0 = ap_block_pp0_stage2)) or ((ap_enable_reg_pp0_iter3 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage1) and (ap_const_boolean_0 = ap_block_pp0_stage1)) or ((ap_enable_reg_pp0_iter1 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage8) and (ap_const_boolean_0 = ap_block_pp0_stage8)) or ((ap_enable_reg_pp0_iter1 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage7) and (ap_const_boolean_0 = ap_block_pp0_stage7)) or ((ap_enable_reg_pp0_iter1 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage6) and (ap_const_boolean_0 = ap_block_pp0_stage6)) or ((ap_enable_reg_pp0_iter1 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage5) and (ap_const_boolean_0 = ap_block_pp0_stage5)) or ((ap_enable_reg_pp0_iter1 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage4) and (ap_const_boolean_0 = ap_block_pp0_stage4)) 
    or ((ap_enable_reg_pp0_iter1 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage3) and (ap_const_boolean_0 = ap_block_pp0_stage3)) or ((ap_enable_reg_pp0_iter1 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage2) and (ap_const_boolean_0 = ap_block_pp0_stage2)) or ((ap_enable_reg_pp0_iter1 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage1) and (ap_const_boolean_0 = ap_block_pp0_stage1)) or ((ap_enable_reg_pp0_iter6 = ap_const_logic_1) and (icmp_ln76_reg_462_pp0_iter5_reg = ap_const_lv1_0) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0) and (ap_const_boolean_0 = ap_block_pp0_stage0)) or ((ap_enable_reg_pp0_iter6 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage8) and (ap_const_boolean_0 = ap_block_pp0_stage8)) or ((ap_enable_reg_pp0_iter6 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage7) and (ap_const_boolean_0 = ap_block_pp0_stage7)) or ((ap_enable_reg_pp0_iter6 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage6) and (ap_const_boolean_0 
    = ap_block_pp0_stage6)) or ((ap_enable_reg_pp0_iter6 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage5) and (ap_const_boolean_0 = ap_block_pp0_stage5)) or ((ap_enable_reg_pp0_iter6 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage4) and (ap_const_boolean_0 = ap_block_pp0_stage4)) or ((ap_enable_reg_pp0_iter6 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage3) and (ap_const_boolean_0 = ap_block_pp0_stage3)) or ((ap_enable_reg_pp0_iter6 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage2) and (ap_const_boolean_0 = ap_block_pp0_stage2)) or ((ap_enable_reg_pp0_iter6 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage1) and (ap_const_boolean_0 = ap_block_pp0_stage1)) or ((ap_enable_reg_pp0_iter5 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage8) and (ap_const_boolean_0 = ap_block_pp0_stage8)) or ((ap_enable_reg_pp0_iter5 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage7) and (ap_const_boolean_0 = ap_block_pp0_stage7)) 
    or ((ap_enable_reg_pp0_iter5 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage6) and (ap_const_boolean_0 = ap_block_pp0_stage6)) or ((ap_enable_reg_pp0_iter5 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage5) and (ap_const_boolean_0 = ap_block_pp0_stage5)) or ((ap_enable_reg_pp0_iter5 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage4) and (ap_const_boolean_0 = ap_block_pp0_stage4)) or ((ap_enable_reg_pp0_iter5 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage3) and (ap_const_boolean_0 = ap_block_pp0_stage3)) or ((ap_enable_reg_pp0_iter5 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage2) and (ap_const_boolean_0 = ap_block_pp0_stage2)) or ((ap_enable_reg_pp0_iter5 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage1) and (ap_const_boolean_0 = ap_block_pp0_stage1)) or ((icmp_ln76_reg_462 = ap_const_lv1_0) and (ap_enable_reg_pp0_iter1 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0) and (ap_const_boolean_0 = ap_block_pp0_stage0)) 
    or ((icmp_ln76_reg_462 = ap_const_lv1_0) and (ap_enable_reg_pp0_iter0 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage8) and (ap_const_boolean_0 = ap_block_pp0_stage8)) or ((ap_enable_reg_pp0_iter4 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage8) and (ap_const_boolean_0 = ap_block_pp0_stage8)) or ((ap_enable_reg_pp0_iter4 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage7) and (ap_const_boolean_0 = ap_block_pp0_stage7)) or ((ap_enable_reg_pp0_iter4 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage6) and (ap_const_boolean_0 = ap_block_pp0_stage6)) or ((ap_enable_reg_pp0_iter4 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage5) and (ap_const_boolean_0 = ap_block_pp0_stage5)) or ((ap_enable_reg_pp0_iter4 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage4) and (ap_const_boolean_0 = ap_block_pp0_stage4)) or ((ap_enable_reg_pp0_iter4 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage3) and (ap_const_boolean_0 = ap_block_pp0_stage3)) 
    or ((ap_enable_reg_pp0_iter4 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage2) and (ap_const_boolean_0 = ap_block_pp0_stage2)) or ((ap_enable_reg_pp0_iter4 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage1) and (ap_const_boolean_0 = ap_block_pp0_stage1)) or ((icmp_ln76_reg_462_pp0_iter4_reg = ap_const_lv1_0) and (ap_enable_reg_pp0_iter5 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0) and (ap_const_boolean_0 = ap_block_pp0_stage0)) or ((icmp_ln76_reg_462_pp0_iter3_reg = ap_const_lv1_0) and (ap_enable_reg_pp0_iter4 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0) and (ap_const_boolean_0 = ap_block_pp0_stage0)) or ((ap_enable_reg_pp0_iter7 = ap_const_logic_1) and (icmp_ln76_reg_462_pp0_iter6_reg = ap_const_lv1_0) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0) and (ap_const_boolean_0 = ap_block_pp0_stage0)) or ((ap_enable_reg_pp0_iter7 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage6) and (ap_const_boolean_0 = ap_block_pp0_stage6)) or 
    ((ap_enable_reg_pp0_iter7 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage5) and (ap_const_boolean_0 = ap_block_pp0_stage5)) or ((ap_enable_reg_pp0_iter7 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage4) and (ap_const_boolean_0 = ap_block_pp0_stage4)) or ((ap_enable_reg_pp0_iter7 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage3) and (ap_const_boolean_0 = ap_block_pp0_stage3)) or ((ap_enable_reg_pp0_iter7 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage2) and (ap_const_boolean_0 = ap_block_pp0_stage2)) or ((ap_enable_reg_pp0_iter7 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage1) and (ap_const_boolean_0 = ap_block_pp0_stage1)) or ((ap_enable_reg_pp0_iter2 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage8) and (ap_const_boolean_0 = ap_block_pp0_stage8)) or ((ap_enable_reg_pp0_iter2 = ap_const_logic_1) and (icmp_ln76_reg_462_pp0_iter1_reg = ap_const_lv1_0) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0) and (ap_const_boolean_0 
    = ap_block_pp0_stage0)) or ((ap_enable_reg_pp0_iter2 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage7) and (ap_const_boolean_0 = ap_block_pp0_stage7)) or ((ap_enable_reg_pp0_iter2 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage6) and (ap_const_boolean_0 = ap_block_pp0_stage6)) or ((ap_enable_reg_pp0_iter2 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage5) and (ap_const_boolean_0 = ap_block_pp0_stage5)) or ((ap_enable_reg_pp0_iter2 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage4) and (ap_const_boolean_0 = ap_block_pp0_stage4)) or ((ap_enable_reg_pp0_iter2 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage3) and (ap_const_boolean_0 = ap_block_pp0_stage3)) or ((ap_enable_reg_pp0_iter2 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage2) and (ap_const_boolean_0 = ap_block_pp0_stage2)) or ((ap_enable_reg_pp0_iter2 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage1) and (ap_const_boolean_0 = ap_block_pp0_stage1)))) then 
            m_axi_A_RREADY <= grp_mmatmul_block_q4_0_const_block_q8_0_const_s_fu_179_m_axi_A_RREADY;
        else 
            m_axi_A_RREADY <= ap_const_logic_0;
        end if; 
    end process;

    m_axi_A_WDATA <= ap_const_lv256_lc_1;
    m_axi_A_WID <= ap_const_lv1_0;
    m_axi_A_WLAST <= ap_const_logic_0;
    m_axi_A_WSTRB <= ap_const_lv32_0;
    m_axi_A_WUSER <= ap_const_lv1_0;
    m_axi_A_WVALID <= ap_const_logic_0;
    m_axi_B_ARADDR <= grp_mmatmul_block_q4_0_const_block_q8_0_const_s_fu_179_m_axi_B_ARADDR;
    m_axi_B_ARBURST <= grp_mmatmul_block_q4_0_const_block_q8_0_const_s_fu_179_m_axi_B_ARBURST;
    m_axi_B_ARCACHE <= grp_mmatmul_block_q4_0_const_block_q8_0_const_s_fu_179_m_axi_B_ARCACHE;
    m_axi_B_ARID <= grp_mmatmul_block_q4_0_const_block_q8_0_const_s_fu_179_m_axi_B_ARID;
    m_axi_B_ARLEN <= grp_mmatmul_block_q4_0_const_block_q8_0_const_s_fu_179_m_axi_B_ARLEN;
    m_axi_B_ARLOCK <= grp_mmatmul_block_q4_0_const_block_q8_0_const_s_fu_179_m_axi_B_ARLOCK;
    m_axi_B_ARPROT <= grp_mmatmul_block_q4_0_const_block_q8_0_const_s_fu_179_m_axi_B_ARPROT;
    m_axi_B_ARQOS <= grp_mmatmul_block_q4_0_const_block_q8_0_const_s_fu_179_m_axi_B_ARQOS;
    m_axi_B_ARREGION <= grp_mmatmul_block_q4_0_const_block_q8_0_const_s_fu_179_m_axi_B_ARREGION;
    m_axi_B_ARSIZE <= grp_mmatmul_block_q4_0_const_block_q8_0_const_s_fu_179_m_axi_B_ARSIZE;
    m_axi_B_ARUSER <= grp_mmatmul_block_q4_0_const_block_q8_0_const_s_fu_179_m_axi_B_ARUSER;

    m_axi_B_ARVALID_assign_proc : process(ap_CS_fsm_pp0_stage0, ap_enable_reg_pp0_iter0, ap_enable_reg_pp0_iter1, ap_enable_reg_pp0_iter2, ap_enable_reg_pp0_iter3, ap_enable_reg_pp0_iter4, ap_enable_reg_pp0_iter5, ap_enable_reg_pp0_iter6, ap_enable_reg_pp0_iter7, ap_CS_fsm_pp0_stage8, icmp_ln76_reg_462, ap_block_pp0_stage8, ap_block_pp0_stage0, ap_CS_fsm_pp0_stage1, ap_block_pp0_stage1, ap_CS_fsm_pp0_stage2, ap_block_pp0_stage2, ap_CS_fsm_pp0_stage3, ap_block_pp0_stage3, ap_CS_fsm_pp0_stage4, ap_block_pp0_stage4, ap_CS_fsm_pp0_stage5, ap_block_pp0_stage5, ap_CS_fsm_pp0_stage6, ap_block_pp0_stage6, ap_CS_fsm_pp0_stage7, ap_block_pp0_stage7, icmp_ln76_reg_462_pp0_iter1_reg, icmp_ln76_reg_462_pp0_iter2_reg, icmp_ln76_reg_462_pp0_iter3_reg, icmp_ln76_reg_462_pp0_iter4_reg, icmp_ln76_reg_462_pp0_iter5_reg, icmp_ln76_reg_462_pp0_iter6_reg, grp_mmatmul_block_q4_0_const_block_q8_0_const_s_fu_179_m_axi_B_ARVALID)
    begin
        if ((((ap_enable_reg_pp0_iter3 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage8) and (ap_const_boolean_0 = ap_block_pp0_stage8)) or ((ap_enable_reg_pp0_iter3 = ap_const_logic_1) and (icmp_ln76_reg_462_pp0_iter2_reg = ap_const_lv1_0) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0) and (ap_const_boolean_0 = ap_block_pp0_stage0)) or ((ap_enable_reg_pp0_iter3 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage7) and (ap_const_boolean_0 = ap_block_pp0_stage7)) or ((ap_enable_reg_pp0_iter3 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage6) and (ap_const_boolean_0 = ap_block_pp0_stage6)) or ((ap_enable_reg_pp0_iter3 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage5) and (ap_const_boolean_0 = ap_block_pp0_stage5)) or ((ap_enable_reg_pp0_iter3 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage4) and (ap_const_boolean_0 = ap_block_pp0_stage4)) or ((ap_enable_reg_pp0_iter3 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage3) and (ap_const_boolean_0 
    = ap_block_pp0_stage3)) or ((ap_enable_reg_pp0_iter3 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage2) and (ap_const_boolean_0 = ap_block_pp0_stage2)) or ((ap_enable_reg_pp0_iter3 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage1) and (ap_const_boolean_0 = ap_block_pp0_stage1)) or ((ap_enable_reg_pp0_iter1 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage8) and (ap_const_boolean_0 = ap_block_pp0_stage8)) or ((ap_enable_reg_pp0_iter1 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage7) and (ap_const_boolean_0 = ap_block_pp0_stage7)) or ((ap_enable_reg_pp0_iter1 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage6) and (ap_const_boolean_0 = ap_block_pp0_stage6)) or ((ap_enable_reg_pp0_iter1 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage5) and (ap_const_boolean_0 = ap_block_pp0_stage5)) or ((ap_enable_reg_pp0_iter1 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage4) and (ap_const_boolean_0 = ap_block_pp0_stage4)) 
    or ((ap_enable_reg_pp0_iter1 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage3) and (ap_const_boolean_0 = ap_block_pp0_stage3)) or ((ap_enable_reg_pp0_iter1 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage2) and (ap_const_boolean_0 = ap_block_pp0_stage2)) or ((ap_enable_reg_pp0_iter1 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage1) and (ap_const_boolean_0 = ap_block_pp0_stage1)) or ((ap_enable_reg_pp0_iter6 = ap_const_logic_1) and (icmp_ln76_reg_462_pp0_iter5_reg = ap_const_lv1_0) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0) and (ap_const_boolean_0 = ap_block_pp0_stage0)) or ((ap_enable_reg_pp0_iter6 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage8) and (ap_const_boolean_0 = ap_block_pp0_stage8)) or ((ap_enable_reg_pp0_iter6 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage7) and (ap_const_boolean_0 = ap_block_pp0_stage7)) or ((ap_enable_reg_pp0_iter6 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage6) and (ap_const_boolean_0 
    = ap_block_pp0_stage6)) or ((ap_enable_reg_pp0_iter6 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage5) and (ap_const_boolean_0 = ap_block_pp0_stage5)) or ((ap_enable_reg_pp0_iter6 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage4) and (ap_const_boolean_0 = ap_block_pp0_stage4)) or ((ap_enable_reg_pp0_iter6 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage3) and (ap_const_boolean_0 = ap_block_pp0_stage3)) or ((ap_enable_reg_pp0_iter6 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage2) and (ap_const_boolean_0 = ap_block_pp0_stage2)) or ((ap_enable_reg_pp0_iter6 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage1) and (ap_const_boolean_0 = ap_block_pp0_stage1)) or ((ap_enable_reg_pp0_iter5 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage8) and (ap_const_boolean_0 = ap_block_pp0_stage8)) or ((ap_enable_reg_pp0_iter5 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage7) and (ap_const_boolean_0 = ap_block_pp0_stage7)) 
    or ((ap_enable_reg_pp0_iter5 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage6) and (ap_const_boolean_0 = ap_block_pp0_stage6)) or ((ap_enable_reg_pp0_iter5 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage5) and (ap_const_boolean_0 = ap_block_pp0_stage5)) or ((ap_enable_reg_pp0_iter5 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage4) and (ap_const_boolean_0 = ap_block_pp0_stage4)) or ((ap_enable_reg_pp0_iter5 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage3) and (ap_const_boolean_0 = ap_block_pp0_stage3)) or ((ap_enable_reg_pp0_iter5 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage2) and (ap_const_boolean_0 = ap_block_pp0_stage2)) or ((ap_enable_reg_pp0_iter5 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage1) and (ap_const_boolean_0 = ap_block_pp0_stage1)) or ((icmp_ln76_reg_462 = ap_const_lv1_0) and (ap_enable_reg_pp0_iter1 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0) and (ap_const_boolean_0 = ap_block_pp0_stage0)) 
    or ((icmp_ln76_reg_462 = ap_const_lv1_0) and (ap_enable_reg_pp0_iter0 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage8) and (ap_const_boolean_0 = ap_block_pp0_stage8)) or ((ap_enable_reg_pp0_iter4 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage8) and (ap_const_boolean_0 = ap_block_pp0_stage8)) or ((ap_enable_reg_pp0_iter4 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage7) and (ap_const_boolean_0 = ap_block_pp0_stage7)) or ((ap_enable_reg_pp0_iter4 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage6) and (ap_const_boolean_0 = ap_block_pp0_stage6)) or ((ap_enable_reg_pp0_iter4 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage5) and (ap_const_boolean_0 = ap_block_pp0_stage5)) or ((ap_enable_reg_pp0_iter4 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage4) and (ap_const_boolean_0 = ap_block_pp0_stage4)) or ((ap_enable_reg_pp0_iter4 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage3) and (ap_const_boolean_0 = ap_block_pp0_stage3)) 
    or ((ap_enable_reg_pp0_iter4 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage2) and (ap_const_boolean_0 = ap_block_pp0_stage2)) or ((ap_enable_reg_pp0_iter4 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage1) and (ap_const_boolean_0 = ap_block_pp0_stage1)) or ((icmp_ln76_reg_462_pp0_iter4_reg = ap_const_lv1_0) and (ap_enable_reg_pp0_iter5 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0) and (ap_const_boolean_0 = ap_block_pp0_stage0)) or ((icmp_ln76_reg_462_pp0_iter3_reg = ap_const_lv1_0) and (ap_enable_reg_pp0_iter4 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0) and (ap_const_boolean_0 = ap_block_pp0_stage0)) or ((ap_enable_reg_pp0_iter7 = ap_const_logic_1) and (icmp_ln76_reg_462_pp0_iter6_reg = ap_const_lv1_0) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0) and (ap_const_boolean_0 = ap_block_pp0_stage0)) or ((ap_enable_reg_pp0_iter7 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage6) and (ap_const_boolean_0 = ap_block_pp0_stage6)) or 
    ((ap_enable_reg_pp0_iter7 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage5) and (ap_const_boolean_0 = ap_block_pp0_stage5)) or ((ap_enable_reg_pp0_iter7 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage4) and (ap_const_boolean_0 = ap_block_pp0_stage4)) or ((ap_enable_reg_pp0_iter7 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage3) and (ap_const_boolean_0 = ap_block_pp0_stage3)) or ((ap_enable_reg_pp0_iter7 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage2) and (ap_const_boolean_0 = ap_block_pp0_stage2)) or ((ap_enable_reg_pp0_iter7 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage1) and (ap_const_boolean_0 = ap_block_pp0_stage1)) or ((ap_enable_reg_pp0_iter2 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage8) and (ap_const_boolean_0 = ap_block_pp0_stage8)) or ((ap_enable_reg_pp0_iter2 = ap_const_logic_1) and (icmp_ln76_reg_462_pp0_iter1_reg = ap_const_lv1_0) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0) and (ap_const_boolean_0 
    = ap_block_pp0_stage0)) or ((ap_enable_reg_pp0_iter2 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage7) and (ap_const_boolean_0 = ap_block_pp0_stage7)) or ((ap_enable_reg_pp0_iter2 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage6) and (ap_const_boolean_0 = ap_block_pp0_stage6)) or ((ap_enable_reg_pp0_iter2 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage5) and (ap_const_boolean_0 = ap_block_pp0_stage5)) or ((ap_enable_reg_pp0_iter2 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage4) and (ap_const_boolean_0 = ap_block_pp0_stage4)) or ((ap_enable_reg_pp0_iter2 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage3) and (ap_const_boolean_0 = ap_block_pp0_stage3)) or ((ap_enable_reg_pp0_iter2 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage2) and (ap_const_boolean_0 = ap_block_pp0_stage2)) or ((ap_enable_reg_pp0_iter2 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage1) and (ap_const_boolean_0 = ap_block_pp0_stage1)))) then 
            m_axi_B_ARVALID <= grp_mmatmul_block_q4_0_const_block_q8_0_const_s_fu_179_m_axi_B_ARVALID;
        else 
            m_axi_B_ARVALID <= ap_const_logic_0;
        end if; 
    end process;

    m_axi_B_AWADDR <= ap_const_lv64_0;
    m_axi_B_AWBURST <= ap_const_lv2_0;
    m_axi_B_AWCACHE <= ap_const_lv4_0;
    m_axi_B_AWID <= ap_const_lv1_0;
    m_axi_B_AWLEN <= ap_const_lv32_0;
    m_axi_B_AWLOCK <= ap_const_lv2_0;
    m_axi_B_AWPROT <= ap_const_lv3_0;
    m_axi_B_AWQOS <= ap_const_lv4_0;
    m_axi_B_AWREGION <= ap_const_lv4_0;
    m_axi_B_AWSIZE <= ap_const_lv3_0;
    m_axi_B_AWUSER <= ap_const_lv1_0;
    m_axi_B_AWVALID <= ap_const_logic_0;
    m_axi_B_BREADY <= ap_const_logic_0;

    m_axi_B_RREADY_assign_proc : process(ap_CS_fsm_pp0_stage0, ap_enable_reg_pp0_iter0, ap_enable_reg_pp0_iter1, ap_enable_reg_pp0_iter2, ap_enable_reg_pp0_iter3, ap_enable_reg_pp0_iter4, ap_enable_reg_pp0_iter5, ap_enable_reg_pp0_iter6, ap_enable_reg_pp0_iter7, ap_CS_fsm_pp0_stage8, icmp_ln76_reg_462, ap_block_pp0_stage8, ap_block_pp0_stage0, ap_CS_fsm_pp0_stage1, ap_block_pp0_stage1, ap_CS_fsm_pp0_stage2, ap_block_pp0_stage2, ap_CS_fsm_pp0_stage3, ap_block_pp0_stage3, ap_CS_fsm_pp0_stage4, ap_block_pp0_stage4, ap_CS_fsm_pp0_stage5, ap_block_pp0_stage5, ap_CS_fsm_pp0_stage6, ap_block_pp0_stage6, ap_CS_fsm_pp0_stage7, ap_block_pp0_stage7, icmp_ln76_reg_462_pp0_iter1_reg, icmp_ln76_reg_462_pp0_iter2_reg, icmp_ln76_reg_462_pp0_iter3_reg, icmp_ln76_reg_462_pp0_iter4_reg, icmp_ln76_reg_462_pp0_iter5_reg, icmp_ln76_reg_462_pp0_iter6_reg, grp_mmatmul_block_q4_0_const_block_q8_0_const_s_fu_179_m_axi_B_RREADY)
    begin
        if ((((ap_enable_reg_pp0_iter3 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage8) and (ap_const_boolean_0 = ap_block_pp0_stage8)) or ((ap_enable_reg_pp0_iter3 = ap_const_logic_1) and (icmp_ln76_reg_462_pp0_iter2_reg = ap_const_lv1_0) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0) and (ap_const_boolean_0 = ap_block_pp0_stage0)) or ((ap_enable_reg_pp0_iter3 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage7) and (ap_const_boolean_0 = ap_block_pp0_stage7)) or ((ap_enable_reg_pp0_iter3 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage6) and (ap_const_boolean_0 = ap_block_pp0_stage6)) or ((ap_enable_reg_pp0_iter3 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage5) and (ap_const_boolean_0 = ap_block_pp0_stage5)) or ((ap_enable_reg_pp0_iter3 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage4) and (ap_const_boolean_0 = ap_block_pp0_stage4)) or ((ap_enable_reg_pp0_iter3 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage3) and (ap_const_boolean_0 
    = ap_block_pp0_stage3)) or ((ap_enable_reg_pp0_iter3 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage2) and (ap_const_boolean_0 = ap_block_pp0_stage2)) or ((ap_enable_reg_pp0_iter3 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage1) and (ap_const_boolean_0 = ap_block_pp0_stage1)) or ((ap_enable_reg_pp0_iter1 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage8) and (ap_const_boolean_0 = ap_block_pp0_stage8)) or ((ap_enable_reg_pp0_iter1 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage7) and (ap_const_boolean_0 = ap_block_pp0_stage7)) or ((ap_enable_reg_pp0_iter1 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage6) and (ap_const_boolean_0 = ap_block_pp0_stage6)) or ((ap_enable_reg_pp0_iter1 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage5) and (ap_const_boolean_0 = ap_block_pp0_stage5)) or ((ap_enable_reg_pp0_iter1 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage4) and (ap_const_boolean_0 = ap_block_pp0_stage4)) 
    or ((ap_enable_reg_pp0_iter1 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage3) and (ap_const_boolean_0 = ap_block_pp0_stage3)) or ((ap_enable_reg_pp0_iter1 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage2) and (ap_const_boolean_0 = ap_block_pp0_stage2)) or ((ap_enable_reg_pp0_iter1 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage1) and (ap_const_boolean_0 = ap_block_pp0_stage1)) or ((ap_enable_reg_pp0_iter6 = ap_const_logic_1) and (icmp_ln76_reg_462_pp0_iter5_reg = ap_const_lv1_0) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0) and (ap_const_boolean_0 = ap_block_pp0_stage0)) or ((ap_enable_reg_pp0_iter6 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage8) and (ap_const_boolean_0 = ap_block_pp0_stage8)) or ((ap_enable_reg_pp0_iter6 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage7) and (ap_const_boolean_0 = ap_block_pp0_stage7)) or ((ap_enable_reg_pp0_iter6 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage6) and (ap_const_boolean_0 
    = ap_block_pp0_stage6)) or ((ap_enable_reg_pp0_iter6 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage5) and (ap_const_boolean_0 = ap_block_pp0_stage5)) or ((ap_enable_reg_pp0_iter6 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage4) and (ap_const_boolean_0 = ap_block_pp0_stage4)) or ((ap_enable_reg_pp0_iter6 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage3) and (ap_const_boolean_0 = ap_block_pp0_stage3)) or ((ap_enable_reg_pp0_iter6 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage2) and (ap_const_boolean_0 = ap_block_pp0_stage2)) or ((ap_enable_reg_pp0_iter6 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage1) and (ap_const_boolean_0 = ap_block_pp0_stage1)) or ((ap_enable_reg_pp0_iter5 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage8) and (ap_const_boolean_0 = ap_block_pp0_stage8)) or ((ap_enable_reg_pp0_iter5 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage7) and (ap_const_boolean_0 = ap_block_pp0_stage7)) 
    or ((ap_enable_reg_pp0_iter5 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage6) and (ap_const_boolean_0 = ap_block_pp0_stage6)) or ((ap_enable_reg_pp0_iter5 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage5) and (ap_const_boolean_0 = ap_block_pp0_stage5)) or ((ap_enable_reg_pp0_iter5 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage4) and (ap_const_boolean_0 = ap_block_pp0_stage4)) or ((ap_enable_reg_pp0_iter5 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage3) and (ap_const_boolean_0 = ap_block_pp0_stage3)) or ((ap_enable_reg_pp0_iter5 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage2) and (ap_const_boolean_0 = ap_block_pp0_stage2)) or ((ap_enable_reg_pp0_iter5 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage1) and (ap_const_boolean_0 = ap_block_pp0_stage1)) or ((icmp_ln76_reg_462 = ap_const_lv1_0) and (ap_enable_reg_pp0_iter1 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0) and (ap_const_boolean_0 = ap_block_pp0_stage0)) 
    or ((icmp_ln76_reg_462 = ap_const_lv1_0) and (ap_enable_reg_pp0_iter0 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage8) and (ap_const_boolean_0 = ap_block_pp0_stage8)) or ((ap_enable_reg_pp0_iter4 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage8) and (ap_const_boolean_0 = ap_block_pp0_stage8)) or ((ap_enable_reg_pp0_iter4 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage7) and (ap_const_boolean_0 = ap_block_pp0_stage7)) or ((ap_enable_reg_pp0_iter4 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage6) and (ap_const_boolean_0 = ap_block_pp0_stage6)) or ((ap_enable_reg_pp0_iter4 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage5) and (ap_const_boolean_0 = ap_block_pp0_stage5)) or ((ap_enable_reg_pp0_iter4 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage4) and (ap_const_boolean_0 = ap_block_pp0_stage4)) or ((ap_enable_reg_pp0_iter4 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage3) and (ap_const_boolean_0 = ap_block_pp0_stage3)) 
    or ((ap_enable_reg_pp0_iter4 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage2) and (ap_const_boolean_0 = ap_block_pp0_stage2)) or ((ap_enable_reg_pp0_iter4 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage1) and (ap_const_boolean_0 = ap_block_pp0_stage1)) or ((icmp_ln76_reg_462_pp0_iter4_reg = ap_const_lv1_0) and (ap_enable_reg_pp0_iter5 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0) and (ap_const_boolean_0 = ap_block_pp0_stage0)) or ((icmp_ln76_reg_462_pp0_iter3_reg = ap_const_lv1_0) and (ap_enable_reg_pp0_iter4 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0) and (ap_const_boolean_0 = ap_block_pp0_stage0)) or ((ap_enable_reg_pp0_iter7 = ap_const_logic_1) and (icmp_ln76_reg_462_pp0_iter6_reg = ap_const_lv1_0) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0) and (ap_const_boolean_0 = ap_block_pp0_stage0)) or ((ap_enable_reg_pp0_iter7 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage6) and (ap_const_boolean_0 = ap_block_pp0_stage6)) or 
    ((ap_enable_reg_pp0_iter7 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage5) and (ap_const_boolean_0 = ap_block_pp0_stage5)) or ((ap_enable_reg_pp0_iter7 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage4) and (ap_const_boolean_0 = ap_block_pp0_stage4)) or ((ap_enable_reg_pp0_iter7 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage3) and (ap_const_boolean_0 = ap_block_pp0_stage3)) or ((ap_enable_reg_pp0_iter7 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage2) and (ap_const_boolean_0 = ap_block_pp0_stage2)) or ((ap_enable_reg_pp0_iter7 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage1) and (ap_const_boolean_0 = ap_block_pp0_stage1)) or ((ap_enable_reg_pp0_iter2 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage8) and (ap_const_boolean_0 = ap_block_pp0_stage8)) or ((ap_enable_reg_pp0_iter2 = ap_const_logic_1) and (icmp_ln76_reg_462_pp0_iter1_reg = ap_const_lv1_0) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0) and (ap_const_boolean_0 
    = ap_block_pp0_stage0)) or ((ap_enable_reg_pp0_iter2 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage7) and (ap_const_boolean_0 = ap_block_pp0_stage7)) or ((ap_enable_reg_pp0_iter2 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage6) and (ap_const_boolean_0 = ap_block_pp0_stage6)) or ((ap_enable_reg_pp0_iter2 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage5) and (ap_const_boolean_0 = ap_block_pp0_stage5)) or ((ap_enable_reg_pp0_iter2 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage4) and (ap_const_boolean_0 = ap_block_pp0_stage4)) or ((ap_enable_reg_pp0_iter2 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage3) and (ap_const_boolean_0 = ap_block_pp0_stage3)) or ((ap_enable_reg_pp0_iter2 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage2) and (ap_const_boolean_0 = ap_block_pp0_stage2)) or ((ap_enable_reg_pp0_iter2 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage1) and (ap_const_boolean_0 = ap_block_pp0_stage1)))) then 
            m_axi_B_RREADY <= grp_mmatmul_block_q4_0_const_block_q8_0_const_s_fu_179_m_axi_B_RREADY;
        else 
            m_axi_B_RREADY <= ap_const_logic_0;
        end if; 
    end process;

    m_axi_B_WDATA <= ap_const_lv512_lc_1;
    m_axi_B_WID <= ap_const_lv1_0;
    m_axi_B_WLAST <= ap_const_logic_0;
    m_axi_B_WSTRB <= ap_const_lv64_0;
    m_axi_B_WUSER <= ap_const_lv1_0;
    m_axi_B_WVALID <= ap_const_logic_0;
    p_shl1_fu_357_p3 <= (grp_fu_201_p2 & ap_const_lv1_0);
    p_shl_fu_349_p3 <= (empty_35_fu_345_p1 & ap_const_lv5_0);
    select_ln76_1_fu_270_p3 <= 
        j_4_fu_256_p2 when (icmp_ln78_fu_235_p2(0) = '1') else 
        ap_sig_allocacmp_j_load;
    select_ln76_fu_262_p3 <= 
        ap_const_lv4_0 when (icmp_ln78_fu_235_p2(0) = '1') else 
        ap_sig_allocacmp_i_2;
    shl_ln80_1_fu_388_p3 <= (grp_fu_201_p2 & ap_const_lv1_0);
    shl_ln_fu_380_p3 <= (trunc_ln80_fu_376_p1 & ap_const_lv4_0);
    sub_ln83_fu_294_p2 <= std_logic_vector(unsigned(tmp_fu_286_p3) - unsigned(trunc_ln83_fu_282_p1));
    tmp2_fu_365_p2 <= std_logic_vector(unsigned(p_shl1_fu_357_p3) + unsigned(B_offset));
    tmp_fu_286_p3 <= (trunc_ln76_fu_278_p1 & ap_const_lv2_0);
    trunc_ln76_fu_278_p1 <= select_ln76_1_fu_270_p3(2 - 1 downto 0);
    trunc_ln80_fu_376_p1 <= grp_fu_201_p2(60 - 1 downto 0);
    trunc_ln83_fu_282_p1 <= select_ln76_1_fu_270_p3(4 - 1 downto 0);
    zext_ln72_cast_fu_206_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(zext_ln72),63));
    zext_ln76_fu_300_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(select_ln76_1_fu_270_p3),63));
    zext_ln78_1_fu_337_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(select_ln76_reg_466),63));
    zext_ln78_fu_231_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(ap_sig_allocacmp_i_2),8));
    zext_ln83_fu_407_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(add_ln83_reg_476_pp0_iter6_reg),64));
end behav;
