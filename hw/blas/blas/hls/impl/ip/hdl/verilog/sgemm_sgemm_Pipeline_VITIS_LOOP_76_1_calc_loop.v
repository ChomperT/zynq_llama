// ==============================================================
// Generated by Vitis HLS v2023.2
// Copyright 1986-2022 Xilinx, Inc. All Rights Reserved.
// Copyright 2022-2023 Advanced Micro Devices, Inc. All Rights Reserved.
// ==============================================================

`timescale 1 ns / 1 ps 

module sgemm_sgemm_Pipeline_VITIS_LOOP_76_1_calc_loop (
        ap_clk,
        ap_rst,
        ap_start,
        ap_done,
        ap_idle,
        ap_ready,
        m_axi_B_AWVALID,
        m_axi_B_AWREADY,
        m_axi_B_AWADDR,
        m_axi_B_AWID,
        m_axi_B_AWLEN,
        m_axi_B_AWSIZE,
        m_axi_B_AWBURST,
        m_axi_B_AWLOCK,
        m_axi_B_AWCACHE,
        m_axi_B_AWPROT,
        m_axi_B_AWQOS,
        m_axi_B_AWREGION,
        m_axi_B_AWUSER,
        m_axi_B_WVALID,
        m_axi_B_WREADY,
        m_axi_B_WDATA,
        m_axi_B_WSTRB,
        m_axi_B_WLAST,
        m_axi_B_WID,
        m_axi_B_WUSER,
        m_axi_B_ARVALID,
        m_axi_B_ARREADY,
        m_axi_B_ARADDR,
        m_axi_B_ARID,
        m_axi_B_ARLEN,
        m_axi_B_ARSIZE,
        m_axi_B_ARBURST,
        m_axi_B_ARLOCK,
        m_axi_B_ARCACHE,
        m_axi_B_ARPROT,
        m_axi_B_ARQOS,
        m_axi_B_ARREGION,
        m_axi_B_ARUSER,
        m_axi_B_RVALID,
        m_axi_B_RREADY,
        m_axi_B_RDATA,
        m_axi_B_RLAST,
        m_axi_B_RID,
        m_axi_B_RFIFONUM,
        m_axi_B_RUSER,
        m_axi_B_RRESP,
        m_axi_B_BVALID,
        m_axi_B_BREADY,
        m_axi_B_BRESP,
        m_axi_B_BID,
        m_axi_B_BUSER,
        m_axi_A_AWVALID,
        m_axi_A_AWREADY,
        m_axi_A_AWADDR,
        m_axi_A_AWID,
        m_axi_A_AWLEN,
        m_axi_A_AWSIZE,
        m_axi_A_AWBURST,
        m_axi_A_AWLOCK,
        m_axi_A_AWCACHE,
        m_axi_A_AWPROT,
        m_axi_A_AWQOS,
        m_axi_A_AWREGION,
        m_axi_A_AWUSER,
        m_axi_A_WVALID,
        m_axi_A_WREADY,
        m_axi_A_WDATA,
        m_axi_A_WSTRB,
        m_axi_A_WLAST,
        m_axi_A_WID,
        m_axi_A_WUSER,
        m_axi_A_ARVALID,
        m_axi_A_ARREADY,
        m_axi_A_ARADDR,
        m_axi_A_ARID,
        m_axi_A_ARLEN,
        m_axi_A_ARSIZE,
        m_axi_A_ARBURST,
        m_axi_A_ARLOCK,
        m_axi_A_ARCACHE,
        m_axi_A_ARPROT,
        m_axi_A_ARQOS,
        m_axi_A_ARREGION,
        m_axi_A_ARUSER,
        m_axi_A_RVALID,
        m_axi_A_RREADY,
        m_axi_A_RDATA,
        m_axi_A_RLAST,
        m_axi_A_RID,
        m_axi_A_RFIFONUM,
        m_axi_A_RUSER,
        m_axi_A_RRESP,
        m_axi_A_BVALID,
        m_axi_A_BREADY,
        m_axi_A_BRESP,
        m_axi_A_BID,
        m_axi_A_BUSER,
        RM,
        mul_ln97,
        add_ln70,
        empty_27,
        zext_ln72,
        B_offset,
        Cv_address0,
        Cv_ce0,
        Cv_we0,
        Cv_d0,
        Cv_q0,
        add_ln69,
        empty,
        A_offset
);

parameter    ap_ST_fsm_pp0_stage0 = 9'd1;
parameter    ap_ST_fsm_pp0_stage1 = 9'd2;
parameter    ap_ST_fsm_pp0_stage2 = 9'd4;
parameter    ap_ST_fsm_pp0_stage3 = 9'd8;
parameter    ap_ST_fsm_pp0_stage4 = 9'd16;
parameter    ap_ST_fsm_pp0_stage5 = 9'd32;
parameter    ap_ST_fsm_pp0_stage6 = 9'd64;
parameter    ap_ST_fsm_pp0_stage7 = 9'd128;
parameter    ap_ST_fsm_pp0_stage8 = 9'd256;

input   ap_clk;
input   ap_rst;
input   ap_start;
output   ap_done;
output   ap_idle;
output   ap_ready;
output   m_axi_B_AWVALID;
input   m_axi_B_AWREADY;
output  [63:0] m_axi_B_AWADDR;
output  [0:0] m_axi_B_AWID;
output  [31:0] m_axi_B_AWLEN;
output  [2:0] m_axi_B_AWSIZE;
output  [1:0] m_axi_B_AWBURST;
output  [1:0] m_axi_B_AWLOCK;
output  [3:0] m_axi_B_AWCACHE;
output  [2:0] m_axi_B_AWPROT;
output  [3:0] m_axi_B_AWQOS;
output  [3:0] m_axi_B_AWREGION;
output  [0:0] m_axi_B_AWUSER;
output   m_axi_B_WVALID;
input   m_axi_B_WREADY;
output  [511:0] m_axi_B_WDATA;
output  [63:0] m_axi_B_WSTRB;
output   m_axi_B_WLAST;
output  [0:0] m_axi_B_WID;
output  [0:0] m_axi_B_WUSER;
output   m_axi_B_ARVALID;
input   m_axi_B_ARREADY;
output  [63:0] m_axi_B_ARADDR;
output  [0:0] m_axi_B_ARID;
output  [31:0] m_axi_B_ARLEN;
output  [2:0] m_axi_B_ARSIZE;
output  [1:0] m_axi_B_ARBURST;
output  [1:0] m_axi_B_ARLOCK;
output  [3:0] m_axi_B_ARCACHE;
output  [2:0] m_axi_B_ARPROT;
output  [3:0] m_axi_B_ARQOS;
output  [3:0] m_axi_B_ARREGION;
output  [0:0] m_axi_B_ARUSER;
input   m_axi_B_RVALID;
output   m_axi_B_RREADY;
input  [511:0] m_axi_B_RDATA;
input   m_axi_B_RLAST;
input  [0:0] m_axi_B_RID;
input  [8:0] m_axi_B_RFIFONUM;
input  [0:0] m_axi_B_RUSER;
input  [1:0] m_axi_B_RRESP;
input   m_axi_B_BVALID;
output   m_axi_B_BREADY;
input  [1:0] m_axi_B_BRESP;
input  [0:0] m_axi_B_BID;
input  [0:0] m_axi_B_BUSER;
output   m_axi_A_AWVALID;
input   m_axi_A_AWREADY;
output  [63:0] m_axi_A_AWADDR;
output  [0:0] m_axi_A_AWID;
output  [31:0] m_axi_A_AWLEN;
output  [2:0] m_axi_A_AWSIZE;
output  [1:0] m_axi_A_AWBURST;
output  [1:0] m_axi_A_AWLOCK;
output  [3:0] m_axi_A_AWCACHE;
output  [2:0] m_axi_A_AWPROT;
output  [3:0] m_axi_A_AWQOS;
output  [3:0] m_axi_A_AWREGION;
output  [0:0] m_axi_A_AWUSER;
output   m_axi_A_WVALID;
input   m_axi_A_WREADY;
output  [255:0] m_axi_A_WDATA;
output  [31:0] m_axi_A_WSTRB;
output   m_axi_A_WLAST;
output  [0:0] m_axi_A_WID;
output  [0:0] m_axi_A_WUSER;
output   m_axi_A_ARVALID;
input   m_axi_A_ARREADY;
output  [63:0] m_axi_A_ARADDR;
output  [0:0] m_axi_A_ARID;
output  [31:0] m_axi_A_ARLEN;
output  [2:0] m_axi_A_ARSIZE;
output  [1:0] m_axi_A_ARBURST;
output  [1:0] m_axi_A_ARLOCK;
output  [3:0] m_axi_A_ARCACHE;
output  [2:0] m_axi_A_ARPROT;
output  [3:0] m_axi_A_ARQOS;
output  [3:0] m_axi_A_ARREGION;
output  [0:0] m_axi_A_ARUSER;
input   m_axi_A_RVALID;
output   m_axi_A_RREADY;
input  [255:0] m_axi_A_RDATA;
input   m_axi_A_RLAST;
input  [0:0] m_axi_A_RID;
input  [8:0] m_axi_A_RFIFONUM;
input  [0:0] m_axi_A_RUSER;
input  [1:0] m_axi_A_RRESP;
input   m_axi_A_BVALID;
output   m_axi_A_BREADY;
input  [1:0] m_axi_A_BRESP;
input  [0:0] m_axi_A_BID;
input  [0:0] m_axi_A_BUSER;
input  [7:0] RM;
input  [15:0] mul_ln97;
input  [62:0] add_ln70;
input  [62:0] empty_27;
input  [30:0] zext_ln72;
input  [63:0] B_offset;
output  [3:0] Cv_address0;
output   Cv_ce0;
output   Cv_we0;
output  [15:0] Cv_d0;
input  [15:0] Cv_q0;
input  [62:0] add_ln69;
input  [62:0] empty;
input  [63:0] A_offset;

reg ap_idle;
reg m_axi_B_ARVALID;
reg m_axi_B_RREADY;
reg m_axi_A_ARVALID;
reg m_axi_A_RREADY;
reg[3:0] Cv_address0;
reg Cv_ce0;
reg Cv_we0;

(* fsm_encoding = "none" *) reg   [8:0] ap_CS_fsm;
wire    ap_CS_fsm_pp0_stage0;
reg    ap_enable_reg_pp0_iter0;
reg    ap_enable_reg_pp0_iter1;
reg    ap_enable_reg_pp0_iter2;
reg    ap_enable_reg_pp0_iter3;
reg    ap_enable_reg_pp0_iter4;
reg    ap_enable_reg_pp0_iter5;
reg    ap_enable_reg_pp0_iter6;
reg    ap_enable_reg_pp0_iter7;
reg    ap_enable_reg_pp0_iter8;
reg    ap_idle_pp0;
wire    ap_CS_fsm_pp0_stage8;
wire    grp_mmatmul_block_q4_0_const_block_q8_0_const_s_fu_179_A_blk_n_AR;
wire    grp_mmatmul_block_q4_0_const_block_q8_0_const_s_fu_179_A_blk_n_R;
wire    grp_mmatmul_block_q4_0_const_block_q8_0_const_s_fu_179_B_blk_n_AR;
wire    grp_mmatmul_block_q4_0_const_block_q8_0_const_s_fu_179_B_blk_n_R;
reg   [0:0] icmp_ln76_reg_462;
reg    ap_block_state9_pp0_stage8_iter0;
reg    ap_block_state18_pp0_stage8_iter1;
reg    ap_block_state36_pp0_stage8_iter3;
reg    ap_block_pp0_stage8_subdone;
reg    ap_condition_exit_pp0_iter0_stage8;
wire    ap_loop_exit_ready;
reg    ap_ready_int;
reg    B_blk_n_AR;
reg    B_blk_n_R;
wire    ap_block_pp0_stage8;
wire    ap_block_pp0_stage0;
wire    ap_CS_fsm_pp0_stage1;
wire    ap_block_pp0_stage1;
wire    ap_CS_fsm_pp0_stage2;
wire    ap_block_pp0_stage2;
wire    ap_CS_fsm_pp0_stage3;
wire    ap_block_pp0_stage3;
wire    ap_CS_fsm_pp0_stage4;
wire    ap_block_pp0_stage4;
wire    ap_CS_fsm_pp0_stage5;
wire    ap_block_pp0_stage5;
wire    ap_CS_fsm_pp0_stage6;
wire    ap_block_pp0_stage6;
wire    ap_CS_fsm_pp0_stage7;
wire    ap_block_pp0_stage7;
reg   [0:0] icmp_ln76_reg_462_pp0_iter1_reg;
reg   [0:0] icmp_ln76_reg_462_pp0_iter2_reg;
reg    A_blk_n_AR;
reg    A_blk_n_R;
wire   [62:0] grp_fu_193_p2;
reg   [62:0] reg_197;
reg    ap_block_state15_pp0_stage5_iter1;
reg    ap_block_state24_pp0_stage5_iter2;
reg    ap_block_state33_pp0_stage5_iter3;
reg    ap_block_pp0_stage5_11001;
reg    ap_block_state16_pp0_stage6_iter1;
reg    ap_block_state25_pp0_stage6_iter2;
reg    ap_block_state34_pp0_stage6_iter3;
reg    ap_block_pp0_stage6_11001;
reg    ap_block_state10_pp0_stage0_iter1;
reg    ap_block_state19_pp0_stage0_iter2;
reg    ap_block_state28_pp0_stage0_iter3;
reg    ap_block_pp0_stage0_11001;
wire   [62:0] zext_ln72_cast_fu_206_p1;
reg   [62:0] zext_ln72_cast_reg_457;
wire   [0:0] icmp_ln76_fu_241_p2;
reg   [0:0] icmp_ln76_reg_462_pp0_iter3_reg;
reg   [0:0] icmp_ln76_reg_462_pp0_iter4_reg;
reg   [0:0] icmp_ln76_reg_462_pp0_iter5_reg;
reg   [0:0] icmp_ln76_reg_462_pp0_iter6_reg;
reg   [0:0] icmp_ln76_reg_462_pp0_iter7_reg;
wire   [3:0] select_ln76_fu_262_p3;
reg   [3:0] select_ln76_reg_466;
wire  signed [62:0] add36_i_fu_304_p2;
reg  signed [62:0] add36_i_reg_471;
wire   [3:0] add_ln83_fu_310_p2;
reg   [3:0] add_ln83_reg_476;
reg   [3:0] add_ln83_reg_476_pp0_iter1_reg;
reg   [3:0] add_ln83_reg_476_pp0_iter2_reg;
reg   [3:0] add_ln83_reg_476_pp0_iter3_reg;
reg   [3:0] add_ln83_reg_476_pp0_iter4_reg;
reg   [3:0] add_ln83_reg_476_pp0_iter5_reg;
reg   [3:0] add_ln83_reg_476_pp0_iter6_reg;
wire  signed [62:0] add_ln80_fu_340_p2;
reg  signed [62:0] add_ln80_reg_481;
reg    ap_block_state11_pp0_stage1_iter1;
reg    ap_block_state20_pp0_stage1_iter2;
reg    ap_block_state29_pp0_stage1_iter3;
reg    ap_block_pp0_stage1_11001;
wire   [63:0] bb_fu_370_p2;
reg   [63:0] bb_reg_486;
wire   [63:0] aa_fu_401_p2;
reg   [63:0] aa_reg_491;
reg    ap_block_state17_pp0_stage7_iter1;
reg    ap_block_state26_pp0_stage7_iter2;
reg    ap_block_pp0_stage7_11001;
reg   [3:0] Cv_addr_reg_496;
reg   [3:0] Cv_addr_reg_496_pp0_iter8_reg;
reg   [15:0] Cv_load_reg_501;
wire   [15:0] grp_mmatmul_block_q4_0_const_block_q8_0_const_s_fu_179_ap_return;
reg   [15:0] res_reg_506;
wire   [15:0] grp_fu_189_p2;
reg   [15:0] add41_i_reg_511;
reg    ap_block_state12_pp0_stage2_iter1;
reg    ap_block_state21_pp0_stage2_iter2;
reg    ap_block_state30_pp0_stage2_iter3;
reg    ap_block_pp0_stage2_11001;
reg    ap_enable_reg_pp0_iter0_reg;
reg    ap_block_state13_pp0_stage3_iter1;
reg    ap_block_state22_pp0_stage3_iter2;
reg    ap_block_state31_pp0_stage3_iter3;
reg    ap_block_pp0_stage3_subdone;
wire    grp_mmatmul_block_q4_0_const_block_q8_0_const_s_fu_179_ap_start;
wire    grp_mmatmul_block_q4_0_const_block_q8_0_const_s_fu_179_ap_done;
wire    grp_mmatmul_block_q4_0_const_block_q8_0_const_s_fu_179_ap_idle;
wire    grp_mmatmul_block_q4_0_const_block_q8_0_const_s_fu_179_ap_ready;
wire    grp_mmatmul_block_q4_0_const_block_q8_0_const_s_fu_179_m_axi_A_AWVALID;
wire   [63:0] grp_mmatmul_block_q4_0_const_block_q8_0_const_s_fu_179_m_axi_A_AWADDR;
wire   [0:0] grp_mmatmul_block_q4_0_const_block_q8_0_const_s_fu_179_m_axi_A_AWID;
wire   [31:0] grp_mmatmul_block_q4_0_const_block_q8_0_const_s_fu_179_m_axi_A_AWLEN;
wire   [2:0] grp_mmatmul_block_q4_0_const_block_q8_0_const_s_fu_179_m_axi_A_AWSIZE;
wire   [1:0] grp_mmatmul_block_q4_0_const_block_q8_0_const_s_fu_179_m_axi_A_AWBURST;
wire   [1:0] grp_mmatmul_block_q4_0_const_block_q8_0_const_s_fu_179_m_axi_A_AWLOCK;
wire   [3:0] grp_mmatmul_block_q4_0_const_block_q8_0_const_s_fu_179_m_axi_A_AWCACHE;
wire   [2:0] grp_mmatmul_block_q4_0_const_block_q8_0_const_s_fu_179_m_axi_A_AWPROT;
wire   [3:0] grp_mmatmul_block_q4_0_const_block_q8_0_const_s_fu_179_m_axi_A_AWQOS;
wire   [3:0] grp_mmatmul_block_q4_0_const_block_q8_0_const_s_fu_179_m_axi_A_AWREGION;
wire   [0:0] grp_mmatmul_block_q4_0_const_block_q8_0_const_s_fu_179_m_axi_A_AWUSER;
wire    grp_mmatmul_block_q4_0_const_block_q8_0_const_s_fu_179_m_axi_A_WVALID;
wire   [255:0] grp_mmatmul_block_q4_0_const_block_q8_0_const_s_fu_179_m_axi_A_WDATA;
wire   [31:0] grp_mmatmul_block_q4_0_const_block_q8_0_const_s_fu_179_m_axi_A_WSTRB;
wire    grp_mmatmul_block_q4_0_const_block_q8_0_const_s_fu_179_m_axi_A_WLAST;
wire   [0:0] grp_mmatmul_block_q4_0_const_block_q8_0_const_s_fu_179_m_axi_A_WID;
wire   [0:0] grp_mmatmul_block_q4_0_const_block_q8_0_const_s_fu_179_m_axi_A_WUSER;
wire    grp_mmatmul_block_q4_0_const_block_q8_0_const_s_fu_179_m_axi_A_ARVALID;
wire   [63:0] grp_mmatmul_block_q4_0_const_block_q8_0_const_s_fu_179_m_axi_A_ARADDR;
wire   [0:0] grp_mmatmul_block_q4_0_const_block_q8_0_const_s_fu_179_m_axi_A_ARID;
wire   [31:0] grp_mmatmul_block_q4_0_const_block_q8_0_const_s_fu_179_m_axi_A_ARLEN;
wire   [2:0] grp_mmatmul_block_q4_0_const_block_q8_0_const_s_fu_179_m_axi_A_ARSIZE;
wire   [1:0] grp_mmatmul_block_q4_0_const_block_q8_0_const_s_fu_179_m_axi_A_ARBURST;
wire   [1:0] grp_mmatmul_block_q4_0_const_block_q8_0_const_s_fu_179_m_axi_A_ARLOCK;
wire   [3:0] grp_mmatmul_block_q4_0_const_block_q8_0_const_s_fu_179_m_axi_A_ARCACHE;
wire   [2:0] grp_mmatmul_block_q4_0_const_block_q8_0_const_s_fu_179_m_axi_A_ARPROT;
wire   [3:0] grp_mmatmul_block_q4_0_const_block_q8_0_const_s_fu_179_m_axi_A_ARQOS;
wire   [3:0] grp_mmatmul_block_q4_0_const_block_q8_0_const_s_fu_179_m_axi_A_ARREGION;
wire   [0:0] grp_mmatmul_block_q4_0_const_block_q8_0_const_s_fu_179_m_axi_A_ARUSER;
wire    grp_mmatmul_block_q4_0_const_block_q8_0_const_s_fu_179_m_axi_A_RREADY;
wire    grp_mmatmul_block_q4_0_const_block_q8_0_const_s_fu_179_m_axi_A_BREADY;
wire    grp_mmatmul_block_q4_0_const_block_q8_0_const_s_fu_179_m_axi_B_AWVALID;
wire   [63:0] grp_mmatmul_block_q4_0_const_block_q8_0_const_s_fu_179_m_axi_B_AWADDR;
wire   [0:0] grp_mmatmul_block_q4_0_const_block_q8_0_const_s_fu_179_m_axi_B_AWID;
wire   [31:0] grp_mmatmul_block_q4_0_const_block_q8_0_const_s_fu_179_m_axi_B_AWLEN;
wire   [2:0] grp_mmatmul_block_q4_0_const_block_q8_0_const_s_fu_179_m_axi_B_AWSIZE;
wire   [1:0] grp_mmatmul_block_q4_0_const_block_q8_0_const_s_fu_179_m_axi_B_AWBURST;
wire   [1:0] grp_mmatmul_block_q4_0_const_block_q8_0_const_s_fu_179_m_axi_B_AWLOCK;
wire   [3:0] grp_mmatmul_block_q4_0_const_block_q8_0_const_s_fu_179_m_axi_B_AWCACHE;
wire   [2:0] grp_mmatmul_block_q4_0_const_block_q8_0_const_s_fu_179_m_axi_B_AWPROT;
wire   [3:0] grp_mmatmul_block_q4_0_const_block_q8_0_const_s_fu_179_m_axi_B_AWQOS;
wire   [3:0] grp_mmatmul_block_q4_0_const_block_q8_0_const_s_fu_179_m_axi_B_AWREGION;
wire   [0:0] grp_mmatmul_block_q4_0_const_block_q8_0_const_s_fu_179_m_axi_B_AWUSER;
wire    grp_mmatmul_block_q4_0_const_block_q8_0_const_s_fu_179_m_axi_B_WVALID;
wire   [511:0] grp_mmatmul_block_q4_0_const_block_q8_0_const_s_fu_179_m_axi_B_WDATA;
wire   [63:0] grp_mmatmul_block_q4_0_const_block_q8_0_const_s_fu_179_m_axi_B_WSTRB;
wire    grp_mmatmul_block_q4_0_const_block_q8_0_const_s_fu_179_m_axi_B_WLAST;
wire   [0:0] grp_mmatmul_block_q4_0_const_block_q8_0_const_s_fu_179_m_axi_B_WID;
wire   [0:0] grp_mmatmul_block_q4_0_const_block_q8_0_const_s_fu_179_m_axi_B_WUSER;
wire    grp_mmatmul_block_q4_0_const_block_q8_0_const_s_fu_179_m_axi_B_ARVALID;
wire   [63:0] grp_mmatmul_block_q4_0_const_block_q8_0_const_s_fu_179_m_axi_B_ARADDR;
wire   [0:0] grp_mmatmul_block_q4_0_const_block_q8_0_const_s_fu_179_m_axi_B_ARID;
wire   [31:0] grp_mmatmul_block_q4_0_const_block_q8_0_const_s_fu_179_m_axi_B_ARLEN;
wire   [2:0] grp_mmatmul_block_q4_0_const_block_q8_0_const_s_fu_179_m_axi_B_ARSIZE;
wire   [1:0] grp_mmatmul_block_q4_0_const_block_q8_0_const_s_fu_179_m_axi_B_ARBURST;
wire   [1:0] grp_mmatmul_block_q4_0_const_block_q8_0_const_s_fu_179_m_axi_B_ARLOCK;
wire   [3:0] grp_mmatmul_block_q4_0_const_block_q8_0_const_s_fu_179_m_axi_B_ARCACHE;
wire   [2:0] grp_mmatmul_block_q4_0_const_block_q8_0_const_s_fu_179_m_axi_B_ARPROT;
wire   [3:0] grp_mmatmul_block_q4_0_const_block_q8_0_const_s_fu_179_m_axi_B_ARQOS;
wire   [3:0] grp_mmatmul_block_q4_0_const_block_q8_0_const_s_fu_179_m_axi_B_ARREGION;
wire   [0:0] grp_mmatmul_block_q4_0_const_block_q8_0_const_s_fu_179_m_axi_B_ARUSER;
wire    grp_mmatmul_block_q4_0_const_block_q8_0_const_s_fu_179_m_axi_B_RREADY;
wire    grp_mmatmul_block_q4_0_const_block_q8_0_const_s_fu_179_m_axi_B_BREADY;
reg    grp_mmatmul_block_q4_0_const_block_q8_0_const_s_fu_179_ap_ce;
wire    ap_block_pp0_stage1_11001_ignoreCallOp148;
wire    ap_block_pp0_stage2_11001_ignoreCallOp149;
wire    ap_block_pp0_stage3_11001_ignoreCallOp150;
wire    ap_block_pp0_stage4_11001_ignoreCallOp151;
wire    ap_block_pp0_stage5_11001_ignoreCallOp152;
wire    ap_block_pp0_stage6_11001_ignoreCallOp153;
wire    ap_block_pp0_stage7_11001_ignoreCallOp154;
wire    ap_block_pp0_stage8_11001_ignoreCallOp146;
wire    ap_block_pp0_stage0_11001_ignoreCallOp147;
reg    grp_mmatmul_block_q4_0_const_block_q8_0_const_s_fu_179_ap_start_reg;
wire   [63:0] zext_ln83_fu_407_p1;
reg   [3:0] i_fu_100;
wire   [3:0] i_3_fu_316_p2;
wire    ap_loop_init;
reg   [3:0] ap_sig_allocacmp_i_2;
reg   [7:0] j_fu_104;
wire   [7:0] select_ln76_1_fu_270_p3;
reg   [7:0] ap_sig_allocacmp_j_load;
reg   [15:0] indvar_flatten_fu_108;
wire   [15:0] add_ln76_fu_247_p2;
reg   [15:0] ap_sig_allocacmp_indvar_flatten_load;
reg    ap_block_pp0_stage3_11001;
reg  signed [62:0] grp_fu_193_p0;
reg  signed [62:0] grp_fu_193_p1;
wire   [7:0] zext_ln78_fu_231_p1;
wire   [0:0] icmp_ln78_fu_235_p2;
wire   [7:0] j_4_fu_256_p2;
wire   [1:0] trunc_ln76_fu_278_p1;
wire   [3:0] tmp_fu_286_p3;
wire   [3:0] trunc_ln83_fu_282_p1;
wire   [62:0] zext_ln76_fu_300_p1;
wire   [3:0] sub_ln83_fu_294_p2;
wire   [62:0] zext_ln78_1_fu_337_p1;
wire   [62:0] grp_fu_201_p2;
wire   [58:0] empty_35_fu_345_p1;
wire   [63:0] p_shl1_fu_357_p3;
wire   [63:0] tmp2_fu_365_p2;
wire   [63:0] p_shl_fu_349_p3;
wire   [59:0] trunc_ln80_fu_376_p1;
wire   [63:0] shl_ln80_1_fu_388_p3;
wire   [63:0] add_ln80_2_fu_396_p2;
wire   [63:0] shl_ln_fu_380_p3;
reg    grp_fu_189_ce;
reg    ap_block_pp0_stage8_11001;
reg    grp_fu_193_ce;
reg    ap_block_state14_pp0_stage4_iter1;
reg    ap_block_state23_pp0_stage4_iter2;
reg    ap_block_state32_pp0_stage4_iter3;
reg    ap_block_pp0_stage4_11001;
reg    ap_done_reg;
wire    ap_continue_int;
reg    ap_done_int;
reg    ap_loop_exit_ready_pp0_iter1_reg;
reg    ap_condition_exit_pp0_iter7_stage3;
reg    ap_idle_pp0_0to6;
reg    ap_loop_exit_ready_pp0_iter2_reg;
reg    ap_loop_exit_ready_pp0_iter3_reg;
reg    ap_loop_exit_ready_pp0_iter4_reg;
reg    ap_loop_exit_ready_pp0_iter5_reg;
reg    ap_loop_exit_ready_pp0_iter6_reg;
reg    ap_loop_exit_ready_pp0_iter7_reg;
reg   [8:0] ap_NS_fsm;
reg    ap_block_pp0_stage0_subdone;
reg    ap_idle_pp0_1to8;
reg    ap_done_pending_pp0;
reg    ap_block_pp0_stage1_subdone;
reg    ap_block_pp0_stage2_subdone;
reg    ap_block_pp0_stage4_subdone;
reg    ap_block_pp0_stage5_subdone;
reg    ap_block_pp0_stage6_subdone;
reg    ap_block_pp0_stage7_subdone;
wire    ap_enable_pp0;
wire    ap_start_int;
wire    ap_ce_reg;

// power-on initialization
initial begin
#0 ap_CS_fsm = 9'd1;
#0 ap_enable_reg_pp0_iter1 = 1'b0;
#0 ap_enable_reg_pp0_iter2 = 1'b0;
#0 ap_enable_reg_pp0_iter3 = 1'b0;
#0 ap_enable_reg_pp0_iter4 = 1'b0;
#0 ap_enable_reg_pp0_iter5 = 1'b0;
#0 ap_enable_reg_pp0_iter6 = 1'b0;
#0 ap_enable_reg_pp0_iter7 = 1'b0;
#0 ap_enable_reg_pp0_iter8 = 1'b0;
#0 ap_enable_reg_pp0_iter0_reg = 1'b0;
#0 grp_mmatmul_block_q4_0_const_block_q8_0_const_s_fu_179_ap_start_reg = 1'b0;
#0 i_fu_100 = 4'd0;
#0 j_fu_104 = 8'd0;
#0 indvar_flatten_fu_108 = 16'd0;
#0 ap_done_reg = 1'b0;
end

sgemm_mmatmul_block_q4_0_const_block_q8_0_const_s grp_mmatmul_block_q4_0_const_block_q8_0_const_s_fu_179(
    .ap_clk(ap_clk),
    .ap_rst(ap_rst),
    .ap_start(grp_mmatmul_block_q4_0_const_block_q8_0_const_s_fu_179_ap_start),
    .ap_done(grp_mmatmul_block_q4_0_const_block_q8_0_const_s_fu_179_ap_done),
    .ap_idle(grp_mmatmul_block_q4_0_const_block_q8_0_const_s_fu_179_ap_idle),
    .ap_ready(grp_mmatmul_block_q4_0_const_block_q8_0_const_s_fu_179_ap_ready),
    .m_axi_A_AWVALID(grp_mmatmul_block_q4_0_const_block_q8_0_const_s_fu_179_m_axi_A_AWVALID),
    .m_axi_A_AWREADY(1'b0),
    .m_axi_A_AWADDR(grp_mmatmul_block_q4_0_const_block_q8_0_const_s_fu_179_m_axi_A_AWADDR),
    .m_axi_A_AWID(grp_mmatmul_block_q4_0_const_block_q8_0_const_s_fu_179_m_axi_A_AWID),
    .m_axi_A_AWLEN(grp_mmatmul_block_q4_0_const_block_q8_0_const_s_fu_179_m_axi_A_AWLEN),
    .m_axi_A_AWSIZE(grp_mmatmul_block_q4_0_const_block_q8_0_const_s_fu_179_m_axi_A_AWSIZE),
    .m_axi_A_AWBURST(grp_mmatmul_block_q4_0_const_block_q8_0_const_s_fu_179_m_axi_A_AWBURST),
    .m_axi_A_AWLOCK(grp_mmatmul_block_q4_0_const_block_q8_0_const_s_fu_179_m_axi_A_AWLOCK),
    .m_axi_A_AWCACHE(grp_mmatmul_block_q4_0_const_block_q8_0_const_s_fu_179_m_axi_A_AWCACHE),
    .m_axi_A_AWPROT(grp_mmatmul_block_q4_0_const_block_q8_0_const_s_fu_179_m_axi_A_AWPROT),
    .m_axi_A_AWQOS(grp_mmatmul_block_q4_0_const_block_q8_0_const_s_fu_179_m_axi_A_AWQOS),
    .m_axi_A_AWREGION(grp_mmatmul_block_q4_0_const_block_q8_0_const_s_fu_179_m_axi_A_AWREGION),
    .m_axi_A_AWUSER(grp_mmatmul_block_q4_0_const_block_q8_0_const_s_fu_179_m_axi_A_AWUSER),
    .m_axi_A_WVALID(grp_mmatmul_block_q4_0_const_block_q8_0_const_s_fu_179_m_axi_A_WVALID),
    .m_axi_A_WREADY(1'b0),
    .m_axi_A_WDATA(grp_mmatmul_block_q4_0_const_block_q8_0_const_s_fu_179_m_axi_A_WDATA),
    .m_axi_A_WSTRB(grp_mmatmul_block_q4_0_const_block_q8_0_const_s_fu_179_m_axi_A_WSTRB),
    .m_axi_A_WLAST(grp_mmatmul_block_q4_0_const_block_q8_0_const_s_fu_179_m_axi_A_WLAST),
    .m_axi_A_WID(grp_mmatmul_block_q4_0_const_block_q8_0_const_s_fu_179_m_axi_A_WID),
    .m_axi_A_WUSER(grp_mmatmul_block_q4_0_const_block_q8_0_const_s_fu_179_m_axi_A_WUSER),
    .m_axi_A_ARVALID(grp_mmatmul_block_q4_0_const_block_q8_0_const_s_fu_179_m_axi_A_ARVALID),
    .m_axi_A_ARREADY(m_axi_A_ARREADY),
    .m_axi_A_ARADDR(grp_mmatmul_block_q4_0_const_block_q8_0_const_s_fu_179_m_axi_A_ARADDR),
    .m_axi_A_ARID(grp_mmatmul_block_q4_0_const_block_q8_0_const_s_fu_179_m_axi_A_ARID),
    .m_axi_A_ARLEN(grp_mmatmul_block_q4_0_const_block_q8_0_const_s_fu_179_m_axi_A_ARLEN),
    .m_axi_A_ARSIZE(grp_mmatmul_block_q4_0_const_block_q8_0_const_s_fu_179_m_axi_A_ARSIZE),
    .m_axi_A_ARBURST(grp_mmatmul_block_q4_0_const_block_q8_0_const_s_fu_179_m_axi_A_ARBURST),
    .m_axi_A_ARLOCK(grp_mmatmul_block_q4_0_const_block_q8_0_const_s_fu_179_m_axi_A_ARLOCK),
    .m_axi_A_ARCACHE(grp_mmatmul_block_q4_0_const_block_q8_0_const_s_fu_179_m_axi_A_ARCACHE),
    .m_axi_A_ARPROT(grp_mmatmul_block_q4_0_const_block_q8_0_const_s_fu_179_m_axi_A_ARPROT),
    .m_axi_A_ARQOS(grp_mmatmul_block_q4_0_const_block_q8_0_const_s_fu_179_m_axi_A_ARQOS),
    .m_axi_A_ARREGION(grp_mmatmul_block_q4_0_const_block_q8_0_const_s_fu_179_m_axi_A_ARREGION),
    .m_axi_A_ARUSER(grp_mmatmul_block_q4_0_const_block_q8_0_const_s_fu_179_m_axi_A_ARUSER),
    .m_axi_A_RVALID(m_axi_A_RVALID),
    .m_axi_A_RREADY(grp_mmatmul_block_q4_0_const_block_q8_0_const_s_fu_179_m_axi_A_RREADY),
    .m_axi_A_RDATA(m_axi_A_RDATA),
    .m_axi_A_RLAST(m_axi_A_RLAST),
    .m_axi_A_RID(m_axi_A_RID),
    .m_axi_A_RFIFONUM(m_axi_A_RFIFONUM),
    .m_axi_A_RUSER(m_axi_A_RUSER),
    .m_axi_A_RRESP(m_axi_A_RRESP),
    .m_axi_A_BVALID(1'b0),
    .m_axi_A_BREADY(grp_mmatmul_block_q4_0_const_block_q8_0_const_s_fu_179_m_axi_A_BREADY),
    .m_axi_A_BRESP(2'd0),
    .m_axi_A_BID(1'd0),
    .m_axi_A_BUSER(1'd0),
    .m_axi_B_AWVALID(grp_mmatmul_block_q4_0_const_block_q8_0_const_s_fu_179_m_axi_B_AWVALID),
    .m_axi_B_AWREADY(1'b0),
    .m_axi_B_AWADDR(grp_mmatmul_block_q4_0_const_block_q8_0_const_s_fu_179_m_axi_B_AWADDR),
    .m_axi_B_AWID(grp_mmatmul_block_q4_0_const_block_q8_0_const_s_fu_179_m_axi_B_AWID),
    .m_axi_B_AWLEN(grp_mmatmul_block_q4_0_const_block_q8_0_const_s_fu_179_m_axi_B_AWLEN),
    .m_axi_B_AWSIZE(grp_mmatmul_block_q4_0_const_block_q8_0_const_s_fu_179_m_axi_B_AWSIZE),
    .m_axi_B_AWBURST(grp_mmatmul_block_q4_0_const_block_q8_0_const_s_fu_179_m_axi_B_AWBURST),
    .m_axi_B_AWLOCK(grp_mmatmul_block_q4_0_const_block_q8_0_const_s_fu_179_m_axi_B_AWLOCK),
    .m_axi_B_AWCACHE(grp_mmatmul_block_q4_0_const_block_q8_0_const_s_fu_179_m_axi_B_AWCACHE),
    .m_axi_B_AWPROT(grp_mmatmul_block_q4_0_const_block_q8_0_const_s_fu_179_m_axi_B_AWPROT),
    .m_axi_B_AWQOS(grp_mmatmul_block_q4_0_const_block_q8_0_const_s_fu_179_m_axi_B_AWQOS),
    .m_axi_B_AWREGION(grp_mmatmul_block_q4_0_const_block_q8_0_const_s_fu_179_m_axi_B_AWREGION),
    .m_axi_B_AWUSER(grp_mmatmul_block_q4_0_const_block_q8_0_const_s_fu_179_m_axi_B_AWUSER),
    .m_axi_B_WVALID(grp_mmatmul_block_q4_0_const_block_q8_0_const_s_fu_179_m_axi_B_WVALID),
    .m_axi_B_WREADY(1'b0),
    .m_axi_B_WDATA(grp_mmatmul_block_q4_0_const_block_q8_0_const_s_fu_179_m_axi_B_WDATA),
    .m_axi_B_WSTRB(grp_mmatmul_block_q4_0_const_block_q8_0_const_s_fu_179_m_axi_B_WSTRB),
    .m_axi_B_WLAST(grp_mmatmul_block_q4_0_const_block_q8_0_const_s_fu_179_m_axi_B_WLAST),
    .m_axi_B_WID(grp_mmatmul_block_q4_0_const_block_q8_0_const_s_fu_179_m_axi_B_WID),
    .m_axi_B_WUSER(grp_mmatmul_block_q4_0_const_block_q8_0_const_s_fu_179_m_axi_B_WUSER),
    .m_axi_B_ARVALID(grp_mmatmul_block_q4_0_const_block_q8_0_const_s_fu_179_m_axi_B_ARVALID),
    .m_axi_B_ARREADY(m_axi_B_ARREADY),
    .m_axi_B_ARADDR(grp_mmatmul_block_q4_0_const_block_q8_0_const_s_fu_179_m_axi_B_ARADDR),
    .m_axi_B_ARID(grp_mmatmul_block_q4_0_const_block_q8_0_const_s_fu_179_m_axi_B_ARID),
    .m_axi_B_ARLEN(grp_mmatmul_block_q4_0_const_block_q8_0_const_s_fu_179_m_axi_B_ARLEN),
    .m_axi_B_ARSIZE(grp_mmatmul_block_q4_0_const_block_q8_0_const_s_fu_179_m_axi_B_ARSIZE),
    .m_axi_B_ARBURST(grp_mmatmul_block_q4_0_const_block_q8_0_const_s_fu_179_m_axi_B_ARBURST),
    .m_axi_B_ARLOCK(grp_mmatmul_block_q4_0_const_block_q8_0_const_s_fu_179_m_axi_B_ARLOCK),
    .m_axi_B_ARCACHE(grp_mmatmul_block_q4_0_const_block_q8_0_const_s_fu_179_m_axi_B_ARCACHE),
    .m_axi_B_ARPROT(grp_mmatmul_block_q4_0_const_block_q8_0_const_s_fu_179_m_axi_B_ARPROT),
    .m_axi_B_ARQOS(grp_mmatmul_block_q4_0_const_block_q8_0_const_s_fu_179_m_axi_B_ARQOS),
    .m_axi_B_ARREGION(grp_mmatmul_block_q4_0_const_block_q8_0_const_s_fu_179_m_axi_B_ARREGION),
    .m_axi_B_ARUSER(grp_mmatmul_block_q4_0_const_block_q8_0_const_s_fu_179_m_axi_B_ARUSER),
    .m_axi_B_RVALID(m_axi_B_RVALID),
    .m_axi_B_RREADY(grp_mmatmul_block_q4_0_const_block_q8_0_const_s_fu_179_m_axi_B_RREADY),
    .m_axi_B_RDATA(m_axi_B_RDATA),
    .m_axi_B_RLAST(m_axi_B_RLAST),
    .m_axi_B_RID(m_axi_B_RID),
    .m_axi_B_RFIFONUM(m_axi_B_RFIFONUM),
    .m_axi_B_RUSER(m_axi_B_RUSER),
    .m_axi_B_RRESP(m_axi_B_RRESP),
    .m_axi_B_BVALID(1'b0),
    .m_axi_B_BREADY(grp_mmatmul_block_q4_0_const_block_q8_0_const_s_fu_179_m_axi_B_BREADY),
    .m_axi_B_BRESP(2'd0),
    .m_axi_B_BID(1'd0),
    .m_axi_B_BUSER(1'd0),
    .ap_ce(grp_mmatmul_block_q4_0_const_block_q8_0_const_s_fu_179_ap_ce),
    .aa(aa_reg_491),
    .bb(bb_reg_486),
    .ap_return(grp_mmatmul_block_q4_0_const_block_q8_0_const_s_fu_179_ap_return),
    .A_blk_n_AR(grp_mmatmul_block_q4_0_const_block_q8_0_const_s_fu_179_A_blk_n_AR),
    .A_blk_n_R(grp_mmatmul_block_q4_0_const_block_q8_0_const_s_fu_179_A_blk_n_R),
    .B_blk_n_AR(grp_mmatmul_block_q4_0_const_block_q8_0_const_s_fu_179_B_blk_n_AR),
    .B_blk_n_R(grp_mmatmul_block_q4_0_const_block_q8_0_const_s_fu_179_B_blk_n_R)
);

sgemm_hadd_16ns_16ns_16_5_full_dsp_1_x #(
    .ID( 1 ),
    .NUM_STAGE( 5 ),
    .din0_WIDTH( 16 ),
    .din1_WIDTH( 16 ),
    .dout_WIDTH( 16 ))
hadd_16ns_16ns_16_5_full_dsp_1_x_U23(
    .clk(ap_clk),
    .reset(ap_rst),
    .din0(Cv_load_reg_501),
    .din1(res_reg_506),
    .ce(grp_fu_189_ce),
    .dout(grp_fu_189_p2)
);

sgemm_mul_63s_63s_63_5_1 #(
    .ID( 1 ),
    .NUM_STAGE( 5 ),
    .din0_WIDTH( 63 ),
    .din1_WIDTH( 63 ),
    .dout_WIDTH( 63 ))
mul_63s_63s_63_5_1_U24(
    .clk(ap_clk),
    .reset(ap_rst),
    .din0(grp_fu_193_p0),
    .din1(grp_fu_193_p1),
    .ce(grp_fu_193_ce),
    .dout(grp_fu_193_p2)
);

sgemm_flow_control_loop_pipe_sequential_init flow_control_loop_pipe_sequential_init_U(
    .ap_clk(ap_clk),
    .ap_rst(ap_rst),
    .ap_start(ap_start),
    .ap_ready(ap_ready),
    .ap_done(ap_done),
    .ap_start_int(ap_start_int),
    .ap_loop_init(ap_loop_init),
    .ap_ready_int(ap_ready_int),
    .ap_loop_exit_ready(ap_condition_exit_pp0_iter0_stage8),
    .ap_loop_exit_done(ap_done_int),
    .ap_continue_int(ap_continue_int),
    .ap_done_int(ap_done_int)
);

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_CS_fsm <= ap_ST_fsm_pp0_stage0;
    end else begin
        ap_CS_fsm <= ap_NS_fsm;
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_done_reg <= 1'b0;
    end else begin
        if ((ap_continue_int == 1'b1)) begin
            ap_done_reg <= 1'b0;
        end else if (((1'b1 == ap_CS_fsm_pp0_stage3) & (ap_loop_exit_ready_pp0_iter7_reg == 1'b1) & (1'b0 == ap_block_pp0_stage3_subdone))) begin
            ap_done_reg <= 1'b1;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp0_iter0_reg <= 1'b0;
    end else begin
        if ((1'b1 == ap_CS_fsm_pp0_stage0)) begin
            ap_enable_reg_pp0_iter0_reg <= ap_start_int;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp0_iter1 <= 1'b0;
    end else begin
        if ((1'b1 == ap_condition_exit_pp0_iter0_stage8)) begin
            ap_enable_reg_pp0_iter1 <= 1'b0;
        end else if (((1'b1 == ap_CS_fsm_pp0_stage8) & (1'b0 == ap_block_pp0_stage8_subdone))) begin
            ap_enable_reg_pp0_iter1 <= ap_enable_reg_pp0_iter0;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp0_iter2 <= 1'b0;
    end else begin
        if (((1'b1 == ap_CS_fsm_pp0_stage8) & (1'b0 == ap_block_pp0_stage8_subdone))) begin
            ap_enable_reg_pp0_iter2 <= ap_enable_reg_pp0_iter1;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp0_iter3 <= 1'b0;
    end else begin
        if (((1'b1 == ap_CS_fsm_pp0_stage8) & (1'b0 == ap_block_pp0_stage8_subdone))) begin
            ap_enable_reg_pp0_iter3 <= ap_enable_reg_pp0_iter2;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp0_iter4 <= 1'b0;
    end else begin
        if (((1'b1 == ap_CS_fsm_pp0_stage8) & (1'b0 == ap_block_pp0_stage8_subdone))) begin
            ap_enable_reg_pp0_iter4 <= ap_enable_reg_pp0_iter3;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp0_iter5 <= 1'b0;
    end else begin
        if (((1'b1 == ap_CS_fsm_pp0_stage8) & (1'b0 == ap_block_pp0_stage8_subdone))) begin
            ap_enable_reg_pp0_iter5 <= ap_enable_reg_pp0_iter4;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp0_iter6 <= 1'b0;
    end else begin
        if (((1'b1 == ap_CS_fsm_pp0_stage8) & (1'b0 == ap_block_pp0_stage8_subdone))) begin
            ap_enable_reg_pp0_iter6 <= ap_enable_reg_pp0_iter5;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp0_iter7 <= 1'b0;
    end else begin
        if (((1'b1 == ap_CS_fsm_pp0_stage8) & (1'b0 == ap_block_pp0_stage8_subdone))) begin
            ap_enable_reg_pp0_iter7 <= ap_enable_reg_pp0_iter6;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp0_iter8 <= 1'b0;
    end else begin
        if (((ap_enable_reg_pp0_iter8 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage3) & (1'b0 == ap_block_pp0_stage3_subdone))) begin
            ap_enable_reg_pp0_iter8 <= 1'b0;
        end else if (((1'b1 == ap_CS_fsm_pp0_stage8) & (1'b0 == ap_block_pp0_stage8_subdone))) begin
            ap_enable_reg_pp0_iter8 <= ap_enable_reg_pp0_iter7;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        grp_mmatmul_block_q4_0_const_block_q8_0_const_s_fu_179_ap_start_reg <= 1'b0;
    end else begin
        if (((icmp_ln76_reg_462 == 1'd0) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage7) & (1'b0 == ap_block_pp0_stage7_11001))) begin
            grp_mmatmul_block_q4_0_const_block_q8_0_const_s_fu_179_ap_start_reg <= 1'b1;
        end else if ((grp_mmatmul_block_q4_0_const_block_q8_0_const_s_fu_179_ap_ready == 1'b1)) begin
            grp_mmatmul_block_q4_0_const_block_q8_0_const_s_fu_179_ap_start_reg <= 1'b0;
        end
    end
end

always @ (posedge ap_clk) begin
    if (((1'b1 == ap_condition_exit_pp0_iter7_stage3) & (ap_idle_pp0_0to6 == 1'b1))) begin
        ap_loop_exit_ready_pp0_iter1_reg <= 1'b0;
    end else if (((1'b1 == ap_CS_fsm_pp0_stage8) & (1'b0 == ap_block_pp0_stage8_11001))) begin
        ap_loop_exit_ready_pp0_iter1_reg <= ap_loop_exit_ready;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b1 == ap_condition_exit_pp0_iter7_stage3) & (ap_idle_pp0_0to6 == 1'b1))) begin
        ap_loop_exit_ready_pp0_iter2_reg <= 1'b0;
    end else if (((1'b1 == ap_CS_fsm_pp0_stage8) & (1'b0 == ap_block_pp0_stage8_11001))) begin
        ap_loop_exit_ready_pp0_iter2_reg <= ap_loop_exit_ready_pp0_iter1_reg;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b1 == ap_condition_exit_pp0_iter7_stage3) & (ap_idle_pp0_0to6 == 1'b1))) begin
        ap_loop_exit_ready_pp0_iter3_reg <= 1'b0;
    end else if (((1'b1 == ap_CS_fsm_pp0_stage8) & (1'b0 == ap_block_pp0_stage8_11001))) begin
        ap_loop_exit_ready_pp0_iter3_reg <= ap_loop_exit_ready_pp0_iter2_reg;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b1 == ap_condition_exit_pp0_iter7_stage3) & (ap_idle_pp0_0to6 == 1'b1))) begin
        ap_loop_exit_ready_pp0_iter4_reg <= 1'b0;
    end else if (((1'b1 == ap_CS_fsm_pp0_stage8) & (1'b0 == ap_block_pp0_stage8_11001))) begin
        ap_loop_exit_ready_pp0_iter4_reg <= ap_loop_exit_ready_pp0_iter3_reg;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b1 == ap_condition_exit_pp0_iter7_stage3) & (ap_idle_pp0_0to6 == 1'b1))) begin
        ap_loop_exit_ready_pp0_iter5_reg <= 1'b0;
    end else if (((1'b1 == ap_CS_fsm_pp0_stage8) & (1'b0 == ap_block_pp0_stage8_11001))) begin
        ap_loop_exit_ready_pp0_iter5_reg <= ap_loop_exit_ready_pp0_iter4_reg;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b1 == ap_condition_exit_pp0_iter7_stage3) & (ap_idle_pp0_0to6 == 1'b1))) begin
        ap_loop_exit_ready_pp0_iter6_reg <= 1'b0;
    end else if (((1'b1 == ap_CS_fsm_pp0_stage8) & (1'b0 == ap_block_pp0_stage8_11001))) begin
        ap_loop_exit_ready_pp0_iter6_reg <= ap_loop_exit_ready_pp0_iter5_reg;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b1 == ap_condition_exit_pp0_iter7_stage3) & (ap_idle_pp0_0to6 == 1'b1))) begin
        ap_loop_exit_ready_pp0_iter7_reg <= 1'b0;
    end else if (((1'b1 == ap_CS_fsm_pp0_stage8) & (1'b0 == ap_block_pp0_stage8_11001))) begin
        ap_loop_exit_ready_pp0_iter7_reg <= ap_loop_exit_ready_pp0_iter6_reg;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b1 == ap_CS_fsm_pp0_stage0) & (1'b0 == ap_block_pp0_stage0_11001))) begin
        if (((icmp_ln76_fu_241_p2 == 1'd0) & (ap_enable_reg_pp0_iter0 == 1'b1))) begin
            i_fu_100 <= i_3_fu_316_p2;
        end else if ((ap_loop_init == 1'b1)) begin
            i_fu_100 <= 4'd0;
        end
    end
end

always @ (posedge ap_clk) begin
    if (((1'b1 == ap_CS_fsm_pp0_stage0) & (1'b0 == ap_block_pp0_stage0_11001))) begin
        if (((icmp_ln76_fu_241_p2 == 1'd0) & (ap_enable_reg_pp0_iter0 == 1'b1))) begin
            indvar_flatten_fu_108 <= add_ln76_fu_247_p2;
        end else if ((ap_loop_init == 1'b1)) begin
            indvar_flatten_fu_108 <= 16'd0;
        end
    end
end

always @ (posedge ap_clk) begin
    if (((1'b1 == ap_CS_fsm_pp0_stage0) & (1'b0 == ap_block_pp0_stage0_11001))) begin
        if (((icmp_ln76_fu_241_p2 == 1'd0) & (ap_enable_reg_pp0_iter0 == 1'b1))) begin
            j_fu_104 <= select_ln76_1_fu_270_p3;
        end else if ((ap_loop_init == 1'b1)) begin
            j_fu_104 <= 8'd0;
        end
    end
end

always @ (posedge ap_clk) begin
    if (((1'b1 == ap_CS_fsm_pp0_stage0) & (1'b0 == ap_block_pp0_stage0_11001))) begin
        Cv_addr_reg_496 <= zext_ln83_fu_407_p1;
        Cv_addr_reg_496_pp0_iter8_reg <= Cv_addr_reg_496;
        add36_i_reg_471 <= add36_i_fu_304_p2;
        add_ln83_reg_476 <= add_ln83_fu_310_p2;
        add_ln83_reg_476_pp0_iter1_reg <= add_ln83_reg_476;
        add_ln83_reg_476_pp0_iter2_reg <= add_ln83_reg_476_pp0_iter1_reg;
        add_ln83_reg_476_pp0_iter3_reg <= add_ln83_reg_476_pp0_iter2_reg;
        add_ln83_reg_476_pp0_iter4_reg <= add_ln83_reg_476_pp0_iter3_reg;
        add_ln83_reg_476_pp0_iter5_reg <= add_ln83_reg_476_pp0_iter4_reg;
        add_ln83_reg_476_pp0_iter6_reg <= add_ln83_reg_476_pp0_iter5_reg;
        icmp_ln76_reg_462 <= icmp_ln76_fu_241_p2;
        icmp_ln76_reg_462_pp0_iter1_reg <= icmp_ln76_reg_462;
        icmp_ln76_reg_462_pp0_iter2_reg <= icmp_ln76_reg_462_pp0_iter1_reg;
        icmp_ln76_reg_462_pp0_iter3_reg <= icmp_ln76_reg_462_pp0_iter2_reg;
        icmp_ln76_reg_462_pp0_iter4_reg <= icmp_ln76_reg_462_pp0_iter3_reg;
        icmp_ln76_reg_462_pp0_iter5_reg <= icmp_ln76_reg_462_pp0_iter4_reg;
        icmp_ln76_reg_462_pp0_iter6_reg <= icmp_ln76_reg_462_pp0_iter5_reg;
        icmp_ln76_reg_462_pp0_iter7_reg <= icmp_ln76_reg_462_pp0_iter6_reg;
        select_ln76_reg_466 <= select_ln76_fu_262_p3;
        zext_ln72_cast_reg_457[30 : 0] <= zext_ln72_cast_fu_206_p1[30 : 0];
    end
end

always @ (posedge ap_clk) begin
    if (((ap_enable_reg_pp0_iter7 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage1) & (1'b0 == ap_block_pp0_stage1_11001))) begin
        Cv_load_reg_501 <= Cv_q0;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b1 == ap_CS_fsm_pp0_stage7) & (1'b0 == ap_block_pp0_stage7_11001))) begin
        aa_reg_491 <= aa_fu_401_p2;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b1 == ap_CS_fsm_pp0_stage2) & (1'b0 == ap_block_pp0_stage2_11001))) begin
        add41_i_reg_511 <= grp_fu_189_p2;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b1 == ap_CS_fsm_pp0_stage1) & (1'b0 == ap_block_pp0_stage1_11001))) begin
        add_ln80_reg_481 <= add_ln80_fu_340_p2;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b1 == ap_CS_fsm_pp0_stage6) & (1'b0 == ap_block_pp0_stage6_11001))) begin
        bb_reg_486 <= bb_fu_370_p2;
        res_reg_506 <= grp_mmatmul_block_q4_0_const_block_q8_0_const_s_fu_179_ap_return;
    end
end

always @ (posedge ap_clk) begin
    if ((((ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage6) & (1'b0 == ap_block_pp0_stage6_11001)) | ((ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage5) & (1'b0 == ap_block_pp0_stage5_11001)))) begin
        reg_197 <= grp_fu_193_p2;
    end
end

always @ (*) begin
    if ((((ap_enable_reg_pp0_iter3 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage8) & (1'b0 == ap_block_pp0_stage8)) | ((ap_enable_reg_pp0_iter3 == 1'b1) & (icmp_ln76_reg_462_pp0_iter2_reg == 1'd0) & (1'b1 == ap_CS_fsm_pp0_stage0) & (1'b0 == ap_block_pp0_stage0)) | ((ap_enable_reg_pp0_iter3 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage6) & (1'b0 == ap_block_pp0_stage6)) | ((ap_enable_reg_pp0_iter3 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage5) & (1'b0 == ap_block_pp0_stage5)) | ((ap_enable_reg_pp0_iter3 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage4) & (1'b0 == ap_block_pp0_stage4)) | ((ap_enable_reg_pp0_iter3 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage3) & (1'b0 == ap_block_pp0_stage3)) | ((ap_enable_reg_pp0_iter3 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage2) & (1'b0 == ap_block_pp0_stage2)) | ((ap_enable_reg_pp0_iter3 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage1) & (1'b0 == ap_block_pp0_stage1)) | ((ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage8) & (1'b0 == ap_block_pp0_stage8)) | ((ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage7) 
    & (1'b0 == ap_block_pp0_stage7)) | ((ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage6) & (1'b0 == ap_block_pp0_stage6)) | ((ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage5) & (1'b0 == ap_block_pp0_stage5)) | ((ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage4) & (1'b0 == ap_block_pp0_stage4)) | ((ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage3) & (1'b0 == ap_block_pp0_stage3)) | ((ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage2) & (1'b0 == ap_block_pp0_stage2)) | ((ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage1) & (1'b0 == ap_block_pp0_stage1)) | ((icmp_ln76_reg_462 == 1'd0) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0) & (1'b0 == ap_block_pp0_stage0)) | ((icmp_ln76_reg_462 == 1'd0) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage8) & (1'b0 == ap_block_pp0_stage8)) | ((ap_enable_reg_pp0_iter2 == 1'b1) & (icmp_ln76_reg_462_pp0_iter1_reg == 1'd0) & (1'b1 == ap_CS_fsm_pp0_stage0) 
    & (1'b0 == ap_block_pp0_stage0)) | ((ap_enable_reg_pp0_iter2 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage7) & (1'b0 == ap_block_pp0_stage7)) | ((ap_enable_reg_pp0_iter2 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage6) & (1'b0 == ap_block_pp0_stage6)) | ((ap_enable_reg_pp0_iter2 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage5) & (1'b0 == ap_block_pp0_stage5)) | ((ap_enable_reg_pp0_iter2 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage4) & (1'b0 == ap_block_pp0_stage4)) | ((ap_enable_reg_pp0_iter2 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage3) & (1'b0 == ap_block_pp0_stage3)) | ((ap_enable_reg_pp0_iter2 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage2) & (1'b0 == ap_block_pp0_stage2)) | ((ap_enable_reg_pp0_iter2 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage1) & (1'b0 == ap_block_pp0_stage1)))) begin
        A_blk_n_AR = grp_mmatmul_block_q4_0_const_block_q8_0_const_s_fu_179_A_blk_n_AR;
    end else begin
        A_blk_n_AR = 1'b1;
    end
end

always @ (*) begin
    if ((((ap_enable_reg_pp0_iter3 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage8) & (1'b0 == ap_block_pp0_stage8)) | ((ap_enable_reg_pp0_iter3 == 1'b1) & (icmp_ln76_reg_462_pp0_iter2_reg == 1'd0) & (1'b1 == ap_CS_fsm_pp0_stage0) & (1'b0 == ap_block_pp0_stage0)) | ((ap_enable_reg_pp0_iter3 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage6) & (1'b0 == ap_block_pp0_stage6)) | ((ap_enable_reg_pp0_iter3 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage5) & (1'b0 == ap_block_pp0_stage5)) | ((ap_enable_reg_pp0_iter3 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage4) & (1'b0 == ap_block_pp0_stage4)) | ((ap_enable_reg_pp0_iter3 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage3) & (1'b0 == ap_block_pp0_stage3)) | ((ap_enable_reg_pp0_iter3 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage2) & (1'b0 == ap_block_pp0_stage2)) | ((ap_enable_reg_pp0_iter3 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage1) & (1'b0 == ap_block_pp0_stage1)) | ((ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage8) & (1'b0 == ap_block_pp0_stage8)) | ((ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage7) 
    & (1'b0 == ap_block_pp0_stage7)) | ((ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage6) & (1'b0 == ap_block_pp0_stage6)) | ((ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage5) & (1'b0 == ap_block_pp0_stage5)) | ((ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage4) & (1'b0 == ap_block_pp0_stage4)) | ((ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage3) & (1'b0 == ap_block_pp0_stage3)) | ((ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage2) & (1'b0 == ap_block_pp0_stage2)) | ((ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage1) & (1'b0 == ap_block_pp0_stage1)) | ((icmp_ln76_reg_462 == 1'd0) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0) & (1'b0 == ap_block_pp0_stage0)) | ((icmp_ln76_reg_462 == 1'd0) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage8) & (1'b0 == ap_block_pp0_stage8)) | ((ap_enable_reg_pp0_iter2 == 1'b1) & (icmp_ln76_reg_462_pp0_iter1_reg == 1'd0) & (1'b1 == ap_CS_fsm_pp0_stage0) 
    & (1'b0 == ap_block_pp0_stage0)) | ((ap_enable_reg_pp0_iter2 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage7) & (1'b0 == ap_block_pp0_stage7)) | ((ap_enable_reg_pp0_iter2 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage6) & (1'b0 == ap_block_pp0_stage6)) | ((ap_enable_reg_pp0_iter2 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage5) & (1'b0 == ap_block_pp0_stage5)) | ((ap_enable_reg_pp0_iter2 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage4) & (1'b0 == ap_block_pp0_stage4)) | ((ap_enable_reg_pp0_iter2 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage3) & (1'b0 == ap_block_pp0_stage3)) | ((ap_enable_reg_pp0_iter2 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage2) & (1'b0 == ap_block_pp0_stage2)) | ((ap_enable_reg_pp0_iter2 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage1) & (1'b0 == ap_block_pp0_stage1)))) begin
        A_blk_n_R = grp_mmatmul_block_q4_0_const_block_q8_0_const_s_fu_179_A_blk_n_R;
    end else begin
        A_blk_n_R = 1'b1;
    end
end

always @ (*) begin
    if ((((ap_enable_reg_pp0_iter3 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage8) & (1'b0 == ap_block_pp0_stage8)) | ((ap_enable_reg_pp0_iter3 == 1'b1) & (icmp_ln76_reg_462_pp0_iter2_reg == 1'd0) & (1'b1 == ap_CS_fsm_pp0_stage0) & (1'b0 == ap_block_pp0_stage0)) | ((ap_enable_reg_pp0_iter3 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage6) & (1'b0 == ap_block_pp0_stage6)) | ((ap_enable_reg_pp0_iter3 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage5) & (1'b0 == ap_block_pp0_stage5)) | ((ap_enable_reg_pp0_iter3 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage4) & (1'b0 == ap_block_pp0_stage4)) | ((ap_enable_reg_pp0_iter3 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage3) & (1'b0 == ap_block_pp0_stage3)) | ((ap_enable_reg_pp0_iter3 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage2) & (1'b0 == ap_block_pp0_stage2)) | ((ap_enable_reg_pp0_iter3 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage1) & (1'b0 == ap_block_pp0_stage1)) | ((ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage8) & (1'b0 == ap_block_pp0_stage8)) | ((ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage7) 
    & (1'b0 == ap_block_pp0_stage7)) | ((ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage6) & (1'b0 == ap_block_pp0_stage6)) | ((ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage5) & (1'b0 == ap_block_pp0_stage5)) | ((ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage4) & (1'b0 == ap_block_pp0_stage4)) | ((ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage3) & (1'b0 == ap_block_pp0_stage3)) | ((ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage2) & (1'b0 == ap_block_pp0_stage2)) | ((ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage1) & (1'b0 == ap_block_pp0_stage1)) | ((icmp_ln76_reg_462 == 1'd0) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0) & (1'b0 == ap_block_pp0_stage0)) | ((icmp_ln76_reg_462 == 1'd0) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage8) & (1'b0 == ap_block_pp0_stage8)) | ((ap_enable_reg_pp0_iter2 == 1'b1) & (icmp_ln76_reg_462_pp0_iter1_reg == 1'd0) & (1'b1 == ap_CS_fsm_pp0_stage0) 
    & (1'b0 == ap_block_pp0_stage0)) | ((ap_enable_reg_pp0_iter2 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage7) & (1'b0 == ap_block_pp0_stage7)) | ((ap_enable_reg_pp0_iter2 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage6) & (1'b0 == ap_block_pp0_stage6)) | ((ap_enable_reg_pp0_iter2 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage5) & (1'b0 == ap_block_pp0_stage5)) | ((ap_enable_reg_pp0_iter2 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage4) & (1'b0 == ap_block_pp0_stage4)) | ((ap_enable_reg_pp0_iter2 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage3) & (1'b0 == ap_block_pp0_stage3)) | ((ap_enable_reg_pp0_iter2 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage2) & (1'b0 == ap_block_pp0_stage2)) | ((ap_enable_reg_pp0_iter2 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage1) & (1'b0 == ap_block_pp0_stage1)))) begin
        B_blk_n_AR = grp_mmatmul_block_q4_0_const_block_q8_0_const_s_fu_179_B_blk_n_AR;
    end else begin
        B_blk_n_AR = 1'b1;
    end
end

always @ (*) begin
    if ((((ap_enable_reg_pp0_iter3 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage8) & (1'b0 == ap_block_pp0_stage8)) | ((ap_enable_reg_pp0_iter3 == 1'b1) & (icmp_ln76_reg_462_pp0_iter2_reg == 1'd0) & (1'b1 == ap_CS_fsm_pp0_stage0) & (1'b0 == ap_block_pp0_stage0)) | ((ap_enable_reg_pp0_iter3 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage6) & (1'b0 == ap_block_pp0_stage6)) | ((ap_enable_reg_pp0_iter3 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage5) & (1'b0 == ap_block_pp0_stage5)) | ((ap_enable_reg_pp0_iter3 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage4) & (1'b0 == ap_block_pp0_stage4)) | ((ap_enable_reg_pp0_iter3 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage3) & (1'b0 == ap_block_pp0_stage3)) | ((ap_enable_reg_pp0_iter3 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage2) & (1'b0 == ap_block_pp0_stage2)) | ((ap_enable_reg_pp0_iter3 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage1) & (1'b0 == ap_block_pp0_stage1)) | ((ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage8) & (1'b0 == ap_block_pp0_stage8)) | ((ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage7) 
    & (1'b0 == ap_block_pp0_stage7)) | ((ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage6) & (1'b0 == ap_block_pp0_stage6)) | ((ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage5) & (1'b0 == ap_block_pp0_stage5)) | ((ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage4) & (1'b0 == ap_block_pp0_stage4)) | ((ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage3) & (1'b0 == ap_block_pp0_stage3)) | ((ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage2) & (1'b0 == ap_block_pp0_stage2)) | ((ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage1) & (1'b0 == ap_block_pp0_stage1)) | ((icmp_ln76_reg_462 == 1'd0) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0) & (1'b0 == ap_block_pp0_stage0)) | ((icmp_ln76_reg_462 == 1'd0) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage8) & (1'b0 == ap_block_pp0_stage8)) | ((ap_enable_reg_pp0_iter2 == 1'b1) & (icmp_ln76_reg_462_pp0_iter1_reg == 1'd0) & (1'b1 == ap_CS_fsm_pp0_stage0) 
    & (1'b0 == ap_block_pp0_stage0)) | ((ap_enable_reg_pp0_iter2 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage7) & (1'b0 == ap_block_pp0_stage7)) | ((ap_enable_reg_pp0_iter2 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage6) & (1'b0 == ap_block_pp0_stage6)) | ((ap_enable_reg_pp0_iter2 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage5) & (1'b0 == ap_block_pp0_stage5)) | ((ap_enable_reg_pp0_iter2 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage4) & (1'b0 == ap_block_pp0_stage4)) | ((ap_enable_reg_pp0_iter2 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage3) & (1'b0 == ap_block_pp0_stage3)) | ((ap_enable_reg_pp0_iter2 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage2) & (1'b0 == ap_block_pp0_stage2)) | ((ap_enable_reg_pp0_iter2 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage1) & (1'b0 == ap_block_pp0_stage1)))) begin
        B_blk_n_R = grp_mmatmul_block_q4_0_const_block_q8_0_const_s_fu_179_B_blk_n_R;
    end else begin
        B_blk_n_R = 1'b1;
    end
end

always @ (*) begin
    if (((ap_enable_reg_pp0_iter8 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage3) & (1'b0 == ap_block_pp0_stage3))) begin
        Cv_address0 = Cv_addr_reg_496_pp0_iter8_reg;
    end else if (((ap_enable_reg_pp0_iter7 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0) & (1'b0 == ap_block_pp0_stage0))) begin
        Cv_address0 = zext_ln83_fu_407_p1;
    end else begin
        Cv_address0 = 'bx;
    end
end

always @ (*) begin
    if ((((ap_enable_reg_pp0_iter8 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage3) & (1'b0 == ap_block_pp0_stage3_11001)) | ((ap_enable_reg_pp0_iter7 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0) & (1'b0 == ap_block_pp0_stage0_11001)))) begin
        Cv_ce0 = 1'b1;
    end else begin
        Cv_ce0 = 1'b0;
    end
end

always @ (*) begin
    if (((ap_enable_reg_pp0_iter8 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage3) & (1'b0 == ap_block_pp0_stage3_11001))) begin
        Cv_we0 = 1'b1;
    end else begin
        Cv_we0 = 1'b0;
    end
end

always @ (*) begin
    if (((icmp_ln76_reg_462 == 1'd1) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage8) & (1'b0 == ap_block_pp0_stage8_subdone))) begin
        ap_condition_exit_pp0_iter0_stage8 = 1'b1;
    end else begin
        ap_condition_exit_pp0_iter0_stage8 = 1'b0;
    end
end

always @ (*) begin
    if (((ap_enable_reg_pp0_iter7 == 1'b1) & (icmp_ln76_reg_462_pp0_iter7_reg == 1'd1) & (1'b1 == ap_CS_fsm_pp0_stage3) & (1'b0 == ap_block_pp0_stage3_subdone))) begin
        ap_condition_exit_pp0_iter7_stage3 = 1'b1;
    end else begin
        ap_condition_exit_pp0_iter7_stage3 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_pp0_stage3) & (ap_loop_exit_ready_pp0_iter7_reg == 1'b1) & (1'b0 == ap_block_pp0_stage3_subdone))) begin
        ap_done_int = 1'b1;
    end else begin
        ap_done_int = ap_done_reg;
    end
end

always @ (*) begin
    if (~((ap_loop_exit_ready == 1'b0) & (ap_loop_exit_ready_pp0_iter7_reg == 1'b0) & (ap_loop_exit_ready_pp0_iter6_reg == 1'b0) & (ap_loop_exit_ready_pp0_iter5_reg == 1'b0) & (ap_loop_exit_ready_pp0_iter4_reg == 1'b0) & (ap_loop_exit_ready_pp0_iter3_reg == 1'b0) & (ap_loop_exit_ready_pp0_iter2_reg == 1'b0) & (ap_loop_exit_ready_pp0_iter1_reg == 1'b0))) begin
        ap_done_pending_pp0 = 1'b1;
    end else begin
        ap_done_pending_pp0 = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_pp0_stage0)) begin
        ap_enable_reg_pp0_iter0 = ap_start_int;
    end else begin
        ap_enable_reg_pp0_iter0 = ap_enable_reg_pp0_iter0_reg;
    end
end

always @ (*) begin
    if (((ap_idle_pp0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0) & (ap_start_int == 1'b0))) begin
        ap_idle = 1'b1;
    end else begin
        ap_idle = 1'b0;
    end
end

always @ (*) begin
    if (((ap_enable_reg_pp0_iter8 == 1'b0) & (ap_enable_reg_pp0_iter7 == 1'b0) & (ap_enable_reg_pp0_iter6 == 1'b0) & (ap_enable_reg_pp0_iter5 == 1'b0) & (ap_enable_reg_pp0_iter4 == 1'b0) & (ap_enable_reg_pp0_iter3 == 1'b0) & (ap_enable_reg_pp0_iter2 == 1'b0) & (ap_enable_reg_pp0_iter1 == 1'b0) & (ap_enable_reg_pp0_iter0 == 1'b0))) begin
        ap_idle_pp0 = 1'b1;
    end else begin
        ap_idle_pp0 = 1'b0;
    end
end

always @ (*) begin
    if (((ap_enable_reg_pp0_iter6 == 1'b0) & (ap_enable_reg_pp0_iter5 == 1'b0) & (ap_enable_reg_pp0_iter4 == 1'b0) & (ap_enable_reg_pp0_iter3 == 1'b0) & (ap_enable_reg_pp0_iter2 == 1'b0) & (ap_enable_reg_pp0_iter1 == 1'b0) & (ap_enable_reg_pp0_iter0 == 1'b0))) begin
        ap_idle_pp0_0to6 = 1'b1;
    end else begin
        ap_idle_pp0_0to6 = 1'b0;
    end
end

always @ (*) begin
    if (((ap_enable_reg_pp0_iter8 == 1'b0) & (ap_enable_reg_pp0_iter7 == 1'b0) & (ap_enable_reg_pp0_iter6 == 1'b0) & (ap_enable_reg_pp0_iter5 == 1'b0) & (ap_enable_reg_pp0_iter4 == 1'b0) & (ap_enable_reg_pp0_iter3 == 1'b0) & (ap_enable_reg_pp0_iter2 == 1'b0) & (ap_enable_reg_pp0_iter1 == 1'b0))) begin
        ap_idle_pp0_1to8 = 1'b1;
    end else begin
        ap_idle_pp0_1to8 = 1'b0;
    end
end

always @ (*) begin
    if (((ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage8) & (1'b0 == ap_block_pp0_stage8_subdone))) begin
        ap_ready_int = 1'b1;
    end else begin
        ap_ready_int = 1'b0;
    end
end

always @ (*) begin
    if (((ap_loop_init == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0) & (1'b0 == ap_block_pp0_stage0))) begin
        ap_sig_allocacmp_i_2 = 4'd0;
    end else begin
        ap_sig_allocacmp_i_2 = i_fu_100;
    end
end

always @ (*) begin
    if (((ap_loop_init == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0) & (1'b0 == ap_block_pp0_stage0))) begin
        ap_sig_allocacmp_indvar_flatten_load = 16'd0;
    end else begin
        ap_sig_allocacmp_indvar_flatten_load = indvar_flatten_fu_108;
    end
end

always @ (*) begin
    if (((ap_loop_init == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0) & (1'b0 == ap_block_pp0_stage0))) begin
        ap_sig_allocacmp_j_load = 8'd0;
    end else begin
        ap_sig_allocacmp_j_load = j_fu_104;
    end
end

always @ (*) begin
    if ((((1'b1 == ap_CS_fsm_pp0_stage8) & (1'b0 == ap_block_pp0_stage8_11001)) | ((1'b1 == ap_CS_fsm_pp0_stage7) & (1'b0 == ap_block_pp0_stage7_11001)) | ((1'b1 == ap_CS_fsm_pp0_stage2) & (1'b0 == ap_block_pp0_stage2_11001)) | ((1'b1 == ap_CS_fsm_pp0_stage1) & (1'b0 == ap_block_pp0_stage1_11001)) | ((1'b1 == ap_CS_fsm_pp0_stage0) & (1'b0 == ap_block_pp0_stage0_11001)))) begin
        grp_fu_189_ce = 1'b1;
    end else begin
        grp_fu_189_ce = 1'b0;
    end
end

always @ (*) begin
    if ((((1'b1 == ap_CS_fsm_pp0_stage6) & (1'b0 == ap_block_pp0_stage6_11001)) | ((1'b1 == ap_CS_fsm_pp0_stage5) & (1'b0 == ap_block_pp0_stage5_11001)) | ((1'b1 == ap_CS_fsm_pp0_stage4) & (1'b0 == ap_block_pp0_stage4_11001)) | ((1'b1 == ap_CS_fsm_pp0_stage3) & (1'b0 == ap_block_pp0_stage3_11001)) | ((1'b1 == ap_CS_fsm_pp0_stage2) & (1'b0 == ap_block_pp0_stage2_11001)) | ((1'b1 == ap_CS_fsm_pp0_stage1) & (1'b0 == ap_block_pp0_stage1_11001)))) begin
        grp_fu_193_ce = 1'b1;
    end else begin
        grp_fu_193_ce = 1'b0;
    end
end

always @ (*) begin
    if ((ap_enable_reg_pp0_iter0 == 1'b1)) begin
        if (((1'b1 == ap_CS_fsm_pp0_stage2) & (1'b0 == ap_block_pp0_stage2))) begin
            grp_fu_193_p0 = add_ln80_reg_481;
        end else if (((1'b1 == ap_CS_fsm_pp0_stage1) & (1'b0 == ap_block_pp0_stage1))) begin
            grp_fu_193_p0 = add36_i_reg_471;
        end else begin
            grp_fu_193_p0 = 'bx;
        end
    end else begin
        grp_fu_193_p0 = 'bx;
    end
end

always @ (*) begin
    if ((ap_enable_reg_pp0_iter0 == 1'b1)) begin
        if (((1'b1 == ap_CS_fsm_pp0_stage2) & (1'b0 == ap_block_pp0_stage2))) begin
            grp_fu_193_p1 = empty;
        end else if (((1'b1 == ap_CS_fsm_pp0_stage1) & (1'b0 == ap_block_pp0_stage1))) begin
            grp_fu_193_p1 = empty_27;
        end else begin
            grp_fu_193_p1 = 'bx;
        end
    end else begin
        grp_fu_193_p1 = 'bx;
    end
end

always @ (*) begin
    if ((((1'b1 == ap_CS_fsm_pp0_stage8) & (1'b0 == ap_block_pp0_stage8_11001_ignoreCallOp146)) | ((1'b1 == ap_CS_fsm_pp0_stage7) & (1'b0 == ap_block_pp0_stage7_11001_ignoreCallOp154)) | ((1'b1 == ap_CS_fsm_pp0_stage6) & (1'b0 == ap_block_pp0_stage6_11001_ignoreCallOp153)) | ((1'b1 == ap_CS_fsm_pp0_stage5) & (1'b0 == ap_block_pp0_stage5_11001_ignoreCallOp152)) | ((1'b1 == ap_CS_fsm_pp0_stage4) & (1'b0 == ap_block_pp0_stage4_11001_ignoreCallOp151)) | ((1'b1 == ap_CS_fsm_pp0_stage3) & (1'b0 == ap_block_pp0_stage3_11001_ignoreCallOp150)) | ((1'b1 == ap_CS_fsm_pp0_stage2) & (1'b0 == ap_block_pp0_stage2_11001_ignoreCallOp149)) | ((1'b1 == ap_CS_fsm_pp0_stage1) & (1'b0 == ap_block_pp0_stage1_11001_ignoreCallOp148)) | ((1'b1 == ap_CS_fsm_pp0_stage0) & (1'b0 == ap_block_pp0_stage0_11001_ignoreCallOp147)))) begin
        grp_mmatmul_block_q4_0_const_block_q8_0_const_s_fu_179_ap_ce = 1'b1;
    end else begin
        grp_mmatmul_block_q4_0_const_block_q8_0_const_s_fu_179_ap_ce = 1'b0;
    end
end

always @ (*) begin
    if ((((ap_enable_reg_pp0_iter3 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage8) & (1'b0 == ap_block_pp0_stage8)) | ((ap_enable_reg_pp0_iter3 == 1'b1) & (icmp_ln76_reg_462_pp0_iter2_reg == 1'd0) & (1'b1 == ap_CS_fsm_pp0_stage0) & (1'b0 == ap_block_pp0_stage0)) | ((ap_enable_reg_pp0_iter3 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage7) & (1'b0 == ap_block_pp0_stage7)) | ((ap_enable_reg_pp0_iter3 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage6) & (1'b0 == ap_block_pp0_stage6)) | ((ap_enable_reg_pp0_iter3 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage5) & (1'b0 == ap_block_pp0_stage5)) | ((ap_enable_reg_pp0_iter3 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage4) & (1'b0 == ap_block_pp0_stage4)) | ((ap_enable_reg_pp0_iter3 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage3) & (1'b0 == ap_block_pp0_stage3)) | ((ap_enable_reg_pp0_iter3 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage2) & (1'b0 == ap_block_pp0_stage2)) | ((ap_enable_reg_pp0_iter3 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage1) & (1'b0 == ap_block_pp0_stage1)) | ((ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage8) 
    & (1'b0 == ap_block_pp0_stage8)) | ((ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage7) & (1'b0 == ap_block_pp0_stage7)) | ((ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage6) & (1'b0 == ap_block_pp0_stage6)) | ((ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage5) & (1'b0 == ap_block_pp0_stage5)) | ((ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage4) & (1'b0 == ap_block_pp0_stage4)) | ((ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage3) & (1'b0 == ap_block_pp0_stage3)) | ((ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage2) & (1'b0 == ap_block_pp0_stage2)) | ((ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage1) & (1'b0 == ap_block_pp0_stage1)) | ((ap_enable_reg_pp0_iter6 == 1'b1) & (icmp_ln76_reg_462_pp0_iter5_reg == 1'd0) & (1'b1 == ap_CS_fsm_pp0_stage0) & (1'b0 == ap_block_pp0_stage0)) | ((ap_enable_reg_pp0_iter6 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage8) & (1'b0 == ap_block_pp0_stage8)) | ((ap_enable_reg_pp0_iter6 
    == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage7) & (1'b0 == ap_block_pp0_stage7)) | ((ap_enable_reg_pp0_iter6 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage6) & (1'b0 == ap_block_pp0_stage6)) | ((ap_enable_reg_pp0_iter6 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage5) & (1'b0 == ap_block_pp0_stage5)) | ((ap_enable_reg_pp0_iter6 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage4) & (1'b0 == ap_block_pp0_stage4)) | ((ap_enable_reg_pp0_iter6 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage3) & (1'b0 == ap_block_pp0_stage3)) | ((ap_enable_reg_pp0_iter6 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage2) & (1'b0 == ap_block_pp0_stage2)) | ((ap_enable_reg_pp0_iter6 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage1) & (1'b0 == ap_block_pp0_stage1)) | ((ap_enable_reg_pp0_iter5 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage8) & (1'b0 == ap_block_pp0_stage8)) | ((ap_enable_reg_pp0_iter5 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage7) & (1'b0 == ap_block_pp0_stage7)) | ((ap_enable_reg_pp0_iter5 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage6) & (1'b0 == ap_block_pp0_stage6)) | ((ap_enable_reg_pp0_iter5 
    == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage5) & (1'b0 == ap_block_pp0_stage5)) | ((ap_enable_reg_pp0_iter5 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage4) & (1'b0 == ap_block_pp0_stage4)) | ((ap_enable_reg_pp0_iter5 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage3) & (1'b0 == ap_block_pp0_stage3)) | ((ap_enable_reg_pp0_iter5 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage2) & (1'b0 == ap_block_pp0_stage2)) | ((ap_enable_reg_pp0_iter5 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage1) & (1'b0 == ap_block_pp0_stage1)) | ((icmp_ln76_reg_462 == 1'd0) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0) & (1'b0 == ap_block_pp0_stage0)) | ((icmp_ln76_reg_462 == 1'd0) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage8) & (1'b0 == ap_block_pp0_stage8)) | ((ap_enable_reg_pp0_iter4 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage8) & (1'b0 == ap_block_pp0_stage8)) | ((ap_enable_reg_pp0_iter4 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage7) & (1'b0 == ap_block_pp0_stage7)) | ((ap_enable_reg_pp0_iter4 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage6) 
    & (1'b0 == ap_block_pp0_stage6)) | ((ap_enable_reg_pp0_iter4 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage5) & (1'b0 == ap_block_pp0_stage5)) | ((ap_enable_reg_pp0_iter4 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage4) & (1'b0 == ap_block_pp0_stage4)) | ((ap_enable_reg_pp0_iter4 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage3) & (1'b0 == ap_block_pp0_stage3)) | ((ap_enable_reg_pp0_iter4 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage2) & (1'b0 == ap_block_pp0_stage2)) | ((ap_enable_reg_pp0_iter4 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage1) & (1'b0 == ap_block_pp0_stage1)) | ((icmp_ln76_reg_462_pp0_iter4_reg == 1'd0) & (ap_enable_reg_pp0_iter5 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0) & (1'b0 == ap_block_pp0_stage0)) | ((icmp_ln76_reg_462_pp0_iter3_reg == 1'd0) & (ap_enable_reg_pp0_iter4 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0) & (1'b0 == ap_block_pp0_stage0)) | ((ap_enable_reg_pp0_iter7 == 1'b1) & (icmp_ln76_reg_462_pp0_iter6_reg == 1'd0) & (1'b1 == ap_CS_fsm_pp0_stage0) & (1'b0 == ap_block_pp0_stage0)) | ((ap_enable_reg_pp0_iter7 == 1'b1) 
    & (1'b1 == ap_CS_fsm_pp0_stage6) & (1'b0 == ap_block_pp0_stage6)) | ((ap_enable_reg_pp0_iter7 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage5) & (1'b0 == ap_block_pp0_stage5)) | ((ap_enable_reg_pp0_iter7 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage4) & (1'b0 == ap_block_pp0_stage4)) | ((ap_enable_reg_pp0_iter7 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage3) & (1'b0 == ap_block_pp0_stage3)) | ((ap_enable_reg_pp0_iter7 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage2) & (1'b0 == ap_block_pp0_stage2)) | ((ap_enable_reg_pp0_iter7 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage1) & (1'b0 == ap_block_pp0_stage1)) | ((ap_enable_reg_pp0_iter2 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage8) & (1'b0 == ap_block_pp0_stage8)) | ((ap_enable_reg_pp0_iter2 == 1'b1) & (icmp_ln76_reg_462_pp0_iter1_reg == 1'd0) & (1'b1 == ap_CS_fsm_pp0_stage0) & (1'b0 == ap_block_pp0_stage0)) | ((ap_enable_reg_pp0_iter2 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage7) & (1'b0 == ap_block_pp0_stage7)) | ((ap_enable_reg_pp0_iter2 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage6) & (1'b0 == ap_block_pp0_stage6)) 
    | ((ap_enable_reg_pp0_iter2 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage5) & (1'b0 == ap_block_pp0_stage5)) | ((ap_enable_reg_pp0_iter2 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage4) & (1'b0 == ap_block_pp0_stage4)) | ((ap_enable_reg_pp0_iter2 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage3) & (1'b0 == ap_block_pp0_stage3)) | ((ap_enable_reg_pp0_iter2 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage2) & (1'b0 == ap_block_pp0_stage2)) | ((ap_enable_reg_pp0_iter2 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage1) & (1'b0 == ap_block_pp0_stage1)))) begin
        m_axi_A_ARVALID = grp_mmatmul_block_q4_0_const_block_q8_0_const_s_fu_179_m_axi_A_ARVALID;
    end else begin
        m_axi_A_ARVALID = 1'b0;
    end
end

always @ (*) begin
    if ((((ap_enable_reg_pp0_iter3 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage8) & (1'b0 == ap_block_pp0_stage8)) | ((ap_enable_reg_pp0_iter3 == 1'b1) & (icmp_ln76_reg_462_pp0_iter2_reg == 1'd0) & (1'b1 == ap_CS_fsm_pp0_stage0) & (1'b0 == ap_block_pp0_stage0)) | ((ap_enable_reg_pp0_iter3 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage7) & (1'b0 == ap_block_pp0_stage7)) | ((ap_enable_reg_pp0_iter3 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage6) & (1'b0 == ap_block_pp0_stage6)) | ((ap_enable_reg_pp0_iter3 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage5) & (1'b0 == ap_block_pp0_stage5)) | ((ap_enable_reg_pp0_iter3 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage4) & (1'b0 == ap_block_pp0_stage4)) | ((ap_enable_reg_pp0_iter3 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage3) & (1'b0 == ap_block_pp0_stage3)) | ((ap_enable_reg_pp0_iter3 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage2) & (1'b0 == ap_block_pp0_stage2)) | ((ap_enable_reg_pp0_iter3 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage1) & (1'b0 == ap_block_pp0_stage1)) | ((ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage8) 
    & (1'b0 == ap_block_pp0_stage8)) | ((ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage7) & (1'b0 == ap_block_pp0_stage7)) | ((ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage6) & (1'b0 == ap_block_pp0_stage6)) | ((ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage5) & (1'b0 == ap_block_pp0_stage5)) | ((ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage4) & (1'b0 == ap_block_pp0_stage4)) | ((ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage3) & (1'b0 == ap_block_pp0_stage3)) | ((ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage2) & (1'b0 == ap_block_pp0_stage2)) | ((ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage1) & (1'b0 == ap_block_pp0_stage1)) | ((ap_enable_reg_pp0_iter6 == 1'b1) & (icmp_ln76_reg_462_pp0_iter5_reg == 1'd0) & (1'b1 == ap_CS_fsm_pp0_stage0) & (1'b0 == ap_block_pp0_stage0)) | ((ap_enable_reg_pp0_iter6 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage8) & (1'b0 == ap_block_pp0_stage8)) | ((ap_enable_reg_pp0_iter6 
    == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage7) & (1'b0 == ap_block_pp0_stage7)) | ((ap_enable_reg_pp0_iter6 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage6) & (1'b0 == ap_block_pp0_stage6)) | ((ap_enable_reg_pp0_iter6 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage5) & (1'b0 == ap_block_pp0_stage5)) | ((ap_enable_reg_pp0_iter6 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage4) & (1'b0 == ap_block_pp0_stage4)) | ((ap_enable_reg_pp0_iter6 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage3) & (1'b0 == ap_block_pp0_stage3)) | ((ap_enable_reg_pp0_iter6 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage2) & (1'b0 == ap_block_pp0_stage2)) | ((ap_enable_reg_pp0_iter6 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage1) & (1'b0 == ap_block_pp0_stage1)) | ((ap_enable_reg_pp0_iter5 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage8) & (1'b0 == ap_block_pp0_stage8)) | ((ap_enable_reg_pp0_iter5 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage7) & (1'b0 == ap_block_pp0_stage7)) | ((ap_enable_reg_pp0_iter5 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage6) & (1'b0 == ap_block_pp0_stage6)) | ((ap_enable_reg_pp0_iter5 
    == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage5) & (1'b0 == ap_block_pp0_stage5)) | ((ap_enable_reg_pp0_iter5 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage4) & (1'b0 == ap_block_pp0_stage4)) | ((ap_enable_reg_pp0_iter5 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage3) & (1'b0 == ap_block_pp0_stage3)) | ((ap_enable_reg_pp0_iter5 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage2) & (1'b0 == ap_block_pp0_stage2)) | ((ap_enable_reg_pp0_iter5 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage1) & (1'b0 == ap_block_pp0_stage1)) | ((icmp_ln76_reg_462 == 1'd0) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0) & (1'b0 == ap_block_pp0_stage0)) | ((icmp_ln76_reg_462 == 1'd0) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage8) & (1'b0 == ap_block_pp0_stage8)) | ((ap_enable_reg_pp0_iter4 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage8) & (1'b0 == ap_block_pp0_stage8)) | ((ap_enable_reg_pp0_iter4 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage7) & (1'b0 == ap_block_pp0_stage7)) | ((ap_enable_reg_pp0_iter4 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage6) 
    & (1'b0 == ap_block_pp0_stage6)) | ((ap_enable_reg_pp0_iter4 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage5) & (1'b0 == ap_block_pp0_stage5)) | ((ap_enable_reg_pp0_iter4 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage4) & (1'b0 == ap_block_pp0_stage4)) | ((ap_enable_reg_pp0_iter4 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage3) & (1'b0 == ap_block_pp0_stage3)) | ((ap_enable_reg_pp0_iter4 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage2) & (1'b0 == ap_block_pp0_stage2)) | ((ap_enable_reg_pp0_iter4 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage1) & (1'b0 == ap_block_pp0_stage1)) | ((icmp_ln76_reg_462_pp0_iter4_reg == 1'd0) & (ap_enable_reg_pp0_iter5 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0) & (1'b0 == ap_block_pp0_stage0)) | ((icmp_ln76_reg_462_pp0_iter3_reg == 1'd0) & (ap_enable_reg_pp0_iter4 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0) & (1'b0 == ap_block_pp0_stage0)) | ((ap_enable_reg_pp0_iter7 == 1'b1) & (icmp_ln76_reg_462_pp0_iter6_reg == 1'd0) & (1'b1 == ap_CS_fsm_pp0_stage0) & (1'b0 == ap_block_pp0_stage0)) | ((ap_enable_reg_pp0_iter7 == 1'b1) 
    & (1'b1 == ap_CS_fsm_pp0_stage6) & (1'b0 == ap_block_pp0_stage6)) | ((ap_enable_reg_pp0_iter7 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage5) & (1'b0 == ap_block_pp0_stage5)) | ((ap_enable_reg_pp0_iter7 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage4) & (1'b0 == ap_block_pp0_stage4)) | ((ap_enable_reg_pp0_iter7 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage3) & (1'b0 == ap_block_pp0_stage3)) | ((ap_enable_reg_pp0_iter7 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage2) & (1'b0 == ap_block_pp0_stage2)) | ((ap_enable_reg_pp0_iter7 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage1) & (1'b0 == ap_block_pp0_stage1)) | ((ap_enable_reg_pp0_iter2 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage8) & (1'b0 == ap_block_pp0_stage8)) | ((ap_enable_reg_pp0_iter2 == 1'b1) & (icmp_ln76_reg_462_pp0_iter1_reg == 1'd0) & (1'b1 == ap_CS_fsm_pp0_stage0) & (1'b0 == ap_block_pp0_stage0)) | ((ap_enable_reg_pp0_iter2 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage7) & (1'b0 == ap_block_pp0_stage7)) | ((ap_enable_reg_pp0_iter2 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage6) & (1'b0 == ap_block_pp0_stage6)) 
    | ((ap_enable_reg_pp0_iter2 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage5) & (1'b0 == ap_block_pp0_stage5)) | ((ap_enable_reg_pp0_iter2 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage4) & (1'b0 == ap_block_pp0_stage4)) | ((ap_enable_reg_pp0_iter2 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage3) & (1'b0 == ap_block_pp0_stage3)) | ((ap_enable_reg_pp0_iter2 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage2) & (1'b0 == ap_block_pp0_stage2)) | ((ap_enable_reg_pp0_iter2 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage1) & (1'b0 == ap_block_pp0_stage1)))) begin
        m_axi_A_RREADY = grp_mmatmul_block_q4_0_const_block_q8_0_const_s_fu_179_m_axi_A_RREADY;
    end else begin
        m_axi_A_RREADY = 1'b0;
    end
end

always @ (*) begin
    if ((((ap_enable_reg_pp0_iter3 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage8) & (1'b0 == ap_block_pp0_stage8)) | ((ap_enable_reg_pp0_iter3 == 1'b1) & (icmp_ln76_reg_462_pp0_iter2_reg == 1'd0) & (1'b1 == ap_CS_fsm_pp0_stage0) & (1'b0 == ap_block_pp0_stage0)) | ((ap_enable_reg_pp0_iter3 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage7) & (1'b0 == ap_block_pp0_stage7)) | ((ap_enable_reg_pp0_iter3 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage6) & (1'b0 == ap_block_pp0_stage6)) | ((ap_enable_reg_pp0_iter3 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage5) & (1'b0 == ap_block_pp0_stage5)) | ((ap_enable_reg_pp0_iter3 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage4) & (1'b0 == ap_block_pp0_stage4)) | ((ap_enable_reg_pp0_iter3 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage3) & (1'b0 == ap_block_pp0_stage3)) | ((ap_enable_reg_pp0_iter3 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage2) & (1'b0 == ap_block_pp0_stage2)) | ((ap_enable_reg_pp0_iter3 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage1) & (1'b0 == ap_block_pp0_stage1)) | ((ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage8) 
    & (1'b0 == ap_block_pp0_stage8)) | ((ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage7) & (1'b0 == ap_block_pp0_stage7)) | ((ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage6) & (1'b0 == ap_block_pp0_stage6)) | ((ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage5) & (1'b0 == ap_block_pp0_stage5)) | ((ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage4) & (1'b0 == ap_block_pp0_stage4)) | ((ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage3) & (1'b0 == ap_block_pp0_stage3)) | ((ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage2) & (1'b0 == ap_block_pp0_stage2)) | ((ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage1) & (1'b0 == ap_block_pp0_stage1)) | ((ap_enable_reg_pp0_iter6 == 1'b1) & (icmp_ln76_reg_462_pp0_iter5_reg == 1'd0) & (1'b1 == ap_CS_fsm_pp0_stage0) & (1'b0 == ap_block_pp0_stage0)) | ((ap_enable_reg_pp0_iter6 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage8) & (1'b0 == ap_block_pp0_stage8)) | ((ap_enable_reg_pp0_iter6 
    == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage7) & (1'b0 == ap_block_pp0_stage7)) | ((ap_enable_reg_pp0_iter6 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage6) & (1'b0 == ap_block_pp0_stage6)) | ((ap_enable_reg_pp0_iter6 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage5) & (1'b0 == ap_block_pp0_stage5)) | ((ap_enable_reg_pp0_iter6 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage4) & (1'b0 == ap_block_pp0_stage4)) | ((ap_enable_reg_pp0_iter6 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage3) & (1'b0 == ap_block_pp0_stage3)) | ((ap_enable_reg_pp0_iter6 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage2) & (1'b0 == ap_block_pp0_stage2)) | ((ap_enable_reg_pp0_iter6 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage1) & (1'b0 == ap_block_pp0_stage1)) | ((ap_enable_reg_pp0_iter5 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage8) & (1'b0 == ap_block_pp0_stage8)) | ((ap_enable_reg_pp0_iter5 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage7) & (1'b0 == ap_block_pp0_stage7)) | ((ap_enable_reg_pp0_iter5 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage6) & (1'b0 == ap_block_pp0_stage6)) | ((ap_enable_reg_pp0_iter5 
    == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage5) & (1'b0 == ap_block_pp0_stage5)) | ((ap_enable_reg_pp0_iter5 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage4) & (1'b0 == ap_block_pp0_stage4)) | ((ap_enable_reg_pp0_iter5 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage3) & (1'b0 == ap_block_pp0_stage3)) | ((ap_enable_reg_pp0_iter5 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage2) & (1'b0 == ap_block_pp0_stage2)) | ((ap_enable_reg_pp0_iter5 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage1) & (1'b0 == ap_block_pp0_stage1)) | ((icmp_ln76_reg_462 == 1'd0) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0) & (1'b0 == ap_block_pp0_stage0)) | ((icmp_ln76_reg_462 == 1'd0) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage8) & (1'b0 == ap_block_pp0_stage8)) | ((ap_enable_reg_pp0_iter4 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage8) & (1'b0 == ap_block_pp0_stage8)) | ((ap_enable_reg_pp0_iter4 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage7) & (1'b0 == ap_block_pp0_stage7)) | ((ap_enable_reg_pp0_iter4 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage6) 
    & (1'b0 == ap_block_pp0_stage6)) | ((ap_enable_reg_pp0_iter4 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage5) & (1'b0 == ap_block_pp0_stage5)) | ((ap_enable_reg_pp0_iter4 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage4) & (1'b0 == ap_block_pp0_stage4)) | ((ap_enable_reg_pp0_iter4 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage3) & (1'b0 == ap_block_pp0_stage3)) | ((ap_enable_reg_pp0_iter4 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage2) & (1'b0 == ap_block_pp0_stage2)) | ((ap_enable_reg_pp0_iter4 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage1) & (1'b0 == ap_block_pp0_stage1)) | ((icmp_ln76_reg_462_pp0_iter4_reg == 1'd0) & (ap_enable_reg_pp0_iter5 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0) & (1'b0 == ap_block_pp0_stage0)) | ((icmp_ln76_reg_462_pp0_iter3_reg == 1'd0) & (ap_enable_reg_pp0_iter4 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0) & (1'b0 == ap_block_pp0_stage0)) | ((ap_enable_reg_pp0_iter7 == 1'b1) & (icmp_ln76_reg_462_pp0_iter6_reg == 1'd0) & (1'b1 == ap_CS_fsm_pp0_stage0) & (1'b0 == ap_block_pp0_stage0)) | ((ap_enable_reg_pp0_iter7 == 1'b1) 
    & (1'b1 == ap_CS_fsm_pp0_stage6) & (1'b0 == ap_block_pp0_stage6)) | ((ap_enable_reg_pp0_iter7 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage5) & (1'b0 == ap_block_pp0_stage5)) | ((ap_enable_reg_pp0_iter7 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage4) & (1'b0 == ap_block_pp0_stage4)) | ((ap_enable_reg_pp0_iter7 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage3) & (1'b0 == ap_block_pp0_stage3)) | ((ap_enable_reg_pp0_iter7 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage2) & (1'b0 == ap_block_pp0_stage2)) | ((ap_enable_reg_pp0_iter7 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage1) & (1'b0 == ap_block_pp0_stage1)) | ((ap_enable_reg_pp0_iter2 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage8) & (1'b0 == ap_block_pp0_stage8)) | ((ap_enable_reg_pp0_iter2 == 1'b1) & (icmp_ln76_reg_462_pp0_iter1_reg == 1'd0) & (1'b1 == ap_CS_fsm_pp0_stage0) & (1'b0 == ap_block_pp0_stage0)) | ((ap_enable_reg_pp0_iter2 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage7) & (1'b0 == ap_block_pp0_stage7)) | ((ap_enable_reg_pp0_iter2 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage6) & (1'b0 == ap_block_pp0_stage6)) 
    | ((ap_enable_reg_pp0_iter2 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage5) & (1'b0 == ap_block_pp0_stage5)) | ((ap_enable_reg_pp0_iter2 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage4) & (1'b0 == ap_block_pp0_stage4)) | ((ap_enable_reg_pp0_iter2 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage3) & (1'b0 == ap_block_pp0_stage3)) | ((ap_enable_reg_pp0_iter2 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage2) & (1'b0 == ap_block_pp0_stage2)) | ((ap_enable_reg_pp0_iter2 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage1) & (1'b0 == ap_block_pp0_stage1)))) begin
        m_axi_B_ARVALID = grp_mmatmul_block_q4_0_const_block_q8_0_const_s_fu_179_m_axi_B_ARVALID;
    end else begin
        m_axi_B_ARVALID = 1'b0;
    end
end

always @ (*) begin
    if ((((ap_enable_reg_pp0_iter3 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage8) & (1'b0 == ap_block_pp0_stage8)) | ((ap_enable_reg_pp0_iter3 == 1'b1) & (icmp_ln76_reg_462_pp0_iter2_reg == 1'd0) & (1'b1 == ap_CS_fsm_pp0_stage0) & (1'b0 == ap_block_pp0_stage0)) | ((ap_enable_reg_pp0_iter3 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage7) & (1'b0 == ap_block_pp0_stage7)) | ((ap_enable_reg_pp0_iter3 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage6) & (1'b0 == ap_block_pp0_stage6)) | ((ap_enable_reg_pp0_iter3 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage5) & (1'b0 == ap_block_pp0_stage5)) | ((ap_enable_reg_pp0_iter3 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage4) & (1'b0 == ap_block_pp0_stage4)) | ((ap_enable_reg_pp0_iter3 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage3) & (1'b0 == ap_block_pp0_stage3)) | ((ap_enable_reg_pp0_iter3 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage2) & (1'b0 == ap_block_pp0_stage2)) | ((ap_enable_reg_pp0_iter3 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage1) & (1'b0 == ap_block_pp0_stage1)) | ((ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage8) 
    & (1'b0 == ap_block_pp0_stage8)) | ((ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage7) & (1'b0 == ap_block_pp0_stage7)) | ((ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage6) & (1'b0 == ap_block_pp0_stage6)) | ((ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage5) & (1'b0 == ap_block_pp0_stage5)) | ((ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage4) & (1'b0 == ap_block_pp0_stage4)) | ((ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage3) & (1'b0 == ap_block_pp0_stage3)) | ((ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage2) & (1'b0 == ap_block_pp0_stage2)) | ((ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage1) & (1'b0 == ap_block_pp0_stage1)) | ((ap_enable_reg_pp0_iter6 == 1'b1) & (icmp_ln76_reg_462_pp0_iter5_reg == 1'd0) & (1'b1 == ap_CS_fsm_pp0_stage0) & (1'b0 == ap_block_pp0_stage0)) | ((ap_enable_reg_pp0_iter6 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage8) & (1'b0 == ap_block_pp0_stage8)) | ((ap_enable_reg_pp0_iter6 
    == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage7) & (1'b0 == ap_block_pp0_stage7)) | ((ap_enable_reg_pp0_iter6 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage6) & (1'b0 == ap_block_pp0_stage6)) | ((ap_enable_reg_pp0_iter6 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage5) & (1'b0 == ap_block_pp0_stage5)) | ((ap_enable_reg_pp0_iter6 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage4) & (1'b0 == ap_block_pp0_stage4)) | ((ap_enable_reg_pp0_iter6 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage3) & (1'b0 == ap_block_pp0_stage3)) | ((ap_enable_reg_pp0_iter6 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage2) & (1'b0 == ap_block_pp0_stage2)) | ((ap_enable_reg_pp0_iter6 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage1) & (1'b0 == ap_block_pp0_stage1)) | ((ap_enable_reg_pp0_iter5 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage8) & (1'b0 == ap_block_pp0_stage8)) | ((ap_enable_reg_pp0_iter5 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage7) & (1'b0 == ap_block_pp0_stage7)) | ((ap_enable_reg_pp0_iter5 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage6) & (1'b0 == ap_block_pp0_stage6)) | ((ap_enable_reg_pp0_iter5 
    == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage5) & (1'b0 == ap_block_pp0_stage5)) | ((ap_enable_reg_pp0_iter5 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage4) & (1'b0 == ap_block_pp0_stage4)) | ((ap_enable_reg_pp0_iter5 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage3) & (1'b0 == ap_block_pp0_stage3)) | ((ap_enable_reg_pp0_iter5 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage2) & (1'b0 == ap_block_pp0_stage2)) | ((ap_enable_reg_pp0_iter5 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage1) & (1'b0 == ap_block_pp0_stage1)) | ((icmp_ln76_reg_462 == 1'd0) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0) & (1'b0 == ap_block_pp0_stage0)) | ((icmp_ln76_reg_462 == 1'd0) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage8) & (1'b0 == ap_block_pp0_stage8)) | ((ap_enable_reg_pp0_iter4 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage8) & (1'b0 == ap_block_pp0_stage8)) | ((ap_enable_reg_pp0_iter4 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage7) & (1'b0 == ap_block_pp0_stage7)) | ((ap_enable_reg_pp0_iter4 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage6) 
    & (1'b0 == ap_block_pp0_stage6)) | ((ap_enable_reg_pp0_iter4 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage5) & (1'b0 == ap_block_pp0_stage5)) | ((ap_enable_reg_pp0_iter4 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage4) & (1'b0 == ap_block_pp0_stage4)) | ((ap_enable_reg_pp0_iter4 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage3) & (1'b0 == ap_block_pp0_stage3)) | ((ap_enable_reg_pp0_iter4 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage2) & (1'b0 == ap_block_pp0_stage2)) | ((ap_enable_reg_pp0_iter4 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage1) & (1'b0 == ap_block_pp0_stage1)) | ((icmp_ln76_reg_462_pp0_iter4_reg == 1'd0) & (ap_enable_reg_pp0_iter5 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0) & (1'b0 == ap_block_pp0_stage0)) | ((icmp_ln76_reg_462_pp0_iter3_reg == 1'd0) & (ap_enable_reg_pp0_iter4 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0) & (1'b0 == ap_block_pp0_stage0)) | ((ap_enable_reg_pp0_iter7 == 1'b1) & (icmp_ln76_reg_462_pp0_iter6_reg == 1'd0) & (1'b1 == ap_CS_fsm_pp0_stage0) & (1'b0 == ap_block_pp0_stage0)) | ((ap_enable_reg_pp0_iter7 == 1'b1) 
    & (1'b1 == ap_CS_fsm_pp0_stage6) & (1'b0 == ap_block_pp0_stage6)) | ((ap_enable_reg_pp0_iter7 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage5) & (1'b0 == ap_block_pp0_stage5)) | ((ap_enable_reg_pp0_iter7 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage4) & (1'b0 == ap_block_pp0_stage4)) | ((ap_enable_reg_pp0_iter7 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage3) & (1'b0 == ap_block_pp0_stage3)) | ((ap_enable_reg_pp0_iter7 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage2) & (1'b0 == ap_block_pp0_stage2)) | ((ap_enable_reg_pp0_iter7 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage1) & (1'b0 == ap_block_pp0_stage1)) | ((ap_enable_reg_pp0_iter2 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage8) & (1'b0 == ap_block_pp0_stage8)) | ((ap_enable_reg_pp0_iter2 == 1'b1) & (icmp_ln76_reg_462_pp0_iter1_reg == 1'd0) & (1'b1 == ap_CS_fsm_pp0_stage0) & (1'b0 == ap_block_pp0_stage0)) | ((ap_enable_reg_pp0_iter2 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage7) & (1'b0 == ap_block_pp0_stage7)) | ((ap_enable_reg_pp0_iter2 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage6) & (1'b0 == ap_block_pp0_stage6)) 
    | ((ap_enable_reg_pp0_iter2 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage5) & (1'b0 == ap_block_pp0_stage5)) | ((ap_enable_reg_pp0_iter2 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage4) & (1'b0 == ap_block_pp0_stage4)) | ((ap_enable_reg_pp0_iter2 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage3) & (1'b0 == ap_block_pp0_stage3)) | ((ap_enable_reg_pp0_iter2 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage2) & (1'b0 == ap_block_pp0_stage2)) | ((ap_enable_reg_pp0_iter2 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage1) & (1'b0 == ap_block_pp0_stage1)))) begin
        m_axi_B_RREADY = grp_mmatmul_block_q4_0_const_block_q8_0_const_s_fu_179_m_axi_B_RREADY;
    end else begin
        m_axi_B_RREADY = 1'b0;
    end
end

always @ (*) begin
    case (ap_CS_fsm)
        ap_ST_fsm_pp0_stage0 : begin
            if ((~((ap_start_int == 1'b0) & (ap_done_pending_pp0 == 1'b0) & (ap_idle_pp0_1to8 == 1'b1)) & (1'b0 == ap_block_pp0_stage0_subdone))) begin
                ap_NS_fsm = ap_ST_fsm_pp0_stage1;
            end else begin
                ap_NS_fsm = ap_ST_fsm_pp0_stage0;
            end
        end
        ap_ST_fsm_pp0_stage1 : begin
            if ((1'b0 == ap_block_pp0_stage1_subdone)) begin
                ap_NS_fsm = ap_ST_fsm_pp0_stage2;
            end else begin
                ap_NS_fsm = ap_ST_fsm_pp0_stage1;
            end
        end
        ap_ST_fsm_pp0_stage2 : begin
            if ((1'b0 == ap_block_pp0_stage2_subdone)) begin
                ap_NS_fsm = ap_ST_fsm_pp0_stage3;
            end else begin
                ap_NS_fsm = ap_ST_fsm_pp0_stage2;
            end
        end
        ap_ST_fsm_pp0_stage3 : begin
            if (((1'b1 == ap_condition_exit_pp0_iter7_stage3) & (ap_idle_pp0_0to6 == 1'b1))) begin
                ap_NS_fsm = ap_ST_fsm_pp0_stage0;
            end else if ((1'b0 == ap_block_pp0_stage3_subdone)) begin
                ap_NS_fsm = ap_ST_fsm_pp0_stage4;
            end else begin
                ap_NS_fsm = ap_ST_fsm_pp0_stage3;
            end
        end
        ap_ST_fsm_pp0_stage4 : begin
            if ((1'b0 == ap_block_pp0_stage4_subdone)) begin
                ap_NS_fsm = ap_ST_fsm_pp0_stage5;
            end else begin
                ap_NS_fsm = ap_ST_fsm_pp0_stage4;
            end
        end
        ap_ST_fsm_pp0_stage5 : begin
            if ((1'b0 == ap_block_pp0_stage5_subdone)) begin
                ap_NS_fsm = ap_ST_fsm_pp0_stage6;
            end else begin
                ap_NS_fsm = ap_ST_fsm_pp0_stage5;
            end
        end
        ap_ST_fsm_pp0_stage6 : begin
            if ((1'b0 == ap_block_pp0_stage6_subdone)) begin
                ap_NS_fsm = ap_ST_fsm_pp0_stage7;
            end else begin
                ap_NS_fsm = ap_ST_fsm_pp0_stage6;
            end
        end
        ap_ST_fsm_pp0_stage7 : begin
            if ((1'b0 == ap_block_pp0_stage7_subdone)) begin
                ap_NS_fsm = ap_ST_fsm_pp0_stage8;
            end else begin
                ap_NS_fsm = ap_ST_fsm_pp0_stage7;
            end
        end
        ap_ST_fsm_pp0_stage8 : begin
            if ((1'b0 == ap_block_pp0_stage8_subdone)) begin
                ap_NS_fsm = ap_ST_fsm_pp0_stage0;
            end else begin
                ap_NS_fsm = ap_ST_fsm_pp0_stage8;
            end
        end
        default : begin
            ap_NS_fsm = 'bx;
        end
    endcase
end

assign Cv_d0 = add41_i_reg_511;

assign aa_fu_401_p2 = (add_ln80_2_fu_396_p2 + shl_ln_fu_380_p3);

assign add36_i_fu_304_p2 = (zext_ln76_fu_300_p1 + add_ln70);

assign add_ln76_fu_247_p2 = (ap_sig_allocacmp_indvar_flatten_load + 16'd1);

assign add_ln80_2_fu_396_p2 = (shl_ln80_1_fu_388_p3 + A_offset);

assign add_ln80_fu_340_p2 = (zext_ln78_1_fu_337_p1 + add_ln69);

assign add_ln83_fu_310_p2 = (sub_ln83_fu_294_p2 + select_ln76_fu_262_p3);

assign ap_CS_fsm_pp0_stage0 = ap_CS_fsm[32'd0];

assign ap_CS_fsm_pp0_stage1 = ap_CS_fsm[32'd1];

assign ap_CS_fsm_pp0_stage2 = ap_CS_fsm[32'd2];

assign ap_CS_fsm_pp0_stage3 = ap_CS_fsm[32'd3];

assign ap_CS_fsm_pp0_stage4 = ap_CS_fsm[32'd4];

assign ap_CS_fsm_pp0_stage5 = ap_CS_fsm[32'd5];

assign ap_CS_fsm_pp0_stage6 = ap_CS_fsm[32'd6];

assign ap_CS_fsm_pp0_stage7 = ap_CS_fsm[32'd7];

assign ap_CS_fsm_pp0_stage8 = ap_CS_fsm[32'd8];

assign ap_block_pp0_stage0 = ~(1'b1 == 1'b1);

always @ (*) begin
    ap_block_pp0_stage0_11001 = (((ap_enable_reg_pp0_iter3 == 1'b1) & (1'b1 == ap_block_state28_pp0_stage0_iter3)) | ((ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_block_state10_pp0_stage0_iter1)) | ((ap_enable_reg_pp0_iter2 == 1'b1) & (1'b1 == ap_block_state19_pp0_stage0_iter2)));
end

assign ap_block_pp0_stage0_11001_ignoreCallOp147 = ~(1'b1 == 1'b1);

always @ (*) begin
    ap_block_pp0_stage0_subdone = (((ap_enable_reg_pp0_iter3 == 1'b1) & (1'b1 == ap_block_state28_pp0_stage0_iter3)) | ((ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_block_state10_pp0_stage0_iter1)) | ((ap_enable_reg_pp0_iter2 == 1'b1) & (1'b1 == ap_block_state19_pp0_stage0_iter2)));
end

assign ap_block_pp0_stage1 = ~(1'b1 == 1'b1);

always @ (*) begin
    ap_block_pp0_stage1_11001 = (((ap_enable_reg_pp0_iter3 == 1'b1) & (1'b1 == ap_block_state29_pp0_stage1_iter3)) | ((ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_block_state11_pp0_stage1_iter1)) | ((ap_enable_reg_pp0_iter2 == 1'b1) & (1'b1 == ap_block_state20_pp0_stage1_iter2)));
end

assign ap_block_pp0_stage1_11001_ignoreCallOp148 = ~(1'b1 == 1'b1);

always @ (*) begin
    ap_block_pp0_stage1_subdone = (((ap_enable_reg_pp0_iter3 == 1'b1) & (1'b1 == ap_block_state29_pp0_stage1_iter3)) | ((ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_block_state11_pp0_stage1_iter1)) | ((ap_enable_reg_pp0_iter2 == 1'b1) & (1'b1 == ap_block_state20_pp0_stage1_iter2)));
end

assign ap_block_pp0_stage2 = ~(1'b1 == 1'b1);

always @ (*) begin
    ap_block_pp0_stage2_11001 = (((ap_enable_reg_pp0_iter3 == 1'b1) & (1'b1 == ap_block_state30_pp0_stage2_iter3)) | ((ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_block_state12_pp0_stage2_iter1)) | ((ap_enable_reg_pp0_iter2 == 1'b1) & (1'b1 == ap_block_state21_pp0_stage2_iter2)));
end

assign ap_block_pp0_stage2_11001_ignoreCallOp149 = ~(1'b1 == 1'b1);

always @ (*) begin
    ap_block_pp0_stage2_subdone = (((ap_enable_reg_pp0_iter3 == 1'b1) & (1'b1 == ap_block_state30_pp0_stage2_iter3)) | ((ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_block_state12_pp0_stage2_iter1)) | ((ap_enable_reg_pp0_iter2 == 1'b1) & (1'b1 == ap_block_state21_pp0_stage2_iter2)));
end

assign ap_block_pp0_stage3 = ~(1'b1 == 1'b1);

always @ (*) begin
    ap_block_pp0_stage3_11001 = (((ap_enable_reg_pp0_iter3 == 1'b1) & (1'b1 == ap_block_state31_pp0_stage3_iter3)) | ((ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_block_state13_pp0_stage3_iter1)) | ((ap_enable_reg_pp0_iter2 == 1'b1) & (1'b1 == ap_block_state22_pp0_stage3_iter2)));
end

assign ap_block_pp0_stage3_11001_ignoreCallOp150 = ~(1'b1 == 1'b1);

always @ (*) begin
    ap_block_pp0_stage3_subdone = (((ap_enable_reg_pp0_iter3 == 1'b1) & (1'b1 == ap_block_state31_pp0_stage3_iter3)) | ((ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_block_state13_pp0_stage3_iter1)) | ((ap_enable_reg_pp0_iter2 == 1'b1) & (1'b1 == ap_block_state22_pp0_stage3_iter2)));
end

assign ap_block_pp0_stage4 = ~(1'b1 == 1'b1);

always @ (*) begin
    ap_block_pp0_stage4_11001 = (((ap_enable_reg_pp0_iter3 == 1'b1) & (1'b1 == ap_block_state32_pp0_stage4_iter3)) | ((ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_block_state14_pp0_stage4_iter1)) | ((ap_enable_reg_pp0_iter2 == 1'b1) & (1'b1 == ap_block_state23_pp0_stage4_iter2)));
end

assign ap_block_pp0_stage4_11001_ignoreCallOp151 = ~(1'b1 == 1'b1);

always @ (*) begin
    ap_block_pp0_stage4_subdone = (((ap_enable_reg_pp0_iter3 == 1'b1) & (1'b1 == ap_block_state32_pp0_stage4_iter3)) | ((ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_block_state14_pp0_stage4_iter1)) | ((ap_enable_reg_pp0_iter2 == 1'b1) & (1'b1 == ap_block_state23_pp0_stage4_iter2)));
end

assign ap_block_pp0_stage5 = ~(1'b1 == 1'b1);

always @ (*) begin
    ap_block_pp0_stage5_11001 = (((ap_enable_reg_pp0_iter3 == 1'b1) & (1'b1 == ap_block_state33_pp0_stage5_iter3)) | ((ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_block_state15_pp0_stage5_iter1)) | ((ap_enable_reg_pp0_iter2 == 1'b1) & (1'b1 == ap_block_state24_pp0_stage5_iter2)));
end

assign ap_block_pp0_stage5_11001_ignoreCallOp152 = ~(1'b1 == 1'b1);

always @ (*) begin
    ap_block_pp0_stage5_subdone = (((ap_enable_reg_pp0_iter3 == 1'b1) & (1'b1 == ap_block_state33_pp0_stage5_iter3)) | ((ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_block_state15_pp0_stage5_iter1)) | ((ap_enable_reg_pp0_iter2 == 1'b1) & (1'b1 == ap_block_state24_pp0_stage5_iter2)));
end

assign ap_block_pp0_stage6 = ~(1'b1 == 1'b1);

always @ (*) begin
    ap_block_pp0_stage6_11001 = (((ap_enable_reg_pp0_iter3 == 1'b1) & (1'b1 == ap_block_state34_pp0_stage6_iter3)) | ((ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_block_state16_pp0_stage6_iter1)) | ((ap_enable_reg_pp0_iter2 == 1'b1) & (1'b1 == ap_block_state25_pp0_stage6_iter2)));
end

assign ap_block_pp0_stage6_11001_ignoreCallOp153 = ~(1'b1 == 1'b1);

always @ (*) begin
    ap_block_pp0_stage6_subdone = (((ap_enable_reg_pp0_iter3 == 1'b1) & (1'b1 == ap_block_state34_pp0_stage6_iter3)) | ((ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_block_state16_pp0_stage6_iter1)) | ((ap_enable_reg_pp0_iter2 == 1'b1) & (1'b1 == ap_block_state25_pp0_stage6_iter2)));
end

assign ap_block_pp0_stage7 = ~(1'b1 == 1'b1);

always @ (*) begin
    ap_block_pp0_stage7_11001 = (((ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_block_state17_pp0_stage7_iter1)) | ((ap_enable_reg_pp0_iter2 == 1'b1) & (1'b1 == ap_block_state26_pp0_stage7_iter2)));
end

assign ap_block_pp0_stage7_11001_ignoreCallOp154 = ~(1'b1 == 1'b1);

always @ (*) begin
    ap_block_pp0_stage7_subdone = (((ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_block_state17_pp0_stage7_iter1)) | ((ap_enable_reg_pp0_iter2 == 1'b1) & (1'b1 == ap_block_state26_pp0_stage7_iter2)));
end

assign ap_block_pp0_stage8 = ~(1'b1 == 1'b1);

always @ (*) begin
    ap_block_pp0_stage8_11001 = (((ap_enable_reg_pp0_iter3 == 1'b1) & (1'b1 == ap_block_state36_pp0_stage8_iter3)) | ((ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_block_state18_pp0_stage8_iter1)) | ((ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_block_state9_pp0_stage8_iter0)));
end

assign ap_block_pp0_stage8_11001_ignoreCallOp146 = ~(1'b1 == 1'b1);

always @ (*) begin
    ap_block_pp0_stage8_subdone = (((ap_enable_reg_pp0_iter3 == 1'b1) & (1'b1 == ap_block_state36_pp0_stage8_iter3)) | ((ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_block_state18_pp0_stage8_iter1)) | ((ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_block_state9_pp0_stage8_iter0)));
end

always @ (*) begin
    ap_block_state10_pp0_stage0_iter1 = ((icmp_ln76_reg_462 == 1'd0) & (((grp_mmatmul_block_q4_0_const_block_q8_0_const_s_fu_179_B_blk_n_R & grp_mmatmul_block_q4_0_const_block_q8_0_const_s_fu_179_B_blk_n_AR) == 1'b0) | ((grp_mmatmul_block_q4_0_const_block_q8_0_const_s_fu_179_A_blk_n_R & grp_mmatmul_block_q4_0_const_block_q8_0_const_s_fu_179_A_blk_n_AR) == 1'b0)));
end

always @ (*) begin
    ap_block_state11_pp0_stage1_iter1 = (((grp_mmatmul_block_q4_0_const_block_q8_0_const_s_fu_179_B_blk_n_R & grp_mmatmul_block_q4_0_const_block_q8_0_const_s_fu_179_B_blk_n_AR) == 1'b0) | ((grp_mmatmul_block_q4_0_const_block_q8_0_const_s_fu_179_A_blk_n_R & grp_mmatmul_block_q4_0_const_block_q8_0_const_s_fu_179_A_blk_n_AR) == 1'b0));
end

always @ (*) begin
    ap_block_state12_pp0_stage2_iter1 = (((grp_mmatmul_block_q4_0_const_block_q8_0_const_s_fu_179_B_blk_n_R & grp_mmatmul_block_q4_0_const_block_q8_0_const_s_fu_179_B_blk_n_AR) == 1'b0) | ((grp_mmatmul_block_q4_0_const_block_q8_0_const_s_fu_179_A_blk_n_R & grp_mmatmul_block_q4_0_const_block_q8_0_const_s_fu_179_A_blk_n_AR) == 1'b0));
end

always @ (*) begin
    ap_block_state13_pp0_stage3_iter1 = (((grp_mmatmul_block_q4_0_const_block_q8_0_const_s_fu_179_B_blk_n_R & grp_mmatmul_block_q4_0_const_block_q8_0_const_s_fu_179_B_blk_n_AR) == 1'b0) | ((grp_mmatmul_block_q4_0_const_block_q8_0_const_s_fu_179_A_blk_n_R & grp_mmatmul_block_q4_0_const_block_q8_0_const_s_fu_179_A_blk_n_AR) == 1'b0));
end

always @ (*) begin
    ap_block_state14_pp0_stage4_iter1 = (((grp_mmatmul_block_q4_0_const_block_q8_0_const_s_fu_179_B_blk_n_R & grp_mmatmul_block_q4_0_const_block_q8_0_const_s_fu_179_B_blk_n_AR) == 1'b0) | ((grp_mmatmul_block_q4_0_const_block_q8_0_const_s_fu_179_A_blk_n_R & grp_mmatmul_block_q4_0_const_block_q8_0_const_s_fu_179_A_blk_n_AR) == 1'b0));
end

always @ (*) begin
    ap_block_state15_pp0_stage5_iter1 = (((grp_mmatmul_block_q4_0_const_block_q8_0_const_s_fu_179_B_blk_n_R & grp_mmatmul_block_q4_0_const_block_q8_0_const_s_fu_179_B_blk_n_AR) == 1'b0) | ((grp_mmatmul_block_q4_0_const_block_q8_0_const_s_fu_179_A_blk_n_R & grp_mmatmul_block_q4_0_const_block_q8_0_const_s_fu_179_A_blk_n_AR) == 1'b0));
end

always @ (*) begin
    ap_block_state16_pp0_stage6_iter1 = (((grp_mmatmul_block_q4_0_const_block_q8_0_const_s_fu_179_B_blk_n_R & grp_mmatmul_block_q4_0_const_block_q8_0_const_s_fu_179_B_blk_n_AR) == 1'b0) | ((grp_mmatmul_block_q4_0_const_block_q8_0_const_s_fu_179_A_blk_n_R & grp_mmatmul_block_q4_0_const_block_q8_0_const_s_fu_179_A_blk_n_AR) == 1'b0));
end

always @ (*) begin
    ap_block_state17_pp0_stage7_iter1 = (((grp_mmatmul_block_q4_0_const_block_q8_0_const_s_fu_179_B_blk_n_R & grp_mmatmul_block_q4_0_const_block_q8_0_const_s_fu_179_B_blk_n_AR) == 1'b0) | ((grp_mmatmul_block_q4_0_const_block_q8_0_const_s_fu_179_A_blk_n_R & grp_mmatmul_block_q4_0_const_block_q8_0_const_s_fu_179_A_blk_n_AR) == 1'b0));
end

always @ (*) begin
    ap_block_state18_pp0_stage8_iter1 = (((grp_mmatmul_block_q4_0_const_block_q8_0_const_s_fu_179_B_blk_n_R & grp_mmatmul_block_q4_0_const_block_q8_0_const_s_fu_179_B_blk_n_AR) == 1'b0) | ((grp_mmatmul_block_q4_0_const_block_q8_0_const_s_fu_179_A_blk_n_R & grp_mmatmul_block_q4_0_const_block_q8_0_const_s_fu_179_A_blk_n_AR) == 1'b0));
end

always @ (*) begin
    ap_block_state19_pp0_stage0_iter2 = ((icmp_ln76_reg_462_pp0_iter1_reg == 1'd0) & (((grp_mmatmul_block_q4_0_const_block_q8_0_const_s_fu_179_B_blk_n_R & grp_mmatmul_block_q4_0_const_block_q8_0_const_s_fu_179_B_blk_n_AR) == 1'b0) | ((grp_mmatmul_block_q4_0_const_block_q8_0_const_s_fu_179_A_blk_n_R & grp_mmatmul_block_q4_0_const_block_q8_0_const_s_fu_179_A_blk_n_AR) == 1'b0)));
end

always @ (*) begin
    ap_block_state20_pp0_stage1_iter2 = (((grp_mmatmul_block_q4_0_const_block_q8_0_const_s_fu_179_B_blk_n_R & grp_mmatmul_block_q4_0_const_block_q8_0_const_s_fu_179_B_blk_n_AR) == 1'b0) | ((grp_mmatmul_block_q4_0_const_block_q8_0_const_s_fu_179_A_blk_n_R & grp_mmatmul_block_q4_0_const_block_q8_0_const_s_fu_179_A_blk_n_AR) == 1'b0));
end

always @ (*) begin
    ap_block_state21_pp0_stage2_iter2 = (((grp_mmatmul_block_q4_0_const_block_q8_0_const_s_fu_179_B_blk_n_R & grp_mmatmul_block_q4_0_const_block_q8_0_const_s_fu_179_B_blk_n_AR) == 1'b0) | ((grp_mmatmul_block_q4_0_const_block_q8_0_const_s_fu_179_A_blk_n_R & grp_mmatmul_block_q4_0_const_block_q8_0_const_s_fu_179_A_blk_n_AR) == 1'b0));
end

always @ (*) begin
    ap_block_state22_pp0_stage3_iter2 = (((grp_mmatmul_block_q4_0_const_block_q8_0_const_s_fu_179_B_blk_n_R & grp_mmatmul_block_q4_0_const_block_q8_0_const_s_fu_179_B_blk_n_AR) == 1'b0) | ((grp_mmatmul_block_q4_0_const_block_q8_0_const_s_fu_179_A_blk_n_R & grp_mmatmul_block_q4_0_const_block_q8_0_const_s_fu_179_A_blk_n_AR) == 1'b0));
end

always @ (*) begin
    ap_block_state23_pp0_stage4_iter2 = (((grp_mmatmul_block_q4_0_const_block_q8_0_const_s_fu_179_B_blk_n_R & grp_mmatmul_block_q4_0_const_block_q8_0_const_s_fu_179_B_blk_n_AR) == 1'b0) | ((grp_mmatmul_block_q4_0_const_block_q8_0_const_s_fu_179_A_blk_n_R & grp_mmatmul_block_q4_0_const_block_q8_0_const_s_fu_179_A_blk_n_AR) == 1'b0));
end

always @ (*) begin
    ap_block_state24_pp0_stage5_iter2 = (((grp_mmatmul_block_q4_0_const_block_q8_0_const_s_fu_179_B_blk_n_R & grp_mmatmul_block_q4_0_const_block_q8_0_const_s_fu_179_B_blk_n_AR) == 1'b0) | ((grp_mmatmul_block_q4_0_const_block_q8_0_const_s_fu_179_A_blk_n_R & grp_mmatmul_block_q4_0_const_block_q8_0_const_s_fu_179_A_blk_n_AR) == 1'b0));
end

always @ (*) begin
    ap_block_state25_pp0_stage6_iter2 = (((grp_mmatmul_block_q4_0_const_block_q8_0_const_s_fu_179_B_blk_n_R & grp_mmatmul_block_q4_0_const_block_q8_0_const_s_fu_179_B_blk_n_AR) == 1'b0) | ((grp_mmatmul_block_q4_0_const_block_q8_0_const_s_fu_179_A_blk_n_R & grp_mmatmul_block_q4_0_const_block_q8_0_const_s_fu_179_A_blk_n_AR) == 1'b0));
end

always @ (*) begin
    ap_block_state26_pp0_stage7_iter2 = (((grp_mmatmul_block_q4_0_const_block_q8_0_const_s_fu_179_B_blk_n_R & grp_mmatmul_block_q4_0_const_block_q8_0_const_s_fu_179_B_blk_n_AR) == 1'b0) | ((grp_mmatmul_block_q4_0_const_block_q8_0_const_s_fu_179_A_blk_n_R & grp_mmatmul_block_q4_0_const_block_q8_0_const_s_fu_179_A_blk_n_AR) == 1'b0));
end

always @ (*) begin
    ap_block_state28_pp0_stage0_iter3 = ((icmp_ln76_reg_462_pp0_iter2_reg == 1'd0) & (((grp_mmatmul_block_q4_0_const_block_q8_0_const_s_fu_179_B_blk_n_R & grp_mmatmul_block_q4_0_const_block_q8_0_const_s_fu_179_B_blk_n_AR) == 1'b0) | ((grp_mmatmul_block_q4_0_const_block_q8_0_const_s_fu_179_A_blk_n_R & grp_mmatmul_block_q4_0_const_block_q8_0_const_s_fu_179_A_blk_n_AR) == 1'b0)));
end

always @ (*) begin
    ap_block_state29_pp0_stage1_iter3 = (((grp_mmatmul_block_q4_0_const_block_q8_0_const_s_fu_179_B_blk_n_R & grp_mmatmul_block_q4_0_const_block_q8_0_const_s_fu_179_B_blk_n_AR) == 1'b0) | ((grp_mmatmul_block_q4_0_const_block_q8_0_const_s_fu_179_A_blk_n_R & grp_mmatmul_block_q4_0_const_block_q8_0_const_s_fu_179_A_blk_n_AR) == 1'b0));
end

always @ (*) begin
    ap_block_state30_pp0_stage2_iter3 = (((grp_mmatmul_block_q4_0_const_block_q8_0_const_s_fu_179_B_blk_n_R & grp_mmatmul_block_q4_0_const_block_q8_0_const_s_fu_179_B_blk_n_AR) == 1'b0) | ((grp_mmatmul_block_q4_0_const_block_q8_0_const_s_fu_179_A_blk_n_R & grp_mmatmul_block_q4_0_const_block_q8_0_const_s_fu_179_A_blk_n_AR) == 1'b0));
end

always @ (*) begin
    ap_block_state31_pp0_stage3_iter3 = (((grp_mmatmul_block_q4_0_const_block_q8_0_const_s_fu_179_B_blk_n_R & grp_mmatmul_block_q4_0_const_block_q8_0_const_s_fu_179_B_blk_n_AR) == 1'b0) | ((grp_mmatmul_block_q4_0_const_block_q8_0_const_s_fu_179_A_blk_n_R & grp_mmatmul_block_q4_0_const_block_q8_0_const_s_fu_179_A_blk_n_AR) == 1'b0));
end

always @ (*) begin
    ap_block_state32_pp0_stage4_iter3 = (((grp_mmatmul_block_q4_0_const_block_q8_0_const_s_fu_179_B_blk_n_R & grp_mmatmul_block_q4_0_const_block_q8_0_const_s_fu_179_B_blk_n_AR) == 1'b0) | ((grp_mmatmul_block_q4_0_const_block_q8_0_const_s_fu_179_A_blk_n_R & grp_mmatmul_block_q4_0_const_block_q8_0_const_s_fu_179_A_blk_n_AR) == 1'b0));
end

always @ (*) begin
    ap_block_state33_pp0_stage5_iter3 = (((grp_mmatmul_block_q4_0_const_block_q8_0_const_s_fu_179_B_blk_n_R & grp_mmatmul_block_q4_0_const_block_q8_0_const_s_fu_179_B_blk_n_AR) == 1'b0) | ((grp_mmatmul_block_q4_0_const_block_q8_0_const_s_fu_179_A_blk_n_R & grp_mmatmul_block_q4_0_const_block_q8_0_const_s_fu_179_A_blk_n_AR) == 1'b0));
end

always @ (*) begin
    ap_block_state34_pp0_stage6_iter3 = (((grp_mmatmul_block_q4_0_const_block_q8_0_const_s_fu_179_B_blk_n_R & grp_mmatmul_block_q4_0_const_block_q8_0_const_s_fu_179_B_blk_n_AR) == 1'b0) | ((grp_mmatmul_block_q4_0_const_block_q8_0_const_s_fu_179_A_blk_n_R & grp_mmatmul_block_q4_0_const_block_q8_0_const_s_fu_179_A_blk_n_AR) == 1'b0));
end

always @ (*) begin
    ap_block_state36_pp0_stage8_iter3 = (((grp_mmatmul_block_q4_0_const_block_q8_0_const_s_fu_179_B_blk_n_R & grp_mmatmul_block_q4_0_const_block_q8_0_const_s_fu_179_B_blk_n_AR) == 1'b0) | ((grp_mmatmul_block_q4_0_const_block_q8_0_const_s_fu_179_A_blk_n_R & grp_mmatmul_block_q4_0_const_block_q8_0_const_s_fu_179_A_blk_n_AR) == 1'b0));
end

always @ (*) begin
    ap_block_state9_pp0_stage8_iter0 = ((icmp_ln76_reg_462 == 1'd0) & (((grp_mmatmul_block_q4_0_const_block_q8_0_const_s_fu_179_B_blk_n_R & grp_mmatmul_block_q4_0_const_block_q8_0_const_s_fu_179_B_blk_n_AR) == 1'b0) | ((grp_mmatmul_block_q4_0_const_block_q8_0_const_s_fu_179_A_blk_n_R & grp_mmatmul_block_q4_0_const_block_q8_0_const_s_fu_179_A_blk_n_AR) == 1'b0)));
end

assign ap_enable_pp0 = (ap_idle_pp0 ^ 1'b1);

assign ap_loop_exit_ready = ap_condition_exit_pp0_iter0_stage8;

assign bb_fu_370_p2 = (tmp2_fu_365_p2 + p_shl_fu_349_p3);

assign empty_35_fu_345_p1 = grp_fu_201_p2[58:0];

assign grp_fu_201_p2 = (reg_197 + zext_ln72_cast_reg_457);

assign grp_mmatmul_block_q4_0_const_block_q8_0_const_s_fu_179_ap_start = grp_mmatmul_block_q4_0_const_block_q8_0_const_s_fu_179_ap_start_reg;

assign i_3_fu_316_p2 = (select_ln76_fu_262_p3 + 4'd1);

assign icmp_ln76_fu_241_p2 = ((ap_sig_allocacmp_indvar_flatten_load == mul_ln97) ? 1'b1 : 1'b0);

assign icmp_ln78_fu_235_p2 = ((zext_ln78_fu_231_p1 == RM) ? 1'b1 : 1'b0);

assign j_4_fu_256_p2 = (ap_sig_allocacmp_j_load + 8'd1);

assign m_axi_A_ARADDR = grp_mmatmul_block_q4_0_const_block_q8_0_const_s_fu_179_m_axi_A_ARADDR;

assign m_axi_A_ARBURST = grp_mmatmul_block_q4_0_const_block_q8_0_const_s_fu_179_m_axi_A_ARBURST;

assign m_axi_A_ARCACHE = grp_mmatmul_block_q4_0_const_block_q8_0_const_s_fu_179_m_axi_A_ARCACHE;

assign m_axi_A_ARID = grp_mmatmul_block_q4_0_const_block_q8_0_const_s_fu_179_m_axi_A_ARID;

assign m_axi_A_ARLEN = grp_mmatmul_block_q4_0_const_block_q8_0_const_s_fu_179_m_axi_A_ARLEN;

assign m_axi_A_ARLOCK = grp_mmatmul_block_q4_0_const_block_q8_0_const_s_fu_179_m_axi_A_ARLOCK;

assign m_axi_A_ARPROT = grp_mmatmul_block_q4_0_const_block_q8_0_const_s_fu_179_m_axi_A_ARPROT;

assign m_axi_A_ARQOS = grp_mmatmul_block_q4_0_const_block_q8_0_const_s_fu_179_m_axi_A_ARQOS;

assign m_axi_A_ARREGION = grp_mmatmul_block_q4_0_const_block_q8_0_const_s_fu_179_m_axi_A_ARREGION;

assign m_axi_A_ARSIZE = grp_mmatmul_block_q4_0_const_block_q8_0_const_s_fu_179_m_axi_A_ARSIZE;

assign m_axi_A_ARUSER = grp_mmatmul_block_q4_0_const_block_q8_0_const_s_fu_179_m_axi_A_ARUSER;

assign m_axi_A_AWADDR = 64'd0;

assign m_axi_A_AWBURST = 2'd0;

assign m_axi_A_AWCACHE = 4'd0;

assign m_axi_A_AWID = 1'd0;

assign m_axi_A_AWLEN = 32'd0;

assign m_axi_A_AWLOCK = 2'd0;

assign m_axi_A_AWPROT = 3'd0;

assign m_axi_A_AWQOS = 4'd0;

assign m_axi_A_AWREGION = 4'd0;

assign m_axi_A_AWSIZE = 3'd0;

assign m_axi_A_AWUSER = 1'd0;

assign m_axi_A_AWVALID = 1'b0;

assign m_axi_A_BREADY = 1'b0;

assign m_axi_A_WDATA = 256'd0;

assign m_axi_A_WID = 1'd0;

assign m_axi_A_WLAST = 1'b0;

assign m_axi_A_WSTRB = 32'd0;

assign m_axi_A_WUSER = 1'd0;

assign m_axi_A_WVALID = 1'b0;

assign m_axi_B_ARADDR = grp_mmatmul_block_q4_0_const_block_q8_0_const_s_fu_179_m_axi_B_ARADDR;

assign m_axi_B_ARBURST = grp_mmatmul_block_q4_0_const_block_q8_0_const_s_fu_179_m_axi_B_ARBURST;

assign m_axi_B_ARCACHE = grp_mmatmul_block_q4_0_const_block_q8_0_const_s_fu_179_m_axi_B_ARCACHE;

assign m_axi_B_ARID = grp_mmatmul_block_q4_0_const_block_q8_0_const_s_fu_179_m_axi_B_ARID;

assign m_axi_B_ARLEN = grp_mmatmul_block_q4_0_const_block_q8_0_const_s_fu_179_m_axi_B_ARLEN;

assign m_axi_B_ARLOCK = grp_mmatmul_block_q4_0_const_block_q8_0_const_s_fu_179_m_axi_B_ARLOCK;

assign m_axi_B_ARPROT = grp_mmatmul_block_q4_0_const_block_q8_0_const_s_fu_179_m_axi_B_ARPROT;

assign m_axi_B_ARQOS = grp_mmatmul_block_q4_0_const_block_q8_0_const_s_fu_179_m_axi_B_ARQOS;

assign m_axi_B_ARREGION = grp_mmatmul_block_q4_0_const_block_q8_0_const_s_fu_179_m_axi_B_ARREGION;

assign m_axi_B_ARSIZE = grp_mmatmul_block_q4_0_const_block_q8_0_const_s_fu_179_m_axi_B_ARSIZE;

assign m_axi_B_ARUSER = grp_mmatmul_block_q4_0_const_block_q8_0_const_s_fu_179_m_axi_B_ARUSER;

assign m_axi_B_AWADDR = 64'd0;

assign m_axi_B_AWBURST = 2'd0;

assign m_axi_B_AWCACHE = 4'd0;

assign m_axi_B_AWID = 1'd0;

assign m_axi_B_AWLEN = 32'd0;

assign m_axi_B_AWLOCK = 2'd0;

assign m_axi_B_AWPROT = 3'd0;

assign m_axi_B_AWQOS = 4'd0;

assign m_axi_B_AWREGION = 4'd0;

assign m_axi_B_AWSIZE = 3'd0;

assign m_axi_B_AWUSER = 1'd0;

assign m_axi_B_AWVALID = 1'b0;

assign m_axi_B_BREADY = 1'b0;

assign m_axi_B_WDATA = 512'd0;

assign m_axi_B_WID = 1'd0;

assign m_axi_B_WLAST = 1'b0;

assign m_axi_B_WSTRB = 64'd0;

assign m_axi_B_WUSER = 1'd0;

assign m_axi_B_WVALID = 1'b0;

assign p_shl1_fu_357_p3 = {{grp_fu_201_p2}, {1'd0}};

assign p_shl_fu_349_p3 = {{empty_35_fu_345_p1}, {5'd0}};

assign select_ln76_1_fu_270_p3 = ((icmp_ln78_fu_235_p2[0:0] == 1'b1) ? j_4_fu_256_p2 : ap_sig_allocacmp_j_load);

assign select_ln76_fu_262_p3 = ((icmp_ln78_fu_235_p2[0:0] == 1'b1) ? 4'd0 : ap_sig_allocacmp_i_2);

assign shl_ln80_1_fu_388_p3 = {{grp_fu_201_p2}, {1'd0}};

assign shl_ln_fu_380_p3 = {{trunc_ln80_fu_376_p1}, {4'd0}};

assign sub_ln83_fu_294_p2 = (tmp_fu_286_p3 - trunc_ln83_fu_282_p1);

assign tmp2_fu_365_p2 = (p_shl1_fu_357_p3 + B_offset);

assign tmp_fu_286_p3 = {{trunc_ln76_fu_278_p1}, {2'd0}};

assign trunc_ln76_fu_278_p1 = select_ln76_1_fu_270_p3[1:0];

assign trunc_ln80_fu_376_p1 = grp_fu_201_p2[59:0];

assign trunc_ln83_fu_282_p1 = select_ln76_1_fu_270_p3[3:0];

assign zext_ln72_cast_fu_206_p1 = zext_ln72;

assign zext_ln76_fu_300_p1 = select_ln76_1_fu_270_p3;

assign zext_ln78_1_fu_337_p1 = select_ln76_reg_466;

assign zext_ln78_fu_231_p1 = ap_sig_allocacmp_i_2;

assign zext_ln83_fu_407_p1 = add_ln83_reg_476_pp0_iter6_reg;

always @ (posedge ap_clk) begin
    zext_ln72_cast_reg_457[62:31] <= 32'b00000000000000000000000000000000;
end

endmodule //sgemm_sgemm_Pipeline_VITIS_LOOP_76_1_calc_loop
